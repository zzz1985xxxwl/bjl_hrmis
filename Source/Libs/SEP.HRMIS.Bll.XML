<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SEP.HRMIS.Bll</name>
    </assembly>
    <members>
        <member name="T:SEP.HRMIS.Bll.Transaction">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Transaction.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Transaction.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Transaction.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateTrainFBQuestion.Validation">
            <summary>
            更新培训反馈问题有效性判断
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.Train.InsertFeedBackPaper">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Train.InsertFeedBackPaper.#ctor(SEP.HRMIS.Model.FeedBackPaper)">
            <summary>
            该事务执行后，会增加一张没有考评项的考评表
            异常情况:
            1.Title不可与已有Paper的Title重复，否则给出提示，事务中断
            业务流程：
            1.有效性判断
            2.如果通过有效性判断，则调用IDal层方法进行考评表新增
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Train.InsertFeedBackPaper.#ctor(SEP.HRMIS.IDal.IFeedBackPaper,SEP.HRMIS.Model.FeedBackPaper)">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.SystemErrors.UpdateSystemErrorStatus">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.UpdateSystemErrorStatus.#ctor(SEP.HRMIS.Model.SystemError.SystemError)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.UpdateSystemErrorStatus.#ctor(SEP.HRMIS.Model.SystemError.SystemError,SEP.HRMIS.IDal.ISystemError)">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.Reimburse.GetEmployeeReimburseStatistics">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetEmployeeReimburseStatistics.SplitMonth(System.DateTime,System.DateTime)">
            <summary>
            根据开始时间、结束时间获取这段时间内的各个月的最后一天的List
            </summary>
            <param name="startDt">开始时间</param>
            <param name="endDt">结束时间</param>
            <returns>根据开始时间、结束时间获取这段时间内的各个月的最后一天的List</returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetEmployeeReimburseStatistics.DepartmentStatistics(System.DateTime,System.DateTime,System.Int32,System.Int32,System.Boolean,SEP.Model.Accounts.Account)">
            <summary>
            统计某个时间段内的某个部门以及其所有子部门的员工的报销统计情况
            </summary>
            <param name="startDt">统计的开始时间</param>
            <param name="endDt">统计的结束时间</param>
            <param name="departmentID">统计的部门编号</param>
            <returns></returns>
            <param name="companyID"></param>
            <param name="isIncludeChildDeptMember"></param>
            <param name="loginUser"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetEmployeeReimburseStatistics.FindAllEmployeeByDepAndTime(System.Collections.Generic.List{SEP.Model.Departments.Department},SEP.Model.Departments.Department,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Boolean)">
            <summary>
            找出某一时刻，某一部门下的所有员工，包括子部门
            </summary>
            <param name="departmentList"></param>
            <param name="department"></param>
            <returns></returns>
            <param name="AccountsSource"></param>
            <param name="isIncludeChildDeptMember"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetEmployeeReimburseStatistics.CaculateSumReimburseStatistics(System.Collections.Generic.List{SEP.HRMIS.Model.EmployeeReimburseStatistics},System.Boolean)">
            <summary>
            计算总计
            </summary>
            <param name="employeeReimburseStatisticsList"></param>
            <param name="isIncludeChildDeptMember"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetEmployeeReimburseStatistics.GetAllDepartment(System.Collections.Generic.IList{System.DateTime},System.Int32)">
            <summary>
            通过每个月的月底找出所有部门(包括子部门)
            </summary>
            <param name="Months"></param>
            <returns></returns>
            <param name="departmentID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetEmployeeReimburseStatistics.DepartmentListIsContains(System.Collections.Generic.List{SEP.Model.Departments.Department},SEP.Model.Departments.Department)">
            <summary>
            判断DepartmentList是否包含同名的部门
            </summary>
            <param name="departmentList"></param>
            <param name="department"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetEmployeeReimburseStatistics.EmployeeStatistics(System.DateTime,System.DateTime,System.Int32,System.Int32,System.String,SEP.Model.Accounts.Account)">
            <summary>
            统计某个时间段内的某个部门以及其所有子部门的员工的报销统计情况
            </summary>
            <param name="startDt">统计的开始时间</param>
            <param name="endDt">统计的结束时间</param>
            <param name="departmentID">统计的部门编号</param>
            <returns></returns>
            <param name="companyID"></param>
            <param name="employeeName"></param>
            <param name="loginUser"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetEmployeeReimburseStatistics.CaculateSumEmployeeReimburseStatistics(System.Collections.Generic.List{SEP.HRMIS.Model.EmployeeReimburseStatistics})">
            <summary>
            计算总计
            </summary>
            <param name="employeeReimburseStatisticsList"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.Tax.CreateTaxBand.#ctor(System.Decimal,System.Decimal,SEP.HRMIS.IDal.PayModule.ITax)">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CloseEmployeeSalary">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CloseEmployeeSalary.#ctor(System.DateTime,System.String,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            </summary>
            <param name="dt"></param>
            <param name="backAcountsName"></param>
            <param name="description"></param>
            <param name="companyId"></param>
            <param name="isSendEmail"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CloseEmployeeSalary.#ctor(System.DateTime,System.String,System.String,System.Int32,SEP.HRMIS.IDal.PayModule.IEmployeeSalary)">
            <summary>
                测试
            </summary>
            <param name="dt"></param>
            <param name="backAcountsName"></param>
            <param name="description"></param>
            <param name="companyId"></param>
            <param name="mockSalary"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CloseEmployeeSalary.MockGetEmployee">
            <summary>
                测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CloseEmployeeSalary.NameMessge">
            <summary>
                错误消息
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkPhone.SendSubmitPhone(System.Int32)">
            <summary>
            发送提交短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkPhone.SendCancelPhone(System.Int32,System.Int32)">
            <summary>
            发送取消短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkPhone.SendPhoneToNextOperator(System.Int32,System.Int32,SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            发送短信给下一步处理人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkPhone.SendConfirmOverPhone(System.Int32,System.Int32)">
            <summary>
            发送审核结束短信
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMailAndPhoneDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMailAndPhoneDelegate.SubmitOperation(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            发送提交邮件短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMailAndPhoneDelegate.CancelOperation(System.Int32,System.Int32)">
            <summary>
            发送取消短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMailAndPhoneDelegate.CancelOperationMail(System.Int32)">
            <summary>
            发送取消邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMailAndPhoneDelegate.ConfirmOperation(System.Int32,System.Int32,SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMailAndPhoneDelegate.ConfirmOperationMail(System.Int32,SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.CalculateCostHour">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CalculateCostHour.#ctor(System.DateTime,System.DateTime,SEP.HRMIS.Model.Request.RequestStatus,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="requestStatus"></param>
            <param name="accountID"></param>
            <param name="leaveRequestTypeID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.CalculateCostHour.#ctor(System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="accountID"></param>
            <param name="leaveRequestTypeID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.CalculateCostHour.#ctor(System.DateTime,System.DateTime,System.Int32,System.Int32,SEP.HRMIS.IDal.ILeaveRequestType,SEP.HRMIS.IDal.IPlanDutyDal)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CalculateCostHour.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CalculateCostHour.TestCalculate(System.Decimal,System.Boolean,System.Boolean,System.Decimal,System.Collections.Generic.List{SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.PlanDutyDetail},SEP.Model.SpecialDates.CalculateDays)">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.CalculateCostHour.DayAttendanceList">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequestTypes.AddLeaveRequestType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.AddLeaveRequestType.#ctor(SEP.HRMIS.Model.Request.LeaveRequestType)">
            <summary>
            
            </summary>
            <param name="leaveRequestType"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.AddLeaveRequestType.#ctor(SEP.HRMIS.Model.Request.LeaveRequestType,SEP.HRMIS.IDal.ILeaveRequestType)">
            <summary>
            for test
            </summary>
            <param name="leaveRequestType"></param>
            <param name="mockILeaveRequestType"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.IAddSystemSetCondition">
            <summary>
            自动生成考核条件借口
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.IAddSystemSetCondition.AddSystemSetCondition(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition},System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            自动生成考核条件
            </summary>
            <param name="applyAssessConditions"></param>
            <param name="contractStartTime"></param>
            <param name="contractEndTime"></param>
            <param name="employeeComeDate"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestCancelPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestCancelPhone.#ctor(System.Int32,SEP.HRMIS.Model.Request.LeaveRequestItem,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="leaveRequestID"></param>
            <param name="item"></param>
            <param name="nextStep"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestCancelPhone.SendPhone">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.AddVacationByLeaveReuqest">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.AddVacationByLeaveReuqest.#ctor(System.Collections.Generic.List{SEP.HRMIS.Model.Request.LeaveRequestItem})">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.AddVacationByLeaveReuqest.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindServerUtility">
            <summary>
            自动提醒功能公共方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindServerUtility.#ctor(SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess)">
            <summary>
            构造函数
            </summary>
            <param name="getDiyProcess"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindServerUtility.GetMailBodyByEmail(System.Collections.Generic.List{Mail.Model.MailBody},System.String)">
            <summary>
             查找mailBodyListToHR中已有的email
            </summary>
            <param name="mailBodyListToHR"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindServerUtility.CreateHREmail(System.Int32,System.Collections.Generic.List{Mail.Model.MailBody},System.String,System.String)">
            <summary>
            创建发给人事邮件，整理email信息，如果人事的邮件已经在mailBodyListToHR中，那么追加邮件body内容，否则新增一条MailBody
            </summary>
            <param name="accountid"></param>
            <param name="mailBodyListToHR"></param>
            <param name="body"></param>
            <param name="distributeString"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindServerUtility.GenerateEmailInfo(System.Collections.Generic.List{Mail.Model.MailBody},System.String,System.String,System.String)">
            <summary>
            整理email信息，如果mailBodyListToHR以有相同地址，则追加邮件内容信息，否则新增邮件
            </summary>
            <param name="mailBodyListToHR"></param>
            <param name="body"></param>
            <param name="distributeString"></param>
            <param name="email"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ImportTemplatePaper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ImportTemplatePaper.InsertTemplatePaper(System.Data.DataSet)">
            <summary>
            更新员工的帐套
            </summary>
            <param name="ds"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ImportTemplatePaper.LoadDataFromExcel(System.String)">
            <summary>
            加载Excel 
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.ActiveFlow">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ActiveFlow.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ActiveFlow.#ctor(SEP.HRMIS.IDal.IAssessActivity)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ActiveFlow.ExcuteFlow">
            <summary>
            根据期望的状态，处理不同的事情
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ActiveFlow.DoHrConfirming">
            <summary>
            发起考评
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AssessActivity.ActiveFlow.AssessActivity">
            <summary>
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AssessActivity.ActiveFlow.AssessStatus">
            <summary>
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AssessActivity.ActiveFlow.SetCalculateScore">
            <summary>
            可以设置计算分值的不同实现
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AssessActivity.ActiveFlow.IsSubmit">
            <summary>
            是否提交
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AdvanceSearch.AdvanceSearchEmployee">
            <summary>
            高级查询
            原本做法先访问数据库加载出所有的信息，后调用EmployeeDoSearch在内存中比对
            发现此做法在数据库访问中使用了较多时间，因次改动方法，
            先加载需要比对的信息，而后在EmployeeDoSearch结束后筛选了大量数据，再访问数据库加载剩余信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdvanceSearch.AdvanceSearchEmployee.#ctor(System.Collections.Generic.List{AdvancedCondition.SearchField},SEP.Model.Accounts.Account)">
            <summary>
            构造函数
            </summary>
            <param name="searchFieldList"></param>
            <param name="operatorAccount"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdvanceSearch.AdvanceSearchEmployee.DoAdvanceSearchEmployee">
            <summary>
            进行查询
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.Requests.CalculateHourUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Requests.CalculateHourUtility.InitPlanDuty(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.MorningStart">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.MorningEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.AfternoonStart">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.AfternoonEnd">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.FixMorningStart">
            <summary>
            8:00
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.FixMorningStartTo">
            <summary>
            9:00
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.FixMorningEnd">
            <summary>
            11:30
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.FixAfternoonStart">
            <summary>
            12:30
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.FixAfternoonEnd">
            <summary>
            18:00
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.FixAfternoonEndFrom">
            <summary>
            17:00
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.Requests.CalculateHourUtility.MockIPlanDutyDal">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.RequestMessageBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.RequestMessageBase.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.Reimburse.ReturnEmployeeReimburses._DalReimburse">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.SetIsPublishApplication.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.SetIsPublishApplication.ExcuteSelf">
            <summary>
            修改
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.SetIsPublishApplication.Validation">
            <summary>
            有效性判断
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.Tax.GetTax.#ctor(SEP.HRMIS.IDal.PayModule.ITax)">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkSubmitMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkSubmitMail.#ctor(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkSubmitMail.SendMail">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkErrorMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkErrorMail.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkErrorMail.Send">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.OutDiyProcessUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.OutDiyProcessUtility.GetNextOperator(SEP.HRMIS.Model.DiyProcesss.DiyProcess,SEP.HRMIS.Model.OutApplication.OutApplicationItem,System.Int32)">
            <summary>
            
            </summary>
            <param name="diyProcess"></param>
            <param name="item"></param>
            <param name="accountId">谁都流程</param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.OutDiyProcessUtility.GetNextOperator(SEP.HRMIS.Model.DiyProcesss.DiyProcess,System.Int32,System.Int32)">
            <summary>
            得到当前这部的下一步审核人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.OutDiyProcessUtility.GetOutDiyProcessByAccountID(System.Int32)">
            <summary>
            
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.OutDiyProcessUtility.GetNextStep(System.Collections.Generic.List{SEP.HRMIS.Model.OutApplication.OutApplicationFlow},SEP.HRMIS.Model.DiyProcesss.DiyProcess)">
            <summary> 
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.OutDiyProcessUtility.GetMailCC(System.Collections.Generic.List{SEP.HRMIS.Model.OutApplication.OutApplicationFlow},SEP.HRMIS.Model.DiyProcesss.DiyProcess)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.OutDiyProcessUtility.GetLastMailCC(SEP.HRMIS.Model.DiyProcesss.DiyProcess)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequestTypes.GetLeaveRequestType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.GetLeaveRequestType.GetLeaveRequestTypeByPkid(System.Int32)">
            <summary>
            
            </summary>
            <param name="pkid"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.GetLeaveRequestType.GetLeaveRequestTypeByName(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.GetLeaveRequestType.GetLeaveRequestTypeByNameLike(System.String)">
            <summary>
            
            </summary>
            <param name="nameLike"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.GetLeaveRequestType.GetAllLeaveRequestType">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.GetLeaveRequestType.GetAllLeaveTypeNames">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddSystemSetConditionForPractice">
            <summary>
            系统自动生成发起考评条件（实习生）
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSystemSetConditionForPractice.AddSystemSetCondition(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition},System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            实现IAddSystemSetCondition，将信息填充到conditions中
            </summary>
            <param name="conditions"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="employeeComeDate"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.RecordBadAttendance.IsLoginUserManage(SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            判断登陆用户是否可以为员工添加考评纪录
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddDepartmentHistory">
            <summary>
            新增部门历史，拍下当时组织结构所有信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddDepartmentHistory.#ctor(SEP.Model.Accounts.Account)">
            <summary>
            构造函数
            </summary>
            <param name="operatorAccount"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddDepartmentHistory.#ctor(SEP.Model.Accounts.Account,SEP.IBll.Departments.IDepartmentBll,SEP.HRMIS.IDal.IDepartmentHistory)">
            <summary>
            构造函数
            </summary>
            <param name="operatorAccount"></param>
            <param name="mockDepartmentBll"></param>
            <param name="mockDalDepartmentHistory"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.MailAndPhoneUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.MailAndPhoneUtility.GetMailToAccount(SEP.HRMIS.Model.Request.LeaveRequest,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="leaveRequest"></param>
            <param name="nextStep"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.FillItems">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillItems.ValidateAnswersFromUi">
            <summary>
            验证从界面传入的Answers是正确的，并且填写有效的Item(介于性能考虑，将2件事情放在一起做了)
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AssessActivity.FillItems.SetActiveFlow">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.CustomerInfos.UpdateCustomerInfo">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CustomerInfos.UpdateCustomerInfo.#ctor(SEP.HRMIS.Model.CustomerInfo)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CustomerInfos.UpdateCustomerInfo.#ctor(SEP.HRMIS.Model.CustomerInfo,SEP.HRMIS.IDal.ICustomerInfoDal)">
            <summary>
            test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.FillComment">
            <summary>
            填写Comment的事务
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillComment.#ctor(System.Int32,System.String)">
            <summary>
            填写Comment的事务
            </summary>
            <param name="activityId"></param>
            <param name="currentEmployeeName"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillComment.#ctor(System.Int32,System.String,SEP.HRMIS.IDal.IAssessActivity)">
            <summary>
            填写Comment的事务
            </summary>
            <param name="activityId"></param>
            <param name="currentEmployeeName"></param>
            <param name="assessActivity"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AssessActivity.FillComment.SetActiveFlow">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.CalculateScore">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.CalculateScore.CalculateScores(SEP.HRMIS.Model.AssessActivity)">
            <summary>
            
            </summary>
            <param name="assessActivity"></param>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.AssessActivity.CalculateScore.MockAssessActivity">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AdvanceSearch.ContractDoSearch">
            <summary>
            高级查询合同
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdvanceSearch.ContractDoSearch.#ctor(System.Collections.Generic.List{SEP.HRMIS.Model.Contract},System.Collections.Generic.List{AdvancedCondition.SearchField})">
            <summary>
            构造函数
            </summary>
            <param name="contractList"></param>
            <param name="searchFieldList"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AdvanceSearch.ContractDoSearch.MockIDepartmentBll">
            <summary>
            为测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AdvanceSearch.ContractDoSearch.ContractList">
            <summary>
            获得检索后的Contract列表
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AdvanceSearch.AdvanceSearchContract">
            <summary>
            高级查询合同
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdvanceSearch.AdvanceSearchContract.#ctor(System.Collections.Generic.List{AdvancedCondition.SearchField},SEP.Model.Accounts.Account)">
            <summary>
            构造函数
            </summary>
            <param name="searchFieldList"></param>
            <param name="operatorAccount"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdvanceSearch.AdvanceSearchContract.DoAdvanceSearchContract">
            <summary>
            进行查询
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddTrainCourse">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddTrainCourse.#ctor(SEP.HRMIS.Model.Course,System.Collections.Generic.List{SEP.HRMIS.Model.Skill},System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.Model.Accounts.Account)">
            <summary>
            </summary>
            <param name="course"></param>
            <param name="skills"></param>
            <param name="employees"></param>
            <param name="loginUser"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddTrainCourse.#ctor(SEP.HRMIS.Model.Course,System.Collections.Generic.List{SEP.HRMIS.Model.Skill},System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.IDal.ITrain,SEP.HRMIS.IDal.IFeedBackPaper,SEP.HRMIS.IDal.IEmployee,SEP.IBll.Accounts.IAccountBll,SEP.Model.Accounts.Account)">
            <summary>
            AddTrainCourse的构造函数，专为测试提供
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddTrainCourse.ExcuteSelf">
            <summary>
            调用下层的新增课程的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddTrainCourse.IsLoginUserManage(SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            判断登陆用户是否可以选择该协调员
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddFBQuesType.Validation">
            <summary>
            新增反馈问题类型有效性判断
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailConfirm">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailConfirm.#ctor(SEP.HRMIS.Model.TraineeApplications.TraineeApplication,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailConfirm.SendMailToNextOperator(SEP.Model.Accounts.Account)">
            <summary>
            给下一步操作人发邮件
            </summary>
            <param name="nextOperator"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.RequestMessageUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.RequestMessageUtility.GetDateTime(System.String)">
            <summary>
            把如200809170900的字符串转换为时间格式，如果转换是否则返回null
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.RequestMessageUtility.GetElement(System.String)">
            <summary>
            把如“请假 外出  辅导课”的字符串，通过空格将其划分（当中的空格数可以任意），如果该字符串为空，则返回null
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.OutApplicationConfirm">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.BasicConfirm">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.BasicConfirm.#ctor(SEP.HRMIS.Model.PhoneMessage.PhoneMessage)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.BasicConfirm.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.BasicConfirm.ExcuteSelf">
            <summary>
            对审核结果进行数据更新
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.BasicConfirm.SendManagerMessage">
            <summary>
            发送审核成功短信给主管
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.BasicConfirm.IsSendAnswerMessage">
            <summary>
            是否发送短信给主管
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.BasicConfirm.PhoneMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.BasicConfirm.Operation">
            <summary>
            审核结果，同意或不同意
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.BasicConfirm.Remark">
            <summary>
            备注
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.OutApplicationConfirm.#ctor(SEP.HRMIS.Model.PhoneMessage.PhoneMessage)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.Reimburse.DeleteReimburse._DalReimburse">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.DeleteReimburse.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationOverMail.#ctor(System.Int32,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="positionApplicationID"></param>
            <param name="currentStep"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationOverMail.ConfirmOverMail">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationMail.SendSubmitMail(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Collections.Generic.List{System.String},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送提交邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationMail.SendCancelMail(System.Int32,System.Collections.Generic.List{System.String},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送取消邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationMail.SendMailToNextOperator(System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            发送邮件给下一步处理人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationMail.SendConfirmOverMail(System.Int32,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送审核结束邮件
            </summary>
            <param name="positionApplicationID"></param>
            <param name="currentStep"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationMail.BuildBody(SEP.HRMIS.Model.PositionApp.PositionApplication)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationMail.BulidConfirmAddress(System.Text.StringBuilder,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.Tax.UpdateTaxBand.#ctor(System.Int32,System.Decimal,System.Decimal,SEP.HRMIS.IDal.PayModule.ITax)">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkOverPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkOverPhone.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkOverPhone.ConfirmOverPhone">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.CancelOutApplicationItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CancelOutApplicationItem.#ctor(System.Int32,System.String,SEP.Model.Accounts.Account)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CancelOutApplicationItem.CancelOneItem(SEP.HRMIS.Model.OutApplication.OutApplicationItem,SEP.Model.Accounts.Account,System.String,SEP.HRMIS.IDal.IOutApplication,SEP.HRMIS.Bll.OutApplications.OutDiyProcessUtility,SEP.HRMIS.Model.OutApplication.OutApplication)">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.DeleteLeaveRequest">
            <summary>
            删除请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteLeaveRequest.#ctor(System.Int32)">
            <summary>
            删除请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteLeaveRequest.#ctor(System.Int32,SEP.HRMIS.IDal.ILeaveRequestDal)">
            <summary>
            删除请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteLeaveRequest.Validation">
            <summary>
            有效性判断
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteLeaveRequest.ExcuteSelf">
            <summary>
            删除请假单
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequestTypes.UpdateLeaveRequestType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.UpdateLeaveRequestType.#ctor(SEP.HRMIS.Model.Request.LeaveRequestType)">
            <summary>
            
            </summary>
            <param name="leaveRequestType"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.UpdateLeaveRequestType.#ctor(SEP.HRMIS.Model.Request.LeaveRequestType,SEP.HRMIS.IDal.ILeaveRequestType)">
            <summary>
            test
            </summary>
            <param name="leaveRequestType"></param>
            <param name="iLeaveRequestType"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.LoadSEPInfo">
            <summary>
            加载SEP的信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LoadSEPInfo.SetEmployeeAccountInfo(System.Int32,SEP.HRMIS.Model.Employee,SEP.IBll.Accounts.IAccountBll,SEP.IBll.Departments.IDepartmentBll)">
            <summary>
            为employee填充account的信息，其中包括account中的dept
            </summary>
            <param name="accountID"></param>
            <param name="employee"></param>
            <param name="_IAccountBll"></param>
            <returns></returns>
            <param name="_IDepartmentBll"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LoadSEPInfo.SetEmployeeAccountInfo(System.Int32,SEP.HRMIS.Model.Employee,SEP.IBll.Accounts.IAccountBll,SEP.IBll.Departments.IDepartmentBll,SEP.IBll.Positions.IPositionBll)">
            <summary>
            </summary>
            <param name="accountID"></param>
            <param name="employee"></param>
            <param name="_IAccountBll"></param>
            <param name="_IDepartmentBll"></param>
            <param name="_IPositionBll"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.DeleteEmployeeContract">
            <summary>
            删除员工合同
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteEmployeeContract.#ctor(System.Int32,System.Int32)">
            <summary>
            删除员工合同构造函数
            </summary>
            <param name="contractID"></param>
            <param name="employeeID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteEmployeeContract.#ctor(System.Int32,System.Int32,SEP.HRMIS.IDal.IContract,SEP.HRMIS.IDal.IEmployee,SEP.HRMIS.IDal.IEmployeeContractBookMark)">
            <summary>
            删除员工合同构造函数，测试
            </summary>
            <param name="contractID"></param>
            <param name="employeeID"></param>
            <param name="dalContract"></param>
            <param name="dalEmployee"></param>
            <param name="dalEmployeeContractBookMark"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteEmployeeContract.ExcuteSelf">
            <summary>
            调用下层的删除员工合同的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteEmployeeContract.Validation">
            <summary>
            删除员工合同有效性判断：
            1、该员工必须是已经存在的员工
            2、该合同必须是已经存在的合同
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddApplyAssessCondition">
            <summary>
            新增发起考核条件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddApplyAssessCondition.#ctor(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition},SEP.HRMIS.Model.ApplyAssessCondition)">
            <summary>
            AddApplyAssessCondition构造函数
            </summary>
            <param name="applyAssessConditions"></param>
            <param name="applyAssessCondition"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.GetInAndOutRecordLog">
            <summary>
             获取员工打卡修改日志信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetInAndOutRecordLog.#ctor(SEP.Model.Accounts.Account)">
            <summary>
              获取员工打卡修改日志信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetInAndOutRecordLog.GetInAndOutLogByCondition(System.String,System.Int32,System.DateTime,System.DateTime,System.String,System.DateTime,System.DateTime)">
            <summary>
             条件查询员工打卡修改日志信息
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.UpdateAssessPaper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.UpdateAssessPaper.#ctor(SEP.HRMIS.Model.AssessTemplatePaper)">
            <summary>
            该事务执行后，会修改考评表的基本信息
            异常情况:
            1.当前要修改的考评表是否存在，如果不在则给出提示，事务中断
            2.PaperName不可与已有Paper的PaperName重复，否则给出提示，事务中断
            业务流程：
            1.有效性判断
            2.如果通过有效性判断，则调用IDal层方法进行考评表修改
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.UpdateAssessPaper.#ctor(SEP.HRMIS.IDal.IAssessTemplatePaper,SEP.HRMIS.IDal.IAssessTemplatePaperBindPosition,SEP.IBll.Positions.IPositionBll,SEP.HRMIS.Model.AssessTemplatePaper)">
            <summary>
            test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.AddOutApplication">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.OutApplications.AddOutApplication._OutApplicationDal">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.AddOutApplication.#ctor(SEP.HRMIS.Model.OutApplication.OutApplication,System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.IDal.IOutApplication)">
            <summary>
            test
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.AddOutApplication.#ctor(SEP.HRMIS.Model.OutApplication.OutApplication,System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.ManualAssess">
            <summary>
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.ManualAssess._Dal">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ManualAssess.#ctor(SEP.HRMIS.Model.AssessActivity)">
            <summary>
            ManualAsses的构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ManualAssess.#ctor(SEP.HRMIS.Model.AssessActivity,SEP.HRMIS.IDal.IAssessActivity,SEP.IBll.Goals.IGoalBll,SEP.HRMIS.IDal.IEmployee,SEP.HRMIS.Bll.AssessActivity.IActiveFlow)">
            <summary>
            SystemAssess的构造函数，专为测试提供
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.GetEmployeeAttendanceStatistics">
            <summary>
             员工考勤统计
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AttendanceStatistics.GetEmployeeAttendanceStatistics._GetBadAttendance">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetEmployeeAttendanceStatistics.#ctor">
            <summary>
             构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetEmployeeAttendanceStatistics.#ctor(SEP.HRMIS.IDal.IEmployee,SEP.HRMIS.IDal.IPlanDutyDal,SEP.IBll.Accounts.IAccountBll,SEP.HRMIS.IDal.IAttendanceInAndOutRecord)">
            <summary>
            for test
            </summary>
            <param name="mockEmployee"></param>
            <param name="mockPlanDuty"></param>
            <param name="mockAccount"></param>
            <param name="mockInAndOut"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetEmployeeAttendanceStatistics.GetEmployeeAttendanceByCondition(System.Int32,System.DateTime,System.DateTime)">
            <summary>
             通过employeeID,开始结束时间得到员工的考勤信息,只获得已经结束的考勤
            </summary>
            <param name="employeeID"></param>
            <param name="startDt"></param>
            <param name="endDt"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetEmployeeAttendanceStatistics.GetEmployeeAttendanceByCondition(System.String,System.Int32,System.Nullable{System.Int32},System.DateTime,System.DateTime,SEP.Model.Accounts.Account,System.Nullable{System.Int32})">
            <summary>
             通过员工姓名部门，得到考勤情况,只获得已经结束的考勤
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetEmployeeAttendanceStatistics.GetEmployeeAttendanceInfo(SEP.HRMIS.Model.Employee,System.DateTime,System.DateTime)">
            <summary>
            获得员工的考勤信息
            </summary>
            <param name="employee"></param>
            <param name="FromDate"></param>
            <param name="ToDate"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetEmployeeAttendanceStatistics.GetAllEmployeeAttendanceByCondition(System.String,System.Int32,System.Nullable{System.Int32},System.DateTime,System.DateTime,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
             通过员工姓名部门，得到考勤情况，获得正在进行审批或者审批结束的所有考勤
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetEmployeeAttendanceStatistics.GetAllEmployeeAttendanceByCondition(System.Int32,System.DateTime,System.DateTime)">
            <summary>
             通过员工姓名部门，得到考勤情况，获得正在进行审批或者审批结束的所有考勤
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AdvanceSearch.EmployeeDoSearch">
            <summary>
            高级查询员工
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdvanceSearch.EmployeeDoSearch.#ctor(System.Collections.Generic.List{SEP.HRMIS.Model.Employee},System.Collections.Generic.List{AdvancedCondition.SearchField})">
            <summary>
            构造函数
            </summary>
            <param name="employeeList"></param>
            <param name="searchFieldList"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AdvanceSearch.EmployeeDoSearch.MockIDepartmentBll">
            <summary>
            为测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AdvanceSearch.EmployeeDoSearch.EmployeeList">
            <summary>
            获得检索后的Employee列表
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailSubmit">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailSubmit.#ctor(SEP.HRMIS.Model.TraineeApplications.TraineeApplication)">
            <summary>
            
            </summary>
            <param name="traineeApplication"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailSubmit.SendMail">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.DeleteSkillType">
            <summary>
            删除技能类型
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteSkillType.#ctor(System.Int32)">
            <summary>
            删除技能类型构造函数
            </summary>
            <param name="leaveRequestTypeId"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteSkillType.#ctor(System.Int32,SEP.HRMIS.IDal.IParameter,SEP.HRMIS.IDal.ISkill)">
            <summary>
            删除技能类型构造函数，测试
            </summary>
            <param name="skillTypeId"></param>
            <param name="dalSkillType"></param>
            <param name="dalSkill"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddSkillType">
            <summary>
            新增技能类型
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSkillType.#ctor(SEP.HRMIS.Model.SkillType)">
            <summary>
            新增技能类型构造函数
            </summary>
            <param name="skillType"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSkillType.#ctor(SEP.HRMIS.Model.SkillType,SEP.HRMIS.IDal.IParameter)">
            <summary>
            AddSkillType的构造函数，专为测试提供
            </summary>
            <param name="skillType"></param>
            <param name="dalSkillType"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSkillType.ExcuteSelf">
            <summary>
            调用下层的新增技能类型的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSkillType.Validation">
            <summary>
            新增技能类型有效性判断：
            1、技能类型不能与已有技能类型重名
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.LeaveRequestMessageExcute(SEP.Model.Accounts.Account,SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            收到提交请假消息后，处理该消息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.OutMessageExcute(SEP.Model.Accounts.Account,SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            收到提交外出消息后，处理该消息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.OutTrainMessageExcute(SEP.Model.Accounts.Account,SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            收到提交培训外出消息后，处理该消息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.OutCityMessageExcute(SEP.Model.Accounts.Account,SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            收到提交出差消息后，处理该消息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.OverWorkMessageExcute(SEP.Model.Accounts.Account,SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            收到提交加班消息后，处理该消息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.ConfirmMessageExcute(SEP.Model.Accounts.Account,System.String)">
            <summary>
            收到审核消息后，处理该消息
            </summary>
            <param name="sender"></param>
            <param name="message">手机号码</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.SelfServiceExcute(System.String)">
            <summary>
            处理自助服务业务，返回所有的服务项目
            </summary>
            <param name="number">手机号码</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.LeaveRequestServiceExcute(System.String)">
            <summary>
            处理我要请假业务，返回请假格式和模板
            </summary>
            <param name="number">手机号码</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.OutServiceExcute(System.String)">
            <summary>
            处理我要外出业务，返回外出格式和模板
            </summary>
            <param name="number">手机号码</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.OutTrainServiceExcute(System.String)">
            <summary>
            处理我要培训外出业务，返回外出格式和模板
            </summary>
            <param name="number">手机号码</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.OutCityServiceExcute(System.String)">
            <summary>
            处理我要出差业务，返回外出格式和模板
            </summary>
            <param name="number">手机号码</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.OverWorkServiceExcute(System.String)">
            <summary>
            处理我要加班业务，返回加班格式和模板
            </summary>
            <param name="number">手机号码</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFacade.LeaveRequestTypeServiceExcute(System.String)">
            <summary>
            处理请假类型业务，返回所有的请假类型
            </summary>
            <param name="number">手机号码</param>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkOverMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkOverMail.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkOverMail.ConfirmOverMail">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkOverMail.SendMailToMailCC">
            <summary>
            给要抄送的人发邮件,主要是人事，所以，在整个加班单审核结束后发送
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkCancelMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkCancelMail.#ctor(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkCancelMail.SendMail">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.AddOverWork">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.AddOverWork.#ctor(SEP.HRMIS.Model.OverWork.OverWork,System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.UpdateOutApplication">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.UpdateOutApplication.#ctor(SEP.HRMIS.Model.OutApplication.OutApplication,System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.ExportEmployeeContract">
            <summary>
            导出员工合同Word
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.ExportEmployeeContract.#ctor(System.Int32)">
            <summary>
            导出员工合同Word
            </summary>
            <param name="contractID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.ExportEmployeeContract.Excute">
            <summary>
            执行导出
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.UpdateContractType">
            <summary>
            修改合同类型
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateContractType.#ctor(SEP.HRMIS.Model.ContractType)">
            <summary>
            合同类型构造函数
            </summary>
            <param name="contractType"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateContractType.#ctor(SEP.HRMIS.Model.ContractType,SEP.HRMIS.IDal.IContractType)">
            <summary>
            合同类型构造函数
            </summary>
            <param name="contractType"></param>
            <param name="dalContractType"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.CreateAttendanceFromClocking">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.CreateAttendanceFromClocking.UpdateAttendanceForOperator(System.DateTime,System.DateTime,System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.Model.Accounts.Account)">
            <summary>
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="accountList"></param>
            <param name="loginUser"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ManagerPaperItem.#ctor(System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            该事务执行后，会保存考评表中应有的考评项
            异常情况:
            1.当前考评项是否为20项，如果不是则给出提示，事务中断
            2.当前要维护的考评表是否存在，如果不在则给出提示，事务中断
            3.当前要维护的Items是否存在，如果不存在则给出提示，事务中断
            业务流程：
            1.有效性判断
            2.如果通过有效性判断，则调用IDal层方法保存考评表中的考评项
            </summary>      
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestSubmitMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestSubmitMail.#ctor(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="leaveRequestID"></param>
            <param name="cclist"></param>
            <param name="diyProcesslist"></param>
            <param name="nextStep"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestSubmitMail.SendMail">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.FileCargos.GetFileCargo">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.FileCargos.GetFileCargo.GetFileCargoByAccountID(System.Int32)">
            <summary>
            
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.FileCargos.GetFileCargo.GetFileCargoByFileCargoID(System.Int32)">
            <summary>
            
            </summary>
            <param name="FileCargoID"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacation">
            <summary>
            年假到期前_Days天提醒个人，提醒人事
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacation.#ctor(System.DateTime,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="currDate"></param>
            <param name="days"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacation.#ctor(System.DateTime,System.Int32,SEP.IBll.Accounts.IAccountBll,SEP.HRMIS.IDal.IVacation)">
            <summary>
            构造函数，为测试
            </summary>
            <param name="currDate"></param>
            <param name="days"></param>
            <param name="iAccountBll"></param>
            <param name="iVacationmock"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacation.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacation.SetMailGateWay">
            <summary>
            仅仅用于测试邮件关口
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacation.MockGetDiyProcess">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacation.MailBodyListToHR">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.DeleteAssessActivity">
            <summary>
             删除考评活动
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.DeleteAssessActivity._Dal">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.DeleteAssessActivity.#ctor(System.Int32)">
            <summary>
            InterruptActivity的构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.DeleteAssessActivity.#ctor(System.Int32,SEP.HRMIS.IDal.IAssessActivity)">
            <summary>
            SystemAssess的构造函数，专为测试提供
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetTrainCourse.GetTraineeFBItems(System.Int32,System.Int32)">
            <summary>
            显示某个员工反馈项
            </summary>
            <param name="courseId"></param>
            <param name="employeeId"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.Train.GetFeedBackPaper">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Train.GetFeedBackPaper.GetFeedBackPaperByPaperName(System.String)">
            <summary>
            </summary>
            <param name="paperName"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.Train.GetFeedBackPaper.GetFeedBackPaperById(System.Int32)">
            <summary>
            </summary>
            <param name="paperId"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteTrainCourse.#ctor(System.Int32,SEP.HRMIS.IDal.ITrain)">
            <summary>
            AddTrainCourse的构造函数，专为测试提供
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddTrainFBQuestion.Validation">
            <summary>
            新增培训反馈问题有效性判断
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddCourseSendMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddCourseSendMail.#ctor(System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.Course)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddCourseSendMail.#ctor(System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.Course,SEP.IBll.Mail.IMailGateWay,SEP.IBll.Accounts.IAccountBll)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.TraineeApplications.DeleteTraineeApplication._DalTraineeApplication">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.DeleteTraineeApplication.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.SystemErrors.GetAttendanceError">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.GetAttendanceError.#ctor(System.String,System.Int32,System.DateTime,System.DateTime,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.SystemErrors.GetAttendanceError.SystemErrorList">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.UpdateSkill">
            <summary>
            修改技能
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateSkill.#ctor(SEP.HRMIS.Model.Skill)">
            <summary>
            修改技能构造函数
            </summary>
            <param name="Skill"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateSkill.#ctor(SEP.HRMIS.Model.Skill,SEP.HRMIS.IDal.ISkill)">
            <summary>
            修改技能构造函数，测试
            </summary>
            <param name="Skill"></param>
            <param name="dalSkill"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OutCityApplicationMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OutCityApplicationMessage.#ctor(SEP.Model.Accounts.Account,SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            
            </summary>
            <param name="employee"></param>
            <param name="message"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OutCityApplicationMessage.TemplageAndExample">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.MailAndPhoneUtility.GetMailToAccount(SEP.HRMIS.Model.PositionApp.PositionApplication,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="positionApplication"></param>
            <param name="nextStep"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.ApprovePositionApplication.#ctor(SEP.HRMIS.Model.PositionApp.PositionApplication,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String)">
            <summary>
            取消
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.ApprovePositionApplication.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.ApprovePositionApplication.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.ApprovePositionApplication.ConfirmItem(SEP.HRMIS.Model.DiyProcesss.DiyStep@,SEP.HRMIS.Model.DiyProcesss.DiyStep@)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PositionApplications.ApprovePositionApplication.ResultMessage">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics">
            <summary>
            统计员工工资
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.DepartmentStatistics(System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.AccountSetPara},System.Int32,System.Boolean,SEP.Model.Accounts.Account)">
            <summary>
            统计某个时间段内的某个部门以及其所有子部门的员工的薪资情况
            </summary>
            <param name="startDt">统计的开始时间</param>
            <param name="endDt">统计的结束时间</param>
            <param name="departmentID">统计的部门编号</param>
            <param name="items">统计项--帐套项的List</param>
            <returns></returns>
            <param name="companyID"></param>
            <param name="isIncludeChildDeptMember"></param>
            <param name="loginUser"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.FindAllEmployeeByDepAndTime(System.Collections.Generic.List{SEP.Model.Departments.Department},SEP.Model.Departments.Department,System.DateTime,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Boolean)">
            <summary>
            找出某一时刻，某一部门下的所有员工，包括子部门
            </summary>
            <param name="departmentList"></param>
            <param name="department"></param>
            <param name="dt"></param>
            <returns></returns>
            <param name="AccountsSource"></param>
            <param name="isIncludeChildDeptMember"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.GetAllDepartment(System.Collections.Generic.IList{System.DateTime},System.Int32)">
            <summary>
            通过每个月的月底找出所有部门(包括子部门)
            </summary>
            <param name="Months"></param>
            <returns></returns>
            <param name="departmentID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.DepartmentListIsContains(System.Collections.Generic.List{SEP.Model.Departments.Department},SEP.Model.Departments.Department)">
            <summary>
            判断DepartmentList是否包含同名的部门
            </summary>
            <param name="departmentList"></param>
            <param name="department"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.PositionStatistics(System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.AccountSetPara},System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            按照职位，统计某个时间段内的某个部门以及其所有子部门的员工的薪资情况
            </summary>
            <param name="startDt">统计的开始时间</param>
            <param name="endDt">统计的结束时间</param>
            <param name="departmentID">统计的部门编号</param>
            <param name="items">统计项--帐套项的List</param>
            <returns></returns>
            <param name="companyID"></param>
            <param name="loginUser"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.CaculateSumPositionStatistics(System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.EmployeeSalaryStatistics})">
            <summary>
            计算PositionStatistics总计
            </summary>
            <param name="employeeSalaryStatisticsList"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.CaculateSumDepartmentStatistics(System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.EmployeeSalaryStatistics},System.Boolean)">
            <summary>
            计算总计
            </summary>
            <param name="employeeSalaryStatisticsList"></param>
            <param name="isIncludeChildDeptMember"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.GetPositionListFromEmployeeList(System.Collections.Generic.List{SEP.HRMIS.Model.Employee})">
            <summary>
            根据员工的List获取这些员工中的所有职位
            </summary>
            <param name="employees">员工信息</param>
            <returns>这些员工的所有职位</returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.SplitMonth(System.DateTime,System.DateTime)">
            <summary>
            根据开始时间、结束时间获取这段时间内的各个月的最后一天的List
            </summary>
            <param name="startDt">开始时间</param>
            <param name="endDt">结束时间</param>
            <returns>根据开始时间、结束时间获取这段时间内的各个月的最后一天的List</returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.FindEmployee(System.Collections.Generic.List{SEP.HRMIS.Model.Employee},SEP.Model.Departments.Department)">
            <summary>
            在employeeList中筛选部门department中的所有员工
            </summary>
            <param name="employeeList">员工的集合</param>
            <param name="department">部门</param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.CalculateByPosition(SEP.Model.Positions.Position,SEP.HRMIS.Model.PayModule.AccountSetPara,System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.EmployeeSalary})">
            <summary>
            找到employeeSalaryList职位为position，帐套项为accountSetPara的员工发薪历史来计算
            </summary>
            <param name="position">职位</param>
            <param name="accountSetPara">帐套项</param>
            <param name="employeeSalaryList">所有符合统计条件的发薪历史</param>
            <returns>计算值</returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.AverageStatistics(System.DateTime,System.DateTime,System.Int32,SEP.HRMIS.Model.PayModule.AccountSetPara,System.Int32,System.Boolean,SEP.Model.Accounts.Account)">
            <summary>
            统计某个时间段内的某个部门以及其所有子部门的员工的薪资情况
            </summary>
            <param name="startDt">统计的开始时间</param>
            <param name="endDt">统计的结束时间</param>
            <param name="departmentID">统计的部门编号</param>
            <param name="item">统计项--帐套项的List</param>
            <returns></returns>
            <param name="companyID"></param>
            <param name="isIncludeChildDeptMember"></param>
            <param name="loginUser"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.TimeSpanStatisticsGroupByParameter(System.DateTime,System.DateTime,System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.AccountSetPara},System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            根据帐套项分组
            </summary>
            <param name="startDt"></param>
            <param name="endDt"></param>
            <param name="departmentID"></param>
            <param name="companyID"></param>
            <param name="items"></param>
            <returns></returns>
            <param name="loginUser"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.TimeSpanStatisticsGroupByDepartment(System.DateTime,System.DateTime,System.Int32,SEP.HRMIS.Model.PayModule.AccountSetPara,System.Int32,System.Boolean,SEP.Model.Accounts.Account)">
            <summary>
            根据部门分组
            </summary>
            <param name="startDt"></param>
            <param name="endDt"></param>
            <param name="departmentID"></param>
            <param name="item"></param>
            <param name="companyID"></param>
            <param name="isIncludeChildDeptMember"></param>
            <returns></returns>
            <param name="loginUser"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.MockGetEmployee">
            <summary>
            mockGetEmployee
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.MockGetEmployeeAccountSet">
            <summary>
            mockGetEmployeeAccountSet
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeSalaryStatistics.MockGetDepartmentHistory">
            <summary>
            mockGetDepartmentHistory
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.AccountSet.CreateAccountSetPara">
            <summary>
            新增帐套项参数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.CreateAccountSetPara.#ctor(System.String,SEP.HRMIS.Model.PayModule.FieldAttributeEnum,SEP.HRMIS.Model.PayModule.BindItemEnum,SEP.HRMIS.Model.PayModule.MantissaRoundEnum,System.String,System.Boolean,System.Boolean)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.CreateAccountSetPara.#ctor(System.String,SEP.HRMIS.Model.PayModule.FieldAttributeEnum,SEP.HRMIS.Model.PayModule.BindItemEnum,SEP.HRMIS.Model.PayModule.MantissaRoundEnum,System.String,System.Boolean,System.Boolean,SEP.HRMIS.IDal.PayModule.IAccountSet)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.AccountSet.CreateAccountSetPara.AccountSetParaID">
            <summary>
            新增后的pkid
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.AccountSet.CreateAccountSetPara.AccountSetParaForTest">
            <summary>
            for test 
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutMailAndPhoneDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutMailAndPhoneDelegate.SubmitOperation(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            发送提交邮件短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutMailAndPhoneDelegate.CancelOperation(System.Int32,System.Int32)">
            <summary>
            发送取消短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutMailAndPhoneDelegate.CancelOperationMail(System.Int32)">
            <summary>
             发送取消邮件
            </summary>
            <param name="outApplicationId"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutMailAndPhoneDelegate.ConfirmOperation(System.Int32,System.Int32,SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            审核
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutMailAndPhoneDelegate.ConfirmOperationMail(System.Int32,SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            审核
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddEmployee">
            <summary>
            新增员工信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployee.#ctor(SEP.HRMIS.Model.Employee,SEP.Model.Accounts.Account,SEP.HRMIS.IDal.IEmployee,SEP.IBll.Accounts.IAccountBll,SEP.HRMIS.IDal.IEmployeeHistory,SEP.HRMIS.IDal.IEmployeeSkill,SEP.IBll.Departments.IDepartmentBll,SEP.HRMIS.IDal.IEmployeeWelfare,SEP.HRMIS.IDal.IEmployeeWelfareHistory)">
            <summary>
            AddEmployee的构造函数，专为测试提供
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployee.#ctor(SEP.HRMIS.Model.Employee,SEP.Model.Accounts.Account)">
            <summary>
            为AddEmployeeProxy调用
            </summary>
            <param name="employee"></param>
            <param name="operatoraccount"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployee.#ctor(System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            为InitEmployeeProxy调用
            </summary>
            <param name="newEmployeeAccountID"></param>
            <param name="operatoraccount"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetEmployeeWelfare">
            <summary>
            获得员工福利
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeWelfare.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeWelfare.#ctor(SEP.HRMIS.IDal.IEmployeeWelfareHistory,SEP.HRMIS.IDal.IEmployeeWelfare)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeWelfare.GetEmployeeWelfareHistoryByAccountID(System.Int32)">
            <summary>
            员工福利更新历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeWelfare.GetEmployeeWelfareByAccountID(System.Int32)">
            <summary>
            员工福利
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.InsertAttendanceInOutRecord">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.InsertAttendanceInOutRecord.#ctor(System.Int32,SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecord,SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecordLog,SEP.Model.Accounts.Account)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.InsertAttendanceInOutRecord.#ctor(System.Int32,SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecord,SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecordLog,SEP.HRMIS.IDal.IAttendanceInAndOutRecord,SEP.HRMIS.Bll.Transaction,SEP.HRMIS.Model.Employee,SEP.Model.Accounts.Account)">
            <summary>
            测试用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.InsertAttendanceInOutRecord.GetInAndOutRecords">
            <summary>
            得到单个员工的进出记录
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.InsertAttendanceInOutRecord.FindAttendanceInAndOutRecord(SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecord)">
            <summary>
            查找本次读取的考勤记录，范围为一天
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.ImportFromXLS">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ImportFromXLS.#ctor(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ImportFromXLS.Excute(System.Int32@,System.Int32@,SEP.Model.Accounts.Account)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ImportFromXLS.GetInOutStatusByInOutName(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ImportFromXLS.GetItem(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            得到某列的一个元素
            </summary>
            <param name="dt">要在哪个表中找</param>
            <param name="rowID">第几行找，从0开始</param>
            <param name="columnName">列名</param>
            <returns>返回该表的指定列名，指定行的数据，无则返回EmptyNull</returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ImportFromXLS.GetColumnIndex(System.Data.DataTable,System.String)">
            <summary>
            得到列号
            </summary>
            <param name="dt"></param>
            <returns>没有则返回-1</returns>
            <param name="columnName">列名</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ImportFromXLS.FirstSheetName(System.Data.OleDb.OleDbConnection)">
            <summary>
            得到第一个工作表，如果工作表个数不是1则抛错
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.Nationalitys.DeleteNationality">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Nationalitys.DeleteNationality.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="pkid"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.Nationalitys.DeleteNationality.#ctor(System.Int32,SEP.HRMIS.IDal.IParameter,SEP.HRMIS.IDal.IEmployee)">
            <summary>
            for test
            </summary>
            <param name="pkid"></param>
            <param name="mockIParameter"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestOverPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestOverPhone.#ctor(System.Int32,SEP.HRMIS.Model.Request.LeaveRequestItem,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestOverPhone.ConfirmOverPhone">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOverWork">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOverWork.#ctor(SEP.HRMIS.Model.OverWork.OverWorkItem,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOverWork.Excute">
            <summary>
            先初始化OperatorType，看是否要更新调休
            然后将加班记录分成一天一天的记录
            将同年的加班记录合并
            更新合并后的调休，以处理跨年现象
            记录历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOverWork.UpdateAdjustRestDB(SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOverWork.OperatorType,System.Collections.Generic.IEnumerable{SEP.HRMIS.Model.EmployeeAdjustRest.AdjustRest})">
            <summary>
            更新调休
            </summary>
            <param name="operatorType"></param>
            <param name="UpdateadjustRestList"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOverWork.CreateHistory(SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOverWork.OperatorType)">
            <summary>
            记录历史
            </summary>
            <param name="operatorType"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOverWork.InitAdjustRestList">
            <summary>
            初始化调休，将加班信息变成一条条调休记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOverWork.GetItemAdjustHour">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOverWork.GetMagnification(SEP.HRMIS.Model.OverWork.OverWorkItem,SEP.HRMIS.Model.Adjusts.AdjustRule)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.SaveEmployeeDiyProcess">
            <summary>
             保存员工diy设置
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SaveEmployeeDiyProcess.#ctor(System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.DiyProcesss.DiyProcess})">
            <summary>
            </summary>
            <param name="accountId"></param>
            <param name="diyProcesses"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.UpdatePlanDuty">
            <summary>
            修改班别
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdatePlanDuty.#ctor(SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.PlanDutyTable)">
            <summary>
            修改班别，构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdatePlanDuty.#ctor(SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.PlanDutyTable,SEP.HRMIS.IDal.IPlanDutyDal)">
            <summary>
            测试用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdatePlanDuty.Validation">
            <summary>
            修改时查看该条记录是否存在，并判断是否有重名
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.Train.ExportFeedBackResult">
            <summary>
            导出培训反馈结果
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Train.ExportFeedBackResult.#ctor(System.Int32,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Train.ExportFeedBackResult.Excute">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.Requests.RequestFindOperator">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Requests.RequestFindOperator.GetNextOperator(SEP.HRMIS.Model.DiyProcesss.DiyProcess,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Requests.RequestFindOperator.GetNextStep(System.Int32,SEP.HRMIS.Model.DiyProcesss.DiyProcess)">
            <summary> 
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Requests.RequestFindOperator.GetAccountByOperatorType(SEP.HRMIS.Model.ParameterBase,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OutTrainApplicationMessage">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OutTrainApplicationMessage.#ctor(SEP.Model.Accounts.Account,SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            
            </summary>
            <param name="employee"></param>
            <param name="message"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OutTrainApplicationMessage.TemplageAndExample">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.HandleConfirm">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.HandleConfirm.Excute(SEP.HRMIS.Model.PhoneMessage.PhoneMessage)">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.Reimburse.QuickPassReimburse._DalReimburse">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ExportEmployeeAccountSet">
            <summary>
            导出员工帐套
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ExportEmployeeAccountSet.#ctor(System.String,System.Int32,System.Int32,SEP.HRMIS.Model.EmployeeTypeEnum,System.Boolean,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="employeeName"></param>
            <param name="departmentID"></param>
            <param name="positionID"></param>
            <param name="employeeType"></param>
            <param name="isRecursionDepartment"></param>
            <param name="accountOperator"></param>
            <param name="employeeStatus"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ExportEmployeeAccountSet.Excute">
            <summary>
            执行导出功能
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMail.SendSubmitMail(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            发送提交邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMail.SendCancelMail(System.Int32)">
            <summary>
            发送取消邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMail.SendMailToNextOperator(System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            发送邮件给下一步处理人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMail.SendConfirmOverMail(System.Int32)">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMail.SendErrorMail(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMail.BuildBody(SEP.HRMIS.Model.OverWork.OverWork)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkMail.BulidConfirmAddress(System.Text.StringBuilder,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkConfirmPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkConfirmPhone.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkConfirmPhone.SendPhoneToNextOperator(SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            给下一步操作人发邮件
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.GetOverWork">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.GetOverWork.GetOverWorkByOverWorkID(System.Int32)">
            <summary> 
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.GetOverWork.GetOverWorkItemByItemID(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.GetOverWork.GetAllOverWorkByAccountID(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.GetOverWork.GetConfirmOverWorkByNextOperatorID(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.GetOverWork.GetConfirmHistroy(System.Int32,System.String,System.Nullable{System.Boolean},System.DateTime,System.DateTime)">
             <summary>
            
             </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.GetOverWork.GetOverWorkFlowList(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.GetOverWork.GetCalendarByEmployee(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.GetOverWork.GetAllCalendarByEmployee(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.GetOverWork.GetOverWorkByAccountAndRelatedDate(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获得与fromDate-toDate事件上有交集的加班信息
            </summary>
            <param name="accountID"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.GetOverWork.GetOverWorkDetailByEmployee(System.Int32,System.DateTime)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.OverWorks.GetOverWork.MockIOverWork">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.CancelAllOverWork">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.CancelAllOverWork.#ctor(System.Int32,System.String)">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.CalculateOverWorkHour">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.CalculateOverWorkHour.#ctor(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="accountID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.CalculateOverWorkHour.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.CalculateOverWorkHour.TestCalculate(SEP.Model.SpecialDates.CalculateDays,System.Collections.Generic.List{SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.PlanDutyDetail})">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.OverWorks.CalculateOverWorkHour.OverWorkType">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationPhone.SendSubmitPhone(System.Int32)">
            <summary>
            发送提交短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationPhone.SendCancelPhone(System.Int32,System.Int32)">
            <summary>
            发送取消短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationPhone.SendPhoneToNextOperator(System.Int32,System.Int32,SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            发送短信给下一步处理人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationPhone.SendConfirmOverPhone(System.Int32,System.Int32)">
            <summary>
            发送审核结束短信
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetLeaveRequest">
            <summary>
            获得请假的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.#ctor">
            <summary>
            获得请假的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.#ctor(SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal)">
            <summary>
            获得请假的方法
            </summary>
            <param name="mockLeaveRequest"></param>
            <param name="mockLeaveRequestFlow"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.#ctor(SEP.HRMIS.IDal.IVacation,SEP.HRMIS.IDal.ILeaveRequestType,SEP.HRMIS.IDal.IPlanDutyDal)">
            <summary>
            获得请假的方法
            </summary>
            <param name="mockVacation"></param>
            <param name="mockLeaveRequestType"></param>
            <param name="mockIPlanDutyDal"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.#ctor(SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal,SEP.HRMIS.IDal.ILeaveRequestType,SEP.IBll.Accounts.IAccountBll,SEP.IBll.Departments.IDepartmentBll)">
            <summary>
            获得请假的方法
            </summary>
            <param name="mockLeaveRequest"></param>
            <param name="mockLeaveRequestFlow"></param>
            <param name="mockILeaveRequestType"></param>
            <param name="mockIAccountBll"></param>
            <param name="mockIDepartmentBll"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetLeaveRequestByAccountID(System.Int32)">
            <summary>
            根据账号ID获得该账号的所有请假信息
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetLeaveRequestByPKID(System.Int32)">
            <summary>
            根据PKID获得的请假信息
            </summary>
            <param name="pkid"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetConfirmLeaveRequest(System.Int32)">
            <summary>
            自定义流程
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetConfirmLeaveRequest">
            <summary>
            根据PKID获得的请假信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.ChangeOperatorToEmployee(SEP.HRMIS.Model.Request.LeaveRequest,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="leaveRequest"></param>
            <param name="diyStep"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetLeaveRequestConfirmHistoryByOperatorID(System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
            <param name="operatorID"></param>
            <param name="name"></param>
            <param name="fromTime"></param>
            <param name="toTime"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetLeaveRequestFlowByLeaveRequestID(System.Int32)">
            <summary>
            
            </summary>
            <param name="leaveRequestID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.AdjudgeVacationDaysAvailable(SEP.HRMIS.Model.Request.LeaveRequest)">
            <summary>
            
            </summary>
            <param name="leaveRequest"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetAdjustRestCostTimeByEmployeeWhenCancelAfterSubmit(System.Int32)">
            <summary>
            根据员工获取提交了但是没有经过审核就取消中的年假天数
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.AdjustIfApprovePass(System.Collections.Generic.List{SEP.HRMIS.Model.Request.LeaveRequestItem})">
            <summary>
            找出所有曾经审核通过的item
            </summary>
            <param name="leaveRequestItems"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetAllCalendarByEmployee(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            通过账号ID,时间范围得到相应的加班，外出，请假情况,包括未审核的，转化为员工的日考勤列表返回
            </summary>
            <param name="accountID"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetLeaveRequestByAccountAndRelatedDate(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获得与fromDate-toDate事件上有交集的请假信息
            </summary>
            <param name="accountID"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetCalendarByEmployee(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            通过账号ID,时间范围得到相应的加班，外出，请假情况，转化为员工的日考勤列表返回
            </summary>
            <param name="accountID"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.AdjustIfApprovePass(SEP.HRMIS.Model.Request.LeaveRequestItem)">
            <summary>
            判断是否曾经审核通过的item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.AdjustTime(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            判断fromDate~toDate与fromDt~toDt是否有交集，仅排除请假单开始时间晚于toDt，结束时间早于fromDt
            </summary>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <param name="fromDt"></param>
            <param name="toDt"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetLeaveRequestDetailByAccountIDAndDate(System.Int32,System.DateTime)">
            <summary>
            
            </summary>
            <param name="accountID"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetLeaveRequest.GetVacationUsedDetailByAccountID(System.Int32)">
            <summary>
            查看员工的所有请年假情况
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.SaveEmployeeWelfare">
            <summary>
            保存员工福利信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SaveEmployeeWelfare.#ctor(System.Int32,SEP.HRMIS.Model.SocialSecurityTypeEnum,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
            <summary>
            保存员工福利信息构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SaveEmployeeWelfare.#ctor(System.Int32,SEP.HRMIS.Model.SocialSecurityTypeEnum,System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.Decimal},System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},SEP.HRMIS.IDal.IEmployeeWelfare,SEP.HRMIS.IDal.IEmployeeWelfareHistory)">
            <summary>
            保存员工福利信息构造函数，测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.SaveEmployeeWelfare.EmployeeWelfareID">
            <summary>
            EmployeeWelfareID保存后复制
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.SaveEmployeeWelfare.MockIEmployeeWelfare">
            <summary>
            IEmployeeWelfare的mock
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.SaveEmployeeWelfare.MockIEmployeeWelfareHistroy">
            <summary>
            IEmployeeWelfareHistory的mock
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceReadRule">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceReadRule.#ctor(SEP.HRMIS.Model.EmployeeAttendance.ReadData.AttendanceReadRule,SEP.Model.Accounts.Account)">
            <summary>
            </summary>
            <param name="readRule"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceReadRule.#ctor(SEP.HRMIS.Model.EmployeeAttendance.ReadData.AttendanceReadRule,SEP.HRMIS.IDal.IAttendanceReadRule,SEP.Model.Accounts.Account)">
            <summary>
            测试用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceReadRule.Validation">
            <summary>
            判断记录是否存在
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestSubmitPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestSubmitPhone.#ctor(System.Int32,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="leaveRequestID"></param>
            <param name="nextStep"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestSubmitPhone.SendPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestSubmitPhone.BuildBody(SEP.HRMIS.Model.Request.LeaveRequestItem)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestCancelMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestCancelMail.#ctor(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="leaveRequestID"></param>
            <param name="diyProcessAccountlist"></param>
            <param name="nextStep"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestCancelMail.SendMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestCancelMail.SendCancelToMail">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetAdjustRestHistory">
            <summary>
            获得调休历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRestHistory.GetAdjustRestHistoryByAccountID(System.Int32)">
            <summary>
            根据员工ID获得调休历史
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetAdjustRestHistory.MockIAdjustRestHistory">
            <summary>
            unittest
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetAdjustRestHistory.MockIAccountBll">
            <summary>
            unittest
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut.#ctor(SEP.HRMIS.Model.OutApplication.OutApplicationItem,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut.Excute">
            <summary>
            先初始化OperatorType，看是否要更新调休
            然后将出差记录分成一天一天的记录
            将同年的出差记录合并
            更新合并后的调休，以处理跨年现象
            记录历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut.UpdateAdjustRestDB(SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut.OperatorType,System.Collections.Generic.IEnumerable{SEP.HRMIS.Model.EmployeeAdjustRest.AdjustRest})">
            <summary>
            更新调休
            </summary>
            <param name="operatorType"></param>
            <param name="UpdateadjustRestList"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut.CreateHistory(SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut.OperatorType)">
            <summary>
            记录历史
            </summary>
            <param name="operatorType"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut.InitUpdateAdjustRestList(System.Collections.Generic.List{SEP.HRMIS.Model.EmployeeAdjustRest.AdjustRest})">
            <summary>
             合并同年调休
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut.InitAdjustRestList">
            <summary>
            初始化调休，将出差信息变成一条条调休记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut.GetItemAdjustHour">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOut.Contain(System.DateTime,System.Collections.Generic.IEnumerable{SEP.HRMIS.Model.EmployeeAdjustRest.AdjustRest})">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindEmployeeConfirmAttendance">
            <summary>
            月底自动提醒员工核对考勤数据
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindEmployeeConfirmAttendance.#ctor(System.DateTime)">
            <summary>
            构造函数
            </summary>
            <param name="currdate"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindEmployeeConfirmAttendance.MockIPlanDutyDal">
            <summary>
            用于测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindEmployeeConfirmAttendance.SetMailGateWay">
            <summary>
            仅仅用于测试邮件关口
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindEmployeeConfirmAttendance.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.InsertDutyClass">
            <summary>
            新增班别
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.InsertDutyClass.#ctor(SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.DutyClass)">
            <summary>
            新增班别构造函数
            </summary>
            <param name="dutyClass"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.InsertDutyClass.#ctor(SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.DutyClass,SEP.HRMIS.IDal.IPlanDutyDal)">
            <summary>
            新增班别构造函数，测试
            </summary>
            <param name="dutyClass"></param>
            <param name="ruleMock"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AttendanceStatistics.InsertDutyClass.CurrentId">
            <summary>
            当前ID，为测试使用
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.ConfirmActivity">
            <summary>
            人事确认考评活动的事务
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ConfirmActivity.#ctor(System.Int32,System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            人事确认考评活动的事务
            </summary>
            <param name="activityId"></param>
            <param name="assessTempletPaperId"></param>
            <param name="managerExpectedFinish"></param>
            <param name="personalExpectedTime"></param>
            <param name="currentEmployeeName"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ConfirmActivity.#ctor(System.Int32,System.Int32,System.DateTime,System.DateTime,System.String,SEP.HRMIS.IDal.IAssessActivity,SEP.HRMIS.IDal.IAssessTemplatePaper)">
            <summary>
            人事确认考评活动的事务
            </summary>
            <param name="activityId"></param>
            <param name="assessTempletPaperId"></param>
            <param name="managerExpectedFinish"></param>
            <param name="employeeExpectedTime"></param>
            <param name="currentEmployeeName"></param>
            <param name="ia"></param>
            <param name="itp"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ConfirmActivity.CheckTemplatePapaer">
            <summary>
            判断template表是否是一个完美的模板(包括item的数量必须满足一定条件)
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AssessActivity.ConfirmActivity.ActiveFlow">
            <summary>
            for test
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AssessActivity.ConfirmActivity.IsPrefectTemplate">
            <summary>
            用于界面层判断是否所选的assessTemplatePaper是否满足条件
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.ExportAnnualAssessForm">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnnualAssessForm.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnnualAssessForm.Excute">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnnualAssessForm.GetAns(System.Decimal)">
            <summary>
            </summary>
            <param name="totalScore"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnnualAssessForm.InitSubmitInfoIndex">
            <summary>
            初始化第几个考评是主管考评
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnnualAssessForm.AddNeedRow(Microsoft.Office.Interop.Word.Table@,System.Int32,System.Int32)">
            <summary>
            根据需要在table中增加必要的行
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.CalculateFormula">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CalculateFormula.Calculate(System.Int32,System.DateTime,System.DateTime,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AdvanceSearch.BindEmployeeSearchExpression">
            <summary>
            绑定比较值的googledown数据
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdvanceSearch.BindEmployeeSearchExpression.#ctor(System.String,SEP.Model.Accounts.Account)">
            <summary>
            构造函数
            </summary>
            <param name="fieldParaBaseId"></param>
            <param name="operatorAccount"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdvanceSearch.BindEmployeeSearchExpression.ToBind">
            <summary>
            绑定
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AdjustRules.AddAdjustRule">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdjustRules.AddAdjustRule.#ctor(SEP.HRMIS.Model.Adjusts.AdjustRule)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdjustRules.AddAdjustRule.#ctor(SEP.HRMIS.Model.Adjusts.AdjustRule,SEP.HRMIS.IDal.IAdjustRule)">
            <summary>
            test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AccountAuth.GetAuth">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AccountAuth.GetAuth.SetAccountAuths(System.Collections.Generic.List{SEP.Model.Accounts.Auth},SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            为账号赋予权限，先取消所有权限，然后新增
            </summary>
            <param name="newAuths"></param>
            <param name="user"></param>
            <param name="loginUser"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AccountAuth.GetAuth.GetAccountAllAuth(System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            获取用户权限，是树形结构
            </summary>
            <param name="accountId"></param>
            <param name="loginUser"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AccountAuth.GetAuth.GetAccountAllAuthList(System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            获取用户权限
            </summary>
            <param name="accountId"></param>
            <param name="loginUser"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.TraineeApplications.UpdateTraineeApplication">
            <summary>
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.TraineeApplications.UpdateTraineeApplication._DalTraineeApplication">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.UpdateTraineeApplication.#ctor(SEP.HRMIS.Model.TraineeApplications.TraineeApplication)">
            <summary>
            构造函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.UpdateTraineeApplication.#ctor(SEP.HRMIS.Model.TraineeApplications.TraineeApplication,SEP.HRMIS.IDal.ITraineeApplication,SEP.HRMIS.IDal.IEmployeeDiyProcessDal)">
            <summary>
            </summary>
            <param name="TraineeApplication"></param>
            <param name="iTraineeApplicationMock"></param>
            <param name="iEmployeeDiyProcessMock"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.UpdateTraineeApplication.FastUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OutApplicationMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OutApplicationMessage.#ctor(SEP.Model.Accounts.Account,SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            
            </summary>
            <param name="employee"></param>
            <param name="message"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OutApplicationMessage.TemplageAndExample">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.Reimburse.SetBillingTime._DalReimburse">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddPositionHistory">
            <summary>
            新增职位历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddPositionHistory.#ctor(SEP.Model.Accounts.Account)">
            <summary>
            构造函数,当修改职位等级时调用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddPositionHistory.#ctor(SEP.Model.Accounts.Account,SEP.Model.Positions.Position)">
            <summary>
            构造函数,当修改某个职位时调用
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AddPositionHistory.MockGetEmployee">
            <summary>
            测试 员工
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AddPositionHistory.MockIPositionBll">
            <summary>
            测试 职位
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AddPositionHistory.MockIPositionHistory">
            <summary>
            测试 职位历史
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AddPositionHistory.MockIEmployeeHistory">
            <summary>
            测试 员工历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.UpdatePositionApplication.#ctor(SEP.HRMIS.Model.PositionApp.PositionApplication,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.UpdatePositionApplication.ExcuteSelf">
            <summary>
            修改
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.UpdatePositionApplication.Validation">
            <summary>
            有效性判断
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationMailAndPhoneDelegate.SubmitOperation(System.Int32,System.Collections.Generic.List{System.String},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送提交邮件短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationMailAndPhoneDelegate.CancelMail(System.Int32,System.Collections.Generic.List{System.String},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送取消邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationMailAndPhoneDelegate.ConfirmOperationMail(SEP.HRMIS.Model.PositionApp.PositionApplication,System.Int32,SEP.HRMIS.Model.DiyProcesss.DiyStep,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            审核
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet">
            <summary>
            获得员工的帐套
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.#ctor(SEP.HRMIS.IDal.PayModule.IEmployeeAccountSet,SEP.HRMIS.IDal.PayModule.IEmployeeSalary)">
            <summary>
            测试，构造函数
            </summary>
            <param name="mockIEmployeeAccountSet"></param>
            <param name="mockIEmployeeSalary"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.GetEmployeeAccountSetByEmployeeID(System.Int32)">
            <summary>
            根据员工id获得帐套信息
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.GetEmployeeAccountSetByCondition(System.String,System.Int32,System.Int32,SEP.HRMIS.Model.EmployeeTypeEnum,System.Boolean,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            根据条件获取员工帐套信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.GetAdjustSalaryHistoryByPKID(System.Int32)">
            <summary>
            根据ID获取员工调薪历史
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.GetAdjustSalaryHistoryByEmployeeID(System.Int32)">
            <summary>
            根据员工ID获取员工调薪历史
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.GetEmployeeSalaryByEmployeeID(System.Int32)">
            <summary>
            根据员工ID获得员工工资
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.GetEmployeeSalaryByCondition(System.String,System.DateTime,System.Int32,System.Int32,System.Int32,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32)">
            <summary>
            根据条件获取员工的工资
            </summary>
            <param name="name"></param>
            <param name="salaryTime"></param>
            <param name="departmentId"></param>
            <param name="positionId"></param>
            <param name="accountSetId"></param>
            <param name="employeeType"></param>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.GetEmployeeSalaryHistoryByPKID(System.Int32)">
            <summary>
            根据员工ID获取工资历史
            </summary>
            <param name="pkid"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.GetEmployeeSalaryByEmployeeSalaryHistoryID(System.Int32)">
            <summary>
            根据employeeSalaryHistoryID获取员工薪资历史
            </summary>
            <param name="employeeSalaryHistoryID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.GetEmployeeSalaryHistoryByEmployeeIdAndDateTime(System.Int32,System.DateTime)">
            <summary>
            根据员工ID和时间获取员工工资历史
            </summary>
            <param name="employeeID"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.GetEmployeeSalaryHistoryByEmployeeId(System.Int32)">
            <summary>
            根据员工ID获取员工工资历史
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.GetEmployeeAccountSet.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetEmployee">
            <summary>
            获取员工信息方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.#ctor">
            <summary>
            获取员工信息方法构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.#ctor(SEP.HRMIS.IDal.IEmployee,SEP.IBll.Accounts.IAccountBll,SEP.HRMIS.IDal.IEmployeeSkill,SEP.IBll.Departments.IDepartmentBll,SEP.HRMIS.IDal.IEmployeeAdjustRule)">
            <summary>
            获取员工信息方法构造函数 测试
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.#ctor(SEP.HRMIS.IDal.IEmployee,SEP.IBll.Accounts.IAccountBll,SEP.HRMIS.IDal.IEmployeeSkill,SEP.IBll.Departments.IDepartmentBll,SEP.HRMIS.IDal.IEmployeeAdjustRule,SEP.IBll.Positions.IPositionBll)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeByAccountID(System.Int32)">
            <summary>
            根据员工帐号ID获取所有员工信息，加载所属公司信息
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeBasicInfoByAccountID(System.Int32)">
            <summary>
            根据员工帐号ID获取员工所有基本信息
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeByName(System.String)">
            <summary>
            根据员工名字获取所有员工信息
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetAllEmployeeBasicInfo">
            <summary>
            获取Employee表的所有员工的基本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetAllEmployee">
            <summary>
            获取Employee表的所有员工信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeByConditionForReimburseStatistics(System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            供报销统计使用
            </summary>
            <param name="employeeName"></param>
            <param name="companyID"></param>
            <param name="positionID"></param>
            <param name="departmentID"></param>
            <param name="recursionDepartment"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeBasicInfoByBasicCondition(System.String,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32,System.Int32,System.Boolean,System.Int32,System.Nullable{System.Int32})">
            <summary>
            根据条件获得员工基本信息列表
            </summary>
            <param name="employeeName"></param>
            <param name="employeeType"></param>
            <param name="positionID"></param>
            <param name="departmentID"></param>
            <param name="recursionDepartment"></param>
            <returns></returns>
            <param name="employeestatus"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeBasicInfoByBasicCondition(System.String,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            根据条件获得员工基本信息列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeByBasicCondition(System.String,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32,System.Int32,System.Boolean)">
            <summary>
            根据条件获得员工所有信息列表
            </summary>
            <param name="employeeName"></param>
            <param name="employeeType"></param>
            <param name="positionID"></param>
            <param name="departmentID"></param>
            <param name="recursionDepartment"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeBasicInfoByBasicConditionAndFirstLetter(System.String,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            根据条件获取员工基本信息，条件包括：员工首字符筛选
            </summary>
            <param name="employeeName"></param>
            <param name="employeeType"></param>
            <param name="positionId"></param>
            <param name="departmentId"></param>
            <param name="recursionDepartment"></param>
            <param name="firstLetter"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeByBasicConditionAndFirstLetter(System.String,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            根据条件获取员工所有信息，条件包括：员工首字符筛选
            </summary>
            <param name="employeeName"></param>
            <param name="employeeType"></param>
            <param name="positionId"></param>
            <param name="departmentId"></param>
            <param name="recursionDepartment"></param>
            <param name="firstLetter"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeBasicInfoByBasicConditionExceptEmployeeType(System.String,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32,System.Int32,System.Boolean)">
            <summary>
            根据条件获得员工基本信息，并移除employeeType的员工
            </summary>
            <param name="name"></param>
            <param name="employeeType"></param>
            <param name="positionID"></param>
            <param name="departmentID"></param>
            <param name="recursionDepartment"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeSkillInfoByAccountID(System.Int32)">
            <summary>
            根据员工帐号ID获取所有员工基本信息和员工技能信息
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeAttendenceInfoByAccountID(System.Int32)">
            <summary>
            根据员工帐号ID获得员工考勤信息，考勤规则详情，门禁卡号
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeAttendenceInfoByAccountList(System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32)">
            <summary>
             通过账号类型，和类型，返回hrmis里复合员工类型的员工，并加载信息：考勤规则详情，门禁卡号，入职离职时间
            </summary>
            <param name="accountList"></param>
            <param name="employeeTypeEnum"></param>
            <returns></returns>
            <param name="employeeStatus"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeWithCurrentMonthDimissionEmployee(System.DateTime,System.Int32,System.Int32)">
            <summary>
            获取某个公司下员工
            </summary>
            <param name="currentMonth"></param>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeePhotoByAccountID(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeBasicInfoByBasicConditionWithCompanyAge(System.String,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32,System.Nullable{System.Int32},System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Int32)">
            <summary>
            根据条件获得员工基本信息列表及公司工龄 add by liudan 2009-08-07
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetEmployeeByBasicConditionWithFirstLetterAndCompanyAge(System.String,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32,System.Int32,System.Boolean,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32)">
            <summary>
            根据条件获取员工所有信息，条件包括：员工首字符及公司工龄筛选 add by liudan 2009-08-07
            </summary>
            <param name="employeeName"></param>
            <param name="employeeType"></param>
            <param name="positionId"></param>
            <param name="departmentId"></param>
            <param name="recursionDepartment"></param>
            <param name="firstLetter"></param>
            <param name="CompanyAgeFrom"></param>
            <param name="CompanyAgeTo"></param>
            <returns></returns>
            <param name="employeeStatus"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployee.GetAllEmployeeBasicInfoWithOutLoadAccount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetEmployee.MockIEmployeeAdjustRule">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract">
            <summary>
            获取员工合同信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.#ctor">
            <summary>
            获取员工合同信息构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.#ctor(SEP.HRMIS.IDal.IEmployee,SEP.IBll.Accounts.IAccountBll,SEP.HRMIS.IDal.IContract,SEP.HRMIS.IDal.IContractBookMark,SEP.HRMIS.IDal.IEmployeeContractBookMark,SEP.HRMIS.IDal.IEmployeeSkill,SEP.IBll.Departments.IDepartmentBll,SEP.HRMIS.IDal.IEmployeeAdjustRule)">
            <summary>
            获取员工合同信息构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetCurrentContractByAccountID(System.Int32,System.DateTime)">
            <summary>
            获取员工最新的合同
            </summary>
            <param name="accountId"></param>
            <param name="currentDate"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetEmployeeContractByContractTypeId(System.Int32)">
            <summary>
            根据合同类型查询合同
            </summary>
            <param name="contractTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetEmployeeContractByContractId(System.Int32)">
            <summary>
            根据PKID查询合同
            </summary>
            <param name="contractId"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetEmployeeContractByAccountID(System.Int32)">
            <summary>
            得到某个员工的所有合同
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetLastContractByAccountID(System.Int32)">
            <summary>
            得到员工最新的合同，即不显示过期合同
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetEmployeeContractByCondition(System.String,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            根据条件获取员工合同
            </summary>
            <param name="employeeName"></param>
            <param name="StratTimeFrom"></param>
            <param name="StratTimeTo"></param>
            <param name="EndTimeFrom"></param>
            <param name="EndTimeTo"></param>
            <param name="ContractTypeId"></param>
            <returns></returns>
            <param name="Operator"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetApplyAssessConditionByEmployeeContractID(System.Int32)">
            <summary>
            根据员工合同ID获取考核条件列表
            </summary>
            <param name="employeeContractID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetApplyAssessConditionByPKID(System.Int32)">
            <summary>
            根据PKID获取考核条件
            </summary>
            <param name="pkid"></param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetEmployeeContractBookMarkByContractTypeID(System.Int32,System.Int32)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetRealEmployeeContractBookMarkByContractID(System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.GetEmployeeContract.GetEmployeeContractByCondition(System.String,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            根据条件获取员工合同
            </summary>
            <param name="employeeName"></param>
            <param name="StratTimeFrom"></param>
            <param name="StratTimeTo"></param>
            <param name="EndTimeFrom"></param>
            <param name="EndTimeTo"></param>
            <param name="ContractTypeId"></param>
            <returns></returns>
            <param name="Operator"></param>
            <param name="employeeStatus">-1,全部，0，在职，1，离职</param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddEmployeeContract">
            <summary>
            新增员工合同
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployeeContract.#ctor(SEP.HRMIS.Model.Contract,SEP.HRMIS.Model.Employee)">
            <summary>
            新增员工合同构造函数
            </summary>
            <param name="contract"></param>
            <param name="employee"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployeeContract.#ctor(SEP.HRMIS.Model.Contract,SEP.HRMIS.Model.Employee,SEP.HRMIS.IDal.IContract,SEP.HRMIS.IDal.IEmployee,SEP.HRMIS.IDal.IContractType,SEP.HRMIS.IDal.IEmployeeContractBookMark)">
            <summary>
            新增员工合同构造函数，测试
            </summary>
            <param name="contract"></param>
            <param name="employee"></param>
            <param name="dalContract"></param>
            <param name="dalEmployee"></param>
            <param name="dalContractType"></param>
            <param name="dalEmployeeContractBookMark"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployeeContract.ExcuteSelf">
            <summary>
            调用下层的新增员工合同的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployeeContract.Validation">
            <summary>
            新增员工合同有效性判断：
            1、要签合同的员工是已经存在的员工
            2、离职的员工不能签合同 
            3、合同类型必须是已经存在的合同类型
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.#ctor(SEP.Model.Accounts.Account)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.#ctor(SEP.HRMIS.IDal.IAttendanceReadRule,SEP.HRMIS.IDal.IEmployee,SEP.HRMIS.IDal.IAttendanceInAndOutRecord,SEP.HRMIS.IDal.IReadDataHistory,SEP.Model.Accounts.Account)">
            <summary>
            测试用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.UpdateAttendance">
            <summary>
            统计考勤结果，以天为单位
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.SystemSendEmailByCondition(SEP.HRMIS.Model.OutInTimeConditionEnum)">
            <summary>
            系统自动发信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.ReadRecords(System.DateTime)">
            <summary>
            将数据从Assess中读出
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.WriteSQL">
            <summary>
            将读到的数据写入sql
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.ReadDataFromAccessToSQL(System.Int32)">
            <summary>
            从Access数据库中读数据，写入SQL数据库，记历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.ReadDataFromAccessToSQL(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            从Access数据库中读数据，写入SQL数据库，记历史，有读取时间段，2009-09-28,add by liudan
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.SystemReadDataFromAccessToSQL(SEP.HRMIS.Model.EmployeeAttendance.ReadData.ReadDataHistory)">
            <summary>
            系统自动0点读数据，并统计考勤结果，发信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.SystemReadDataFromSetTime">
            <summary>
            系统自动在指定时间读取考勤数据
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataFromAccess.ReadRecordsWithReadTime(System.DateTime,System.DateTime)">
            <summary>
            从Accesss中读取时间，有读取时间段2009-09-28,add by liudan
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.DeleteAttendanceInOutRecord">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.DeleteAttendanceInOutRecord.#ctor(System.Int32,System.Int32,System.DateTime,SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecordLog,SEP.Model.Accounts.Account)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.DeleteAttendanceInOutRecord.#ctor(System.Int32,System.DateTime,SEP.HRMIS.IDal.IAttendanceInAndOutRecord,SEP.HRMIS.Bll.Transaction,SEP.Model.Accounts.Account)">
            <summary>
            测试用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.DeleteAttendanceInOutRecord.GetInAndOutRecords">
            <summary>
            获取进出记录
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.DeleteAttendanceInOutRecord.FindAttendanceInAndOutRecord(SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecord)">
            <summary>
            insert,update,delete 存在这个相同方法，但是不好复用
            </summary>
            <param name="attendanceInAndOutRecord"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.Nationalitys.InsertNationality">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Nationalitys.InsertNationality.#ctor(SEP.HRMIS.Model.Nationality)">
            <summary>
            
            </summary>
            <param name="nationality"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.Nationalitys.InsertNationality.#ctor(SEP.HRMIS.Model.Nationality,SEP.HRMIS.IDal.IParameter)">
            <summary>
            for test
            </summary>
            <param name="nationality"></param>
            <param name="mockIParameter"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMail.SendSubmitMail(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送提交邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMail.SendCancelMail(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送取消邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMail.BuildBody(SEP.HRMIS.Model.Request.LeaveRequest)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMail.BulidConfirmAddress(System.Text.StringBuilder,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMail.SendMailToNextOperator(System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            发送邮件给下一步处理人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMail.SendConfirmOverMail(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送审核结束邮件
            </summary>
            <param name="leaveRequestID"></param>
            <param name="hrAccountlist"></param>
            <param name="currentStep"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.FillManagerItems">
            <summary>
            填写主管考评项的事务
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillManagerItems.#ctor(System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.AssessActivityItem},System.String,System.String,System.Boolean,System.String,System.Nullable{System.Decimal})">
            <summary>
            填写主管考评项的事务
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillManagerItems.#ctor(System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.AssessActivityItem},System.String,System.String,System.Boolean,System.String,SEP.HRMIS.IDal.IAssessActivity)">
            <summary>
            填写主管考评项的事务
            </summary>
            <param name="activityId"></param>
            <param name="answers"></param>
            <param name="comments"></param>
            <param name="intention"></param>
            <param name="ifSubmit"></param>
            <param name="currentEmployeeName"></param>
            <param name="ia"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddEmployeeHistoryByDepartment">
            <summary>
            给部门下的人员添加历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployeeHistoryByDepartment.#ctor(SEP.Model.Departments.Department,SEP.Model.Accounts.Account)">
            <summary>
            构造函数
            </summary>
            <param name="department"></param>
            <param name="operatorAccount"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployeeHistoryByDepartment.#ctor(SEP.Model.Departments.Department,SEP.Model.Accounts.Account,SEP.HRMIS.IDal.IEmployeeHistory)">
            <summary>
            构造函数
            </summary>
            <param name="operatorAccount"></param>
            <param name="mockEmployeeHistory"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AddEmployeeHistoryByDepartment.MockGetEmployee">
            <summary>
            测试 员工
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.EmployeeAdjustRules.GetEmployeeAdjustRule">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRules.GetEmployeeAdjustRule.GetAdjustRuleByAccountID(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess">
            <summary>
             获得自定义流程方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.#ctor(SEP.HRMIS.IDal.IEmployeeDiyProcessDal)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.#ctor(SEP.HRMIS.IDal.IDiyProcessDal,SEP.HRMIS.IDal.IEmployeeDiyProcessDal,SEP.IBll.Accounts.IAccountBll,SEP.IBll.Departments.IDepartmentBll)">
            <summary>
            构造函数 为测试
            </summary>
            <param name="mockIDiyProcessDal"></param>
            <param name="mockIEmployeeDiyProcessDal"></param>
            <param name="mockIAccountBll"></param>
            <param name="mockIDepartmentBll"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.GetDiyProcessByProcessType(System.Int32)">
            <summary>
            根据自定义流程类型获取自定义流程
            </summary>
            <param name="processTypeId"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.GetEmployeeDiyProcesses(System.Int32)">
            <summary>
            获取员工的自定义流程
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.GetDiyProcessStepString(System.Int32,System.Int32)">
            <summary>
            获取某人流程中的详细步骤
            </summary>
            <param name="accountId">员工id</param>
            <param name="DiyprocessId">diy流程id</param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.GetHRPrincipalProcessString(SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            获取hr负责人流程字符串
            </summary>
            <param name="diyStep"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.GetStepOperator(SEP.Model.Accounts.Account,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            获取请假，报销，考评流程字符串
            </summary>
            <param name="account"></param>
            <param name="diyStep"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.GetOutAndOverWorkOperator(SEP.HRMIS.Model.DiyProcesss.DiyProcess,SEP.Model.Accounts.Account)">
            <summary>
            获取加班，外出流程字符串
            </summary>
            <param name="process"></param>
            <param name="account"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.GetHRPrincipalByAccountID(System.Int32)">
            <summary>
            获得员工AccountID的人事负责人
            </summary>
            <param name="accountId"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.GetDiyProcessByCondition(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="processTypeId"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.GetDiyProcessByPKID(System.Int32)">
            <summary>
            根据PKID获取自定义流程
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.GetDiyProcess.GetAccountMailListByDiyProcessIDAccountID(SEP.HRMIS.Model.DiyProcesss.DiyStep,System.Int32)">
            <summary>
            
            </summary>
            <param name="step"></param>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.CompanyInvolve.GetCompanyInvolve">
            <summary>
            根据公司获取相关信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CompanyInvolve.GetCompanyInvolve.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CompanyInvolve.GetCompanyInvolve.#ctor(SEP.HRMIS.IDal.IEmployee,SEP.IBll.Accounts.IAccountBll,SEP.IBll.Departments.IDepartmentBll)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CompanyInvolve.GetCompanyInvolve.GetEmployeeBasicInfoByCompanyID(System.Int32)">
            <summary>
            获得公司CompanyID下所有的员工的基本信息
            </summary>
            <param name="companyID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.CompanyInvolve.GetCompanyInvolve.GetDepartmentByCompanyID(System.Int32)">
            <summary>
            获得公司CompanyID下所有的部门
            </summary>
            <param name="companyID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.CompanyInvolve.GetCompanyInvolve.GetPositionByCompanyID(System.Int32)">
            <summary>
            获得公司CompanyID下所有的职位
            </summary>
            <param name="companyID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.CompanyInvolve.GetCompanyInvolve.GetAllCompanyHaveEmployee">
            <summary>
            获得系统中所有公司
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.CompanyInvolve.GetCompanyInvolve.GetAllCompanyHaveEmployee(SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            根据操作人的权限，获得系统中所有公司
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.CompanyInvolve.GetCompanyInvolve.GetDepartmentAndChildrenDeptByEmployeeIDAndCompanyID(System.Int32,System.Int32)">
            <summary>
            获得在companyID公司内employeeID所管辖的部门
            </summary>
            <param name="employeeID"></param>
            <param name="companyID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.CompanyInvolve.GetCompanyInvolve.GetDepartmentInCompanyByAuthAndEmployee(System.Int32,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            获得employeeID在companyID中所管辖的部门以及拥有权限的部门
            </summary>
            <param name="companyID"></param>
            <param name="_operator"></param>
            <param name="power"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AutoRemindServer.AutoSendBirthdayMail">
            <summary>
            自动发送生日祝贺信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoSendBirthdayMail.#ctor(System.DateTime)">
            <summary>
            构造函数
            </summary>
            <param name="currDate"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoSendBirthdayMail.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoSendBirthdayMail.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoSendBirthdayMail.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoSendBirthdayMail.SetWelComeMail">
            <summary>
            仅仅用于测试邮件关口
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoSendBirthdayMail.SetMailGateWay">
            <summary>
            仅仅用于测试邮件关口
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoSendBirthdayMail.MailBody">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindContract">
            <summary>
            员工合同到期前_Days天提醒人事
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindContract.#ctor(System.DateTime,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="currDate"></param>
            <param name="days"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindContract.#ctor(System.DateTime,System.Int32,SEP.HRMIS.IDal.IContract)">
            <summary>
            构造函数，为测试
            </summary>
            <param name="currDate"></param>
            <param name="days"></param>
            <param name="mockContract"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindContract.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindContract.SetMailGateWay">
            <summary>
            仅仅用于测试邮件关口
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindContract.MockGetDiyProcess">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindContract.MailBodyListToHR">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.DeletePlanDuty">
            <summary>
            删除班别
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.DeletePlanDuty.#ctor(System.Int32)">
            <summary>
            修改班别，构造函数
            </summary>
            <param name="planDutyTableId"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.DeletePlanDuty.#ctor(System.Int32,SEP.HRMIS.IDal.IPlanDutyDal)">
            <summary>
            测试用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.DeletePlanDuty.Validation">
            <summary>
            修改时查看该条记录是否存在，并判断是否有重名
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeNormlSummary">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeNormlSummary.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeNormlSummary.Excute">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeNormlSummary.InitSubmitInfoIndex">
            <summary>
            初始化第几个考评是个人考评
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeNormlSummary.AddNeedRow(Microsoft.Office.Interop.Word.Table@,System.Int32,System.Int32)">
            <summary>
            根据需要在table中增加必要的行
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.ReimburseSendMail.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.Reimburse.AddReimburse">
            <summary>
            新增报销单
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.Reimburse.AddReimburse._DalReimburse">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.AddReimburse.#ctor(System.Int32,SEP.HRMIS.Model.Reimburse)">
            <summary>
            构造函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.AddReimburse.#ctor(System.Int32,SEP.HRMIS.Model.Reimburse,SEP.HRMIS.IDal.IReimburse,SEP.HRMIS.IDal.IEmployee)">
            <summary>
            新增报销单
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkConfirmMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkConfirmMail.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkConfirmMail.SendMailToNextOperator(SEP.Model.Accounts.Account)">
            <summary>
            给下一步操作人发邮件
            </summary>
            <param name="nextOperator"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutConfirmMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutConfirmMail.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutConfirmMail.SendMailToNextOperator(SEP.Model.Accounts.Account)">
            <summary>
            给下一步操作人发邮件
            </summary>
            <param name="nextOperator"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.CalculateOutCityHour">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CalculateOutCityHour.#ctor(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CalculateOutCityHour.#ctor(System.DateTime,System.DateTime,System.String,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CalculateOutCityHour.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CalculateOutCityHour.TestCalculate(System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.OutApplications.CalculateOutCityHour.DayAttendanceList">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetEmployeeSkill">
            <summary>
            获得员工技能信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeSkill.#ctor(SEP.HRMIS.IDal.IEmployeeSkill)">
            <summary>
            GetEmployeeSkill的构造函数，专为测试提供
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeSkill.#ctor">
            <summary>
            GetEmployeeSkill的构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeSkill.GetEmployeeSkillByAccountID(System.Int32,System.String,System.Int32,SEP.HRMIS.Model.SkillLevelEnum)">
            <summary>
            根据员工帐号ID获得员工技能列表
            </summary>
            <param name="accountid"></param>
            <param name="skillName"></param>
            <param name="skillTypeID"></param>
            <param name="skillLevel"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.CreateEmployeeWelfareHistoryByAccountID">
            <summary>
            记录员工福利历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CreateEmployeeWelfareHistoryByAccountID.#ctor(SEP.HRMIS.Model.EmployeeWelfare,System.Int32,System.String,System.DateTime,SEP.HRMIS.IDal.IEmployeeWelfareHistory)">
            <summary>
            记录员工福利历史构造函数
            </summary>
            <param name="employeeWelfare"></param>
            <param name="employeeID"></param>
            <param name="operationName"></param>
            <param name="dt"></param>
            <param name="MockEmployeeWelfareHistory"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.Nationalitys.GetNationality">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Nationalitys.GetNationality.GetNationalityByPkid(System.Int32)">
            <summary>
            
            </summary>
            <param name="pkid"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.Nationalitys.GetNationality.GetNationalityByCondition(System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="pkid"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.CancelLeaveRequestItem">
            <summary>
            取消单个请假项
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.CancelLeaveRequestItem.#ctor(System.Int32,System.Int32,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String)">
            <summary>
            取消请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.CancelLeaveRequestItem.#ctor(System.Int32,System.Int32,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String,SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal,SEP.HRMIS.IDal.IEmployeeDiyProcessDal)">
            <summary>
            取消请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.CancelLeaveRequestItem.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.CancelLeaveRequestItem.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.CancelLeaveRequestItem.PrepareLeaveRequestFlow(System.Int32)">
            <summary>
            准备流程所需的插入数据
            </summary>
            <param name="leaveRequestItemID"></param>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.LeaveRequests.CancelLeaveRequestItem.ResultMessage">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.ApproveLeaveRequestItem">
            <summary>
            审核单个请假项
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveLeaveRequestItem.#ctor(System.Int32,System.Int32,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String)">
            <summary>
            取消整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveLeaveRequestItem.#ctor(System.Int32,System.Int32,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String,SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal,SEP.HRMIS.IDal.IEmployeeDiyProcessDal,SEP.HRMIS.IDal.IVacation,SEP.HRMIS.IDal.IAdjustRest,SEP.HRMIS.IDal.IPlanDutyDal,SEP.HRMIS.IDal.ILeaveRequestType)">
            <summary>
            取消整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveLeaveRequestItem.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveLeaveRequestItem.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveLeaveRequestItem.ConfirmItem(System.Collections.Generic.List{SEP.Model.Accounts.Account}@,SEP.HRMIS.Model.DiyProcesss.DiyStep@,SEP.HRMIS.Model.DiyProcesss.DiyStep@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveLeaveRequestItem.PrepareLeaveRequestFlow(System.Int32)">
            <summary>
            准备流程所需的插入数据
            </summary>
            <param name="leaveRequestItemID"></param>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.LeaveRequests.ApproveLeaveRequestItem.ResultMessage">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.FileCargos.UpdateFileCargo">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.FileCargos.UpdateFileCargo.#ctor(SEP.HRMIS.Model.FileCargo)">
            <summary>
            
            </summary>
            <param name="fileCargo"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.EmployeeContract.ApplyAssessConditionUtility">
            <summary>
            自动发起考核公共方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.ApplyAssessConditionUtility.GenerateConditions(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition})">
            <summary>
            将conditions进行排序，根据发起时间排序
            </summary>
            <param name="conditions"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.ApplyAssessConditionUtility.RemoveUnvalidConditions(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition},System.DateTime,System.DateTime)">
            <summary>
            移除数据
            </summary>
            <param name="conditions"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeContract.ApplyAssessConditionUtility.CreateAnnualConditions(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition},System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            生成年终考核
            </summary>
            <param name="conditions"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="employeeComeDate"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.EmployeeAdjustRules.EditEmployeeAdjustRule">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRules.EditEmployeeAdjustRule.#ctor(System.Int32,SEP.HRMIS.Model.Adjusts.AdjustRule)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.CustomerInfos.AddCustomerInfo">
            <summary>
            新增客户信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CustomerInfos.AddCustomerInfo.#ctor(SEP.HRMIS.Model.CustomerInfo)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CustomerInfos.AddCustomerInfo.#ctor(SEP.HRMIS.Model.CustomerInfo,SEP.HRMIS.IDal.ICustomerInfoDal)">
            <summary>
            test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.Train.UpdateFeedBackPaper">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Train.UpdateFeedBackPaper.#ctor(SEP.HRMIS.Model.FeedBackPaper)">
            <summary>
            该事务执行后，会修改考评表的基本信息
            异常情况:
            1.当前要修改的考评表是否存在，如果不在则给出提示，事务中断
            2.PaperName不可与已有Paper的PaperName重复，否则给出提示，事务中断
            业务流程：
            1.有效性判断
            2.如果通过有效性判断，则调用IDal层方法进行考评表修改
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Train.UpdateFeedBackPaper.#ctor(SEP.HRMIS.IDal.IFeedBackPaper,SEP.HRMIS.Model.FeedBackPaper)">
            <summary>
            </summary>
            <param name="iPaper"></param>
            <param name="paper"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.SystemErrors.GetEmployeeContractError">
            <summary>
            员工合同异常数据
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.GetEmployeeContractError.#ctor(System.String,System.Int32,System.DateTime,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.SystemErrors.GetEmployeeContractError.SystemErrorList">
            <summary>
            返回的结果
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.Reimburse.WaitAuditReimburses._DalReimburse">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.ReadExternalData.ReadAccessData">
            <summary>
            调用WCF从Access读取考勤机数据
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.ReadExternalData.ReadAccessData.ReadRecords(System.DateTime)">
            <summary>
            调用WCF从Access按时间读取考勤机数据
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.Tax.DeleteTaxBand.#ctor(System.Int32,SEP.HRMIS.IDal.PayModule.ITax)">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeAccountSet">
            <summary>
            excel导入员工工资套以及固定值
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeAccountSet.#ctor(System.String,SEP.Model.Accounts.Account)">
            <summary>
            构造函数
            </summary>
            <param name="filePath"></param>
            <param name="_operator"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeAccountSet.InsertUpdateEmployeeAccountSet(System.Data.DataSet)">
            <summary>
            更新员工的帐套
            </summary>
            <param name="ds"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeAccountSet.GetDataSetColumnIndex(System.Data.DataSet,System.String)">
            <summary>
            获得columnName在excel中的列Index
            </summary>
            <param name="ds"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeAccountSet.ToInsertUpdateEmployeeAccountSet(System.Data.DataSet,System.Int32,System.Int32)">
            <summary>
            开始更新员工的帐套
            </summary>
            <param name="ds"></param>
            <param name="indexAccountSetName"></param>
            <param name="indexEmployeeName"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeAccountSet.BindAccountSetData(System.Data.DataSet,System.Int32,SEP.HRMIS.Model.PayModule.AccountSet)">
            <summary>
            将excel的数据绑定到AccountSet上
            </summary>
            <param name="ds"></param>
            <param name="indexRow"></param>
            <param name="accountSet"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeAccountSet.LoadDataFromExcel(System.String)">
            <summary>
            加载Excel 
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSet.MergeAccountSetItem(System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.EmployeeSalary})">
            <summary>
            比较旧帐套和新帐套的内容，每个人的帐套进行多删少补
            </summary>
            <param name="employeeSalarys">员工帐套列表</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSet.IsAccountSetChanged(SEP.HRMIS.Model.PayModule.AccountSetItem,System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.AccountSetItem})">
            <summary>
            检查帐套项的其他属性是否改变
            </summary>
            <param name="item"></param>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSet.UpdateEmployeeAccountSetItemWithNewAccountSetItem(System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.AccountSetItem},SEP.HRMIS.Model.PayModule.AccountSetItem)">
            <summary>
            更新员工帐套
            </summary>
            <param name="items"></param>
            <param name="item"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSet.IsAccountSetInList(SEP.HRMIS.Model.PayModule.AccountSetItem,System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.AccountSetItem})">
            <summary>
            判断accountSetItems中是否有item
            </summary>
            <param name="item"></param>
            <param name="accountSetItems"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSet.AddEmployeeAccountSetItemWithNewAccountSetItem(System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.AccountSetItem},SEP.HRMIS.Model.PayModule.AccountSetItem)">
            <summary>
            添加accountSetItems中帐套项newItem
            </summary>
            <param name="accountSetItems"></param>
            <param name="newItem"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSet.RemoveEmployeeAccountSetItemByAccountSetItemID(System.Collections.Generic.List{SEP.HRMIS.Model.PayModule.AccountSetItem},System.Int32)">
            <summary>
            删除accountSetItems中accountSetPara为ID的帐套项
            </summary>
            <param name="accountSetItems"></param>
            <param name="paraId"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkCancelPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkCancelPhone.#ctor(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkCancelPhone.SendPhone">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutConfirmPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutConfirmPhone.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutConfirmPhone.SendPhoneToNextOperator(SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
             <summary>
            
             </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutCancelPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutCancelPhone.#ctor(System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutCancelPhone.SendPhone">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.CancelAllOutApplication">
            <summary> 
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CancelAllOutApplication.#ctor(System.Int32,System.String)">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.CachedEmployee">
            <summary>
            员工缓存
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CachedEmployee.GetEmployeeByPhoneNumber(System.String)">
            <summary>
            通过电话号码获取员工对象，在该类中，只要满足数据精确性，就可以构建不同的查询方法
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetEmployeeHistory">
            <summary>
            获得员工历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.#ctor(SEP.HRMIS.IDal.IEmployeeHistory)">
            <summary>
            构造函数，测试
            </summary>
            <param name="iEmployeeHistory"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetEmployeeHistoryByEmployeeHistoryID(System.Int32)">
            <summary>
            通过员工历史表ID得到员工所有信息
            </summary>
            <param name="employeeHistoryID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetEmployeeHistoryBasicInfoByEmployeeHistoryID(System.Int32)">
            <summary>
            通过员工历史表ID得到员工所有基本信息
            </summary>
            <param name="employeeHistoryID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetEmployeeHistoryByAccountID(System.Int32)">
            <summary>
            根据员工帐号ID获得所有员工的历史信息
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetEmployeeHistoryBasicInfoByAccountID(System.Int32)">
            <summary>
            通过员工ID得到员工所有的历史基本信息记录
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetOnDutyEmployeeBasicInfoByDateTime(System.DateTime)">
            <summary>
            查找某一时间下的所有在职员工
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetOnDutyEmployeeBasicInfoByDateTimeAndCompany(System.DateTime,System.Int32)">
            <summary>
            查找某一时间某公司下的所有在职员工
            </summary>
            <param name="dt"></param>
            <returns></returns>
            <param name="companyID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetEmployeeBasicInfoByDepartmentAndDateTime(System.Int32,System.DateTime)">
            <summary>
            查找某一时间下，某一部门下的所有直属员工
            </summary>
            <param name="departmentID"></param>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetAllEmployeeByDepartmentAndDateTime(System.Int32,System.DateTime,System.Boolean)">
            <summary>
            查找某一时间下，某一部门及其子部门下的所有员工
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetEmployeeOnDutyByDepartmentAndDateTime(System.Int32,System.DateTime,System.Boolean,SEP.Model.Accounts.Account,System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.Employee})">
            <summary>
            获取再dt时刻的在职员工
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetEmployeeAtLeaveDate(System.Int32,System.Boolean)">
            <summary>
            获得员工离职时刻的信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeHistory.GetEmployeeByDate(System.Int32,System.Boolean,System.DateTime)">
            <summary>
            获得员工某一时刻的最新信息
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetEmployeeHistory.MockGetDepartmentHistory">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetEmployeeHistory.MockPositionHistroy">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.SystemSetApplyAssessCondition">
            <summary>
            自动生成考核条件
            调用不同情况的劳动合同，续签劳动合同，实习合同实现类
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemSetApplyAssessCondition.#ctor(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition},System.Int32,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            系统自动生成考核条件构造函数
            </summary>
            <param name="applyAssessConditions"></param>
            <param name="contractTypeId"></param>
            <param name="contractStartTime"></param>
            <param name="contractEndTime"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetAdjustRest">
            <summary>
            员工的剩余调休
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.#ctor(SEP.HRMIS.IDal.IAdjustRest,SEP.HRMIS.IDal.ILeaveRequestFlowDal)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.#ctor(SEP.HRMIS.IDal.IAdjustRest,SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal)">
            <summary>
            
            </summary>
            <param name="mockEmployeeAttendance"></param>
            <param name="mockLeaveRequest"></param>
            <param name="mockLeaveRequestFlow"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.GetAdjustRestRemainedDaysByEmployeeID(System.Int32)">
            <summary>
            
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.AdjudgeAdjustAvailable(SEP.HRMIS.Model.Request.LeaveRequest)">
            <summary>
            
            </summary>
            <param name="leaveRequest"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.GetAdjustRestByCondition(System.String,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32,System.Int32,System.Boolean,SEP.Model.Accounts.Account,System.Nullable{System.Int32},System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.GetAdjustRestByAccountID(System.Int32)">
            <summary>
            根据员工ID获得调休信息，包括历史信息
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.GetAdjustRestByPKID(System.Int32)">
            <summary>
            
            </summary>
            <param name="pkid"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.GetAdjustRestBasicInfoByAccountID(System.Int32)">
            <summary>
            根据员工ID获得调休信息，不包括历史信息
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.GetAdjustRestByAccountIDAndTime(System.Int32,System.DateTime)">
            <summary>
            通过时间查询某个员工有效的调休值，没有则返回0
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetAdjustRest.GetNowAdjustRestByAccountID(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetAdjustRest.MockGetAdjustRestHistory">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetAdjustRest.MockIAdjustRest">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetAdjustRest.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetAdjustRest.MockILeaveRequestDal">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetAdjustRest.MockILeaveRequestFlowDal">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetDepartmentHistory">
            <summary>
            获取部门历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetDepartmentHistory.#ctor">
            <summary>
            获取部门历史构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetDepartmentHistory.#ctor(SEP.HRMIS.IDal.IDepartmentHistory)">
            <summary>
            获取部门历史构造函数
            </summary>
            <param name="mockDalDepartmentHistory"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetDepartmentHistory.GetDepartmentNoStructByDateTime(System.DateTime)">
            <summary>
            获得dt时间点的组织架构,无结构
            </summary>
            <param name="searchTime"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetDepartmentHistory.GetDepartmentListStructByDepartmentIDAndDateTime(System.Int32,System.DateTime)">
            <summary>
            获得dt时间点deparmentID的树形结构，以列表形式返回
            </summary>
            <param name="deparmentID"></param>
            <param name="searchTime"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetDepartmentHistory.GetDepartmentTreeStructByDateTime(System.DateTime)">
            <summary>
            获得dt时间点的组织架构,有树形结构
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Employee_Name_Repeat">
            <summary>
            员工名字不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Employee_Name_NotExist">
            <summary>
            该员工不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Employee_HasLeft">
            <summary>
            该员工已经离职
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Employee_NeedDimissionInformation">
            <summary>
            离职的员工需要填写离职信息
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._LeaveRequest_Exist">
            <summary>
            内容相同的请假已存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._LeaveRequest_CanNot_BeApproved">
            <summary>
            该请假单不能被审核
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Request_CostTime_AdjustRestOverAvailableTime">
            <summary>
            剩余调休不可透支，请假时间不可超出剩余调休小时数
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Request_CostTime_AnnualLeaveOverAvailableTime">
            <summary>
            剩余年假不可透支，请假时间不可超出剩余年假小时数
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Accounts_AccountsFrontName_Repeat">
            <summary>
            登录名不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Accounts_AccountsFront_Password_Wrong">
            <summary>
            密码错误
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Accounts_AccountsBack_NotExist">
            <summary>
            登录名不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Accounts_AccountsBack_Repeat">
            <summary>
            登录名不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Accounts_AccountsBack_Password_Wrong">
            <summary>
            密码错误
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Accounts_AccountsBack_UsbKey_Wrong">
            <summary>
            错误的UsbKey身份认证
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._OldPassword_Wrong">
            <summary>
            旧密码不正确
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Department_Name_Repeat">
            <summary>
            部门名称不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Department_Leader_NotExist">
            <summary>
            不存在该部门主管
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Department_ParentDepartment_CannotBeNull">
            <summary>
            上级部门不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Department_ParentDepartment_NotExist">
            <summary>
            上级部门不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Department_NotExist">
            <summary>
            该部门不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Department_RootDepartment_CannotBeChanged">
            <summary>
            根结点的上级部门不能被修改
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Department_HasEmployee">
            <summary>
            还有员工属于该部门
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Department_HasReimburse">
            <summary>
            当前部门中已经有报销单记录
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AssessTemplateItem_Title_Exist">
            <summary>
            考评项已经存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AssessTemplatePaper_PaperName_Exist">
            <summary>
            考评表已经存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AssessTemplatePaper_Not_Exist">
            <summary>
            该考评表不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AssessTemplatePaper_Not_20">
            <summary>
            考评表中的考评项没有20项
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AssessTemplateItem_Not_Exist">
            <summary>
            考评项不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AssessTemplateItem_In_AssessTemplatePaper">
            <summary>
            考评项在考评表关系中
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CharacterNormalForContract">
            <summary>
            合同期满考核
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CharacterNormal">
            <summary>
            合同期周年考核
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CharacterProbationI">
            <summary>
            试用期I
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CharacterProbationII">
            <summary>
            试用期II
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CharacterPracticeI">
            <summary>
            实习期I
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CharacterPracticeII">
            <summary>
            实习期II
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CharacterAbnormal">
            <summary>
            非常规考核
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CharacterAnnual">
            <summary>
            年终考核
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_To_HR_For_Confirming">
            <summary>
            员工考核以被初始化，等待人事确认。
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_To_Employee_For_Confirming_Attendance">
            <summary>
            月末考勤确认
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_To_Employee_For_Vacation">
            <summary>
            年假到期提醒个人
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_To_HR_For_Vacation">
            <summary>
            年假到期提醒HR
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_To_HR_For_Contract">
            <summary>
            合同到期提醒HR
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Exist_Opening_AssessActivity">
            <summary>
            该员工正在参加其它考核活动
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._InvalidActivityId">
            <summary>
            无效的考评活动
            </summary>
            <summary>
            无效的考评活动
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._InvalidTemplateId">
            <summary>
            无效的考评模板
            </summary>
            <summary>
            无效的考评表模板
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._InvalidFillItems">
            <summary>
            无效的考评项
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._InvalidStatus">
            <summary>
            不正常的流程，联系人事部门或者管理员
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Activity_Is_Finish">
            <summary>
            该考评活动已经结束
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Activity_Is_Interrupt">
            <summary>
            该考评活动已经中断
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._InvalidIntention">
            <summary>
            无效的考评意向
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._SalaryType_Name_Repeat">
            <summary>
            工资类型名称不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._SalaryType_Name_NotExist">
            <summary>
            不存在该工资类型
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._SalaryType_HasLeaveRequest">
            <summary>
            此工资类型已经被使用，不可被修改或删除
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._LeaveRequestType_Name_Repeat">
            <summary>
            请假类型名称不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._LeaveRequestType_Name_NotExist">
            <summary>
            不存在该请假类型
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._LeaveRequestType_HasLeaveRequest">
            <summary>
            此请假类型已经被使用，不可被修改或删除
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._ContractType_Name_Repeat">
            <summary>
            合同类型名称不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._ContractType_Name_NotExist">
            <summary>
            不存在该合同类型
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._ConstractType_HasConstract">
            <summary>
            还有合同属于该类型
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Position_Name_Repeat">
            <summary>
            职位名称不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Position_HasEmployee">
            <summary>
            还有属于该职位的员工
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Position_Not_Exist">
            <summary>
            不存在该职位
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._PositionGrade_Name_Repeat">
            <summary>
            职位层级名称不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._PositionGrade_Name_NotExist">
            <summary>
            不存在该职位层级
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._PositionGrade_HasPositionGrade">
            <summary>
            此职位层级已经被使用，不可被修改或删除
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._FBQuesType_Repeat">
            <summary>
            培训反馈问题类型不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._SkillType_Name_Repeat">
            <summary>
            技能类型名称不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._SkillType_Name_NotExist">
            <summary>
            不存在该技能类型
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._SkillType_HasSkill">
            <summary>
            此技能类型已经被使用，不可被修改或删除
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Vacation_Not_Exist">
            <summary>
            该年假信息不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Employee_Vacation_Exist">
            <summary>
            该员工年假信息已存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Appendix_Title_Repeat">
            <summary>
            附件标题重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Bulletin_Title_Repeat">
            <summary>
            公告标题重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Bulletin_Not_Exist">
            <summary>
            该公告不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Appendix_Not_Exist">
            <summary>
            附件不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Bulletin_Title_Null">
            <summary>
            公告标题不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Appendix_Title_Null_Or_Big_Then_Fifty">
            <summary>
            请检查附件标题是否为空或大于50个字符
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Bulletin_Title_Big_Then_Fifty">
            <summary>
            公告标题不能超过50个字符
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Contract_NotExist">
            <summary>
            不存在这份合同
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CompanyGoal_Title_Repeat">
            <summary>
            公司目标标题重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._PersonalGoal_Title_Repeat">
            <summary>
            个人目标标题重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._DepartmentGoal_Title_Repeat">
            <summary>
            团队目标标题重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Goal_NotExist">
            <summary>
            该目标不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CompanyGoal_NotExist">
            <summary>
            该公司目标不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._PersonalGoal_NotExist">
            <summary>
            该个人目标不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._DepartmentGoal_NotExist">
            <summary>
            该团队目标不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Goal_Title_Null">
            <summary>
            目标标题不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Goal_Title_More_Then_Fifty">
            <summary>
            目标标题不能超过50个字符
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_From_Null">
            <summary>
            发信地址不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_To_Null">
            <summary>
            收信地址不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_Subject_Null">
            <summary>
            邮件标题不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_Body_Null">
            <summary>
            邮件正文不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_SmtpClient_Null">
            <summary>
            简单邮件传输协议(SMTP) 服务器不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Email_Send_Failure">
            <summary>
            发送邮件失败
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Application_Not_Exist">
            <summary>
            申请表不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Application_Exist">
            <summary>
            内容相同的申请已存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Application_Not_UpdateAble">
            <summary>
            申请表格已被提交，无法修改
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Application_Not_DeleteAble">
            <summary>
            申请表格已被提交，无法删除
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._ApplicationFlow_Not_Exist">
            <summary>
            该审核不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Application_Not_CancelAble">
            <summary>
            无法取消申请
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Application_Not_ConfirmAble">
            <summary>
            无法审核申请
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Request_Date_Repeat">
            <summary>
            该时间段内，已有请假，加班或外出记录
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Employee_Not_Found">
            <summary>
            系统中无该员工
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Absent_SameDay">
            <summary>
            该员工在同一天已经有了旷工记录
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._EarlyLeave_SameDay">
            <summary>
            该员工在同一天已经有了早退记录
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Later_SameDay">
            <summary>
            该员工在同一天已经有了迟到记录
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Attendance_Not_Exist">
            <summary>
            该记录不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_Not_Exist">
            <summary>
            该报销单不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_Not_Update_Or_Delete">
            <summary>
            该报销单已进入报销流程，不可修改或删除
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_Has_Interruptted">
            <summary>
            操作失败，该报销单已被中断
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_Has_Reimbursed">
            <summary>
            操作失败，该报销单已报销
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_Has_Added">
            <summary>
            操作失败，该报销单尚未进入报销流程
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_Has_Canceled">
            <summary>
            操作失败，该报销单已经取消
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_No_DiyProcess">
            <summary>
            该账号没有报销流程
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_Has_Return">
            <summary>
            操作失败，该报销单已退回
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_Has_Auditing">
            <summary>
            操作失败，该报销单已审核通过
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_Has_WaitAudit">
            <summary>
            操作失败，该报销单已报销
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Reimburse_Has_Reimbursing">
            <summary>
            操作失败，该报销单提交中
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AttendanceRule_Not_Exist">
            <summary>
            该考勤规则不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AttendanceRule_Name_Repeat">
            <summary>
            考勤规则名词重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AttendanceReadRule_Not_Exist">
            <summary>
            读取设置不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._DutyClass_Not_Exist">
            <summary>
            该班别不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._DutyClass_Name_Repeat">
            <summary>
            班别名词重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._LeaveRequest_Error">
            <summary>
            请假单信息错误
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._XML_Error">
            <summary>
            xml读取错误，请联系管理员
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._TrainCourse_NotExist">
            <summary>
            培训课程不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._TrainCourse_End">
            <summary>
            培训课程已经结束
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Skill_Name_Repeat">
            <summary>
            技能名称不能重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Skill_Name_NotExist">
            <summary>
            技能名称不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Skill_HasEmployeeSkillOrCourse">
            <summary>
            此技能已经被使用，不可被修改或删除
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._TaxBand_BindMin_Repeat">
            <summary>
            税阶下限重复
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSetParaName_IsNull">
            <summary>
            帐套参数名称不可为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSetParaName_BindItem_IsNull">
            <summary>
            绑定项不可为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSetParaName_Repeat">
            <summary>
            存在重复的帐套参数名称
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSet_BindItem_IsNull">
            <summary>
            绑定项不可为无
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSetPara_IsNotExist">
            <summary>
            帐套参数不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSetParaName_HasUsed">
            <summary>
            操作失败，帐套参数已被某个帐套项使用
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSetName_IsNull">
            <summary>
            帐套名称不可为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSetName_Repeat">
            <summary>
            存在重复的帐套名称
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSetPara_IsNull">
            <summary>
            帐套参数没有实例化
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSet_CalculateFormula_IsNull">
            <summary>
            计算公式不可为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSet_IsNotExist">
            <summary>
            帐套不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSet_EmployeeAccountSet_HasUsed">
            <summary>
            操作失败，该帐套已被使用
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSetPara_FieldAttribute_IsNull">
            <summary>
            帐套参数的字段属性没有实例化
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._AccountSet_UseRepeatPara">
            <summary>
            帐套中使用了重复的帐套参数
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._EmployeeAccountSet_AccountSet_IsNull">
            <summary>
            员工帐套不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._EmployeeAccountSet_BackAccountsName_IsNull">
            <summary>
            后台账号不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._EmployeeAccountSet_EmployeeID_IsNull">
            <summary>
            员工编号不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._EmployeeAccountSet_EmployeeAccountSet_NotExist">
            <summary>
            该员工不存在帐套
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._EmployeeAccountSet_AccountSet_NotExist">
            <summary>
            该帐套不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Employee_Salary_NotExist">
            <summary>
            该薪水记录不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Employee_Salary_Closed">
            <summary>
            该薪水记录已封帐
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Employee_Salary_Not_Closed">
            <summary>
            该薪水记录还没有封帐
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Employee_Salary_Exist">
            <summary>
            该员工此月工资记录已存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Import_Failed">
            <summary>
            导入失败
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Upload_Failed">
            <summary>
            上传失败
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._Sheet_Count_NotOne">
            <summary>
            确保一个工作表
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._WithOut_EmployeeName">
            <summary>
            没有“姓名”列
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CompanyRegulations_Title_Null">
            <summary>
            公司规章制度标题不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CompanyReguAppendix_FileName_Null">
            <summary>
            公司规章制度附件标题不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._CompanyReguAppendix_Directory_Null">
            <summary>
            公司规章制度附件路径不能为空
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._FeedBackPaper_Not_Exist">
            <summary>
            该反馈表不存在
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllExceptionConst._FeedBackPaper_Name_Repeat">
            <summary>
            该反馈表名称重复
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessManagement.GetAssessTempletPaperById(System.Int32)">
            <summary>
            Get考评表的3个方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessManagement.GetTempletPaperAndItemById(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessManagement.GetTempletPaperIDByEmployeePositionID(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.DeleteAssessPaper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.DeleteAssessPaper.#ctor(System.Int32)">
            <summary>
            该事务执行后，会删除考评表的所有信息
            异常情况:
            1.当前要删除的考评表是否存在，如果不在则给出提示，事务中断
            业务流程：
            1.有效性判断
            2.如果通过有效性判断，则调用IDal层方法进行考评表的删除（其中包括考评表中与考评项关系的删除）
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.DeleteAssessPaper.#ctor(SEP.HRMIS.IDal.IAssessTemplatePaper,SEP.HRMIS.IDal.IAssessTemplatePaperBindPosition,System.Int32)">
            <summary>
            test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestConfirmPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestConfirmPhone.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestConfirmPhone.SendPhoneToNextOperator(System.Int32,SEP.HRMIS.Model.Request.LeaveRequestItem,System.Int32)">
            <summary>
            给下一步操作人发邮件
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.CancelAllLeaveRequest">
            <summary>
            取消整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.CancelAllLeaveRequest.#ctor(System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String)">
            <summary>
            取消整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.CancelAllLeaveRequest.#ctor(System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String,SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal,SEP.HRMIS.IDal.IEmployeeDiyProcessDal)">
            <summary>
            取消整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.CancelAllLeaveRequest.PrepareLeaveRequestFlow(System.Int32)">
            <summary>
            准备流程所需的插入数据
            </summary>
            <param name="leaveRequestItemID"></param>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.LeaveRequests.CancelAllLeaveRequest.ResultMessage">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.ApproveWholeLeaveRequest">
            <summary>
            审核整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveWholeLeaveRequest.#ctor(System.Int32,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String)">
            <summary>
            审核整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveWholeLeaveRequest.#ctor(System.Int32,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String,SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal,SEP.HRMIS.IDal.IEmployeeDiyProcessDal,SEP.HRMIS.IDal.IVacation,SEP.HRMIS.IDal.IAdjustRest,SEP.HRMIS.IDal.IPlanDutyDal,SEP.HRMIS.IDal.ILeaveRequestType)">
            <summary>
            审核整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveWholeLeaveRequest.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveWholeLeaveRequest.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.LeaveRequests.ApproveWholeLeaveRequest.ResultMessage">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.CustomerInfos.DeleteCustomerInfo">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CustomerInfos.DeleteCustomerInfo.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CustomerInfos.DeleteCustomerInfo.#ctor(System.Int32,SEP.HRMIS.IDal.ICustomerInfoDal,SEP.HRMIS.IDal.IReimburse)">
            <summary>
            test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.UpdateDutyClass">
            <summary>
            修改班别
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateDutyClass.#ctor(SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.DutyClass)">
            <summary>
            修改班别，构造函数
            </summary>
            <param name="rule"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateDutyClass.#ctor(SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.DutyClass,SEP.HRMIS.IDal.IPlanDutyDal)">
            <summary>
            测试用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateDutyClass.Validation">
            <summary>
            修改时查看该条记录是否存在，并判断是否有重名
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.MonthAttendanceStatistics">
            <summary>
            月统计
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.MonthAttendanceStatistics.GetMonthAttendanceStatistics(System.String,System.Int32,System.Nullable{System.Int32},System.DateTime,System.DateTime,SEP.Model.Accounts.Account,System.Nullable{System.Int32})">
            <summary>
            计算员工的考勤情况
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.MonthAttendanceStatistics.GetMonthAttendanceStatistics(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            计算员工的考勤情况
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.ApplicationSearch">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ApplicationSearch.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ApplicationSearch.#ctor(SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.IOutApplication,SEP.HRMIS.IDal.IOverWork)">
            <summary>
            测试专用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ApplicationSearch.GetRequestFromLeaveRequest(System.Int32,System.DateTime,System.DateTime,SEP.HRMIS.Model.Request.RequestStatus)">
             <summary>
            将查找出来的请假转化为IRequest
             </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ApplicationSearch.GetRequestFromOutApplication(System.Int32,System.DateTime,System.DateTime,SEP.HRMIS.Model.Request.RequestStatus,SEP.HRMIS.Model.OutApplication.OutType)">
             <summary>
            将查找出来的申请转化为IRequest
             </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ApplicationSearch.GetRequestFromOverWork(System.Int32,System.DateTime,System.DateTime,SEP.HRMIS.Model.Request.RequestStatus)">
             <summary>
            将查找出来的申请转化为IRequest
             </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ApplicationSearch.GetRequestRecordByCondition(System.String,System.Int32,System.Nullable{System.Int32},System.DateTime,System.DateTime,SEP.HRMIS.Model.ApplicationTypeEnum,SEP.HRMIS.Model.Request.RequestStatus,SEP.Model.Accounts.Account)">
            <summary>
            通过条件查找员工的请假，加班，外出情况，便于人事后台查看流程流转状态
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.ExportNormalForContract">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportNormalForContract.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportNormalForContract.Excute">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportNormalForContract.InitSubmitInfoIndex">
            <summary>
            初始化第几个考评是主管考评
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportNormalForContract.AddNeedRow(Microsoft.Office.Interop.Word.Table@,System.Int32,System.Int32)">
            <summary>
            根据需要在table中增加必要的行
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.ExportAnualAssessListExcel">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnualAssessListExcel.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,SEP.Model.Accounts.Account,System.Int32,SEP.HRMIS.Model.AssessStatus)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnualAssessListExcel.PrepareData">
            <summary>
            初始化数据
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnualAssessListExcel.Excute">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnualAssessListExcel.GetIndex(SEP.HRMIS.Model.AssessActivity,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            初始化主管人事个人在哪一个位置
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnualAssessListExcel.InitHrmisQuestionRow(Microsoft.Office.Interop.Excel._Application)">
            <summary>
            创建人事项，放入表头
            </summary>
            <param name="excel"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportAnualAssessListExcel.InitHrmisQuestion">
            <summary>
            初始化hrmis项
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddCourseFeedBack.#ctor(System.Int32,SEP.HRMIS.Model.TrainEmployeeFB,SEP.HRMIS.IDal.ITrain)">
            <summary>
            AddTrainCourse的构造函数，专为测试提供
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddCourseFeedBack.ExcuteSelf">
            <summary>
            调用下层的新增课程的方法
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.TraineeApplications.AddTraineeApplication">
            <summary>
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.TraineeApplications.AddTraineeApplication._DalTraineeApplication">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.AddTraineeApplication.#ctor(SEP.HRMIS.Model.TraineeApplications.TraineeApplication)">
            <summary>
            构造函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.AddTraineeApplication.#ctor(SEP.HRMIS.Model.TraineeApplications.TraineeApplication,SEP.HRMIS.IDal.ITraineeApplication,SEP.HRMIS.IDal.IEmployeeDiyProcessDal)">
            <summary>
            新增培训申请
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.SystemErrors.GetSystemError">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.GetSystemError.#ctor(SEP.Model.Accounts.Account)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.GetSystemError.#ctor(SEP.Model.Accounts.Account,SEP.HRMIS.IDal.ISystemError,SEP.HRMIS.Bll.GetEmployee)">
            <summary>
            for test
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.GetSystemError.GetDiyProcessError(System.Boolean,SEP.HRMIS.Model.SystemError.ErrorType)">
            <summary>
            得到自定义流程错误
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.GetSystemError.GetDoorCardError(System.Boolean)">
            <summary>
            得到没有门禁卡的用户 
            </summary>
            <param name="showIgnore"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.GetSystemError.GetDutyCalssErrorError(System.Boolean)">
            <summary>
             得到没有排班的用户
            </summary>
            <param name="showIgnore"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage.SendNewMessage(SEP.Model.Accounts.Account,SEP.Model.Accounts.Account,System.String,SEP.HRMIS.Model.PhoneMessage.PhoneMessageType)">
            <summary>
            发送新的加班，外出，等业务
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage.SendConfirmMessage(SEP.Model.Accounts.Account,SEP.HRMIS.Model.PhoneMessage.PhoneMessageType)">
            <summary>
            发送消息给下一个审核人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage.SendCancelMessage(SEP.Model.Accounts.Account,System.String,SEP.HRMIS.Model.PhoneMessage.PhoneMessageType)">
            <summary>
            发送取消短消息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage.SendCanSendMessage(SEP.HRMIS.Model.PhoneMessage.PhoneMessage)">
            <summary>
            发送可被发送的消息
            </summary>
            <param name="phoneMessage"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage.CanSend(SEP.HRMIS.Model.PhoneMessage.PhoneMessage)">
            <summary>
            判断是否可以被发送
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage.ReceiveMessage(SEP.Model.Accounts.Account,System.String)">
            <summary>
            当收到消息时的业务处理
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage.ValideMessage(System.String)">
            <summary>
            验证格式
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage.ReSendBlockMessage">
            <summary>
            隔断时间重新发送被阻塞的短信，暂定为超过24小时未处理的短信被重发
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage.FinishPhoneMessageOperationByAssessorID(SEP.HRMIS.Model.PhoneMessage.PhoneMessageType,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.ConfirmMessage.GetPhoneMessageByPhoneMessageType(SEP.HRMIS.Model.PhoneMessage.PhoneMessageType)">
            <summary>
            通过类型和对应的id来查找phonemessage
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.Reimburse.FinishReimburse._DalReimburse">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.CancelPositionApplication.#ctor(System.Int32,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String)">
            <summary>
            取消请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.CancelPositionApplication.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.CancelPositionApplication.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PositionApplications.CancelPositionApplication.ResultMessage">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.AccountReopenedEmployeeAccountSet.MakeEmployeeSalary">
            <summary>
            组装薪水数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.UpdateEmployee">
            <summary>
            修改员工信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateEmployee.#ctor(SEP.HRMIS.Model.Employee,SEP.Model.Accounts.Account,SEP.HRMIS.IDal.IEmployee,SEP.IBll.Accounts.IAccountBll,SEP.HRMIS.IDal.IEmployeeHistory,SEP.HRMIS.IDal.IEmployeeSkill,SEP.IBll.Departments.IDepartmentBll,SEP.HRMIS.IDal.IEmployeeWelfare,SEP.HRMIS.IDal.IEmployeeWelfareHistory)">
            <summary>
            测试专用
            </summary>
            <param name="employee"></param>
            <param name="operatoraccount"></param>
            <param name="mockDalEmployee"></param>
            <param name="mockDalAccounts"></param>
            <param name="mochEmployeeHistory"></param>
            <param name="mockEmployeeSkill"></param>
            <param name="mockDepartments"></param>
            <param name="mockEmployeeWelfare"></param>
            <param name="mockEmployeeWelfareHistory"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateEmployee.#ctor(SEP.HRMIS.Model.Employee,SEP.Model.Accounts.Account)">
            <summary>
            修改员工构造函数
            </summary>
            <param name="employee"></param>
            <param name="operatoraccount"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddEmployeeProxy">
            <summary>
            新增员工
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployeeProxy.#ctor(SEP.HRMIS.Model.Employee,SEP.Model.Accounts.Account)">
            <summary>
            新增员工
            </summary>
            <param name="employee"></param>
            <param name="operatoraccount"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployeeProxy.BeforeTranscation">
            <summary>
            定义该Transcation处理之前要做的工作,验证权限之类的工作可以在这里处理
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddEmployeeProxy.AfterTranscation">
            <summary>
            定义该Transcation成功后要做的工作，记录日志之类的工作可以在这里处理
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.UpdateApplyAssessCondition">
            <summary>
            更新考核条件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateApplyAssessCondition.#ctor(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition},SEP.HRMIS.Model.ApplyAssessCondition)">
            <summary>
            更新考核条件构造函数
            </summary>
            <param name="applyAssessConditions"></param>
            <param name="applyAssessCondition"></param>
        </member>
        <member name="F:SEP.HRMIS.Bll.BllUtility.SECRET">
            <summary>
            加密字符串常量
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.BllUtility.GetResourceMessage(System.String)">
            <summary>
            根据resourceId获取指定的字符串常量
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.BllUtility.SimpleEncode(System.String,System.String)">
            <summary>
            加密
            </summary>
            <param name="strSrc">原字符串</param>
            <param name="constSecret">加密字符串</param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.BllUtility.getExpandString(System.String,System.Int32)">
            <summary>
            取得加密字符串
            </summary>
            <param name="oldStr">原加密字符串</param>
            <param name="count">复制次数</param>
            <returns>新加密字符串</returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.BllUtility.GetEmailsByAccountIds(System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            根据账号ID获取Email地址
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceInOutRecord">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceInOutRecord.#ctor(System.Int32,SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecord,System.DateTime,SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecordLog,SEP.Model.Accounts.Account)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceInOutRecord.#ctor(System.Int32,SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecord,System.DateTime,SEP.HRMIS.IDal.IAttendanceInAndOutRecord,SEP.HRMIS.Bll.Transaction,SEP.Model.Accounts.Account)">
            <summary>
            测试用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceInOutRecord.GetInAndOutRecords">
            <summary>
            得到单个员工的进出记录
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceInOutRecord.GetInAndOutRecordsForTest">
            <summary>
            for test
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceInOutRecord.FindOldAttendanceInAndOutRecord(SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecord)">
            <summary>
            查找上次读取的考勤记录，范围为一天
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceInOutRecord.FindNewAttendanceInAndOutRecord(SEP.HRMIS.Model.EmployeeAttendance.AttendanceInAndOutRecord.AttendanceInAndOutRecord)">
            <summary>
            查找这次读取的考勤记录，范围为一天
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.UpdateAttendanceInOutRecord.FindSearchTime">
            <summary>
            比较查询排班表时间
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.MakeAssessPaper">
            <summary>
            用于处理考评表模板到考评表的转换
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.MakeAssessPaper.#ctor(SEP.HRMIS.Model.AssessTemplatePaper,SEP.HRMIS.Model.AssessActivity)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.MakeAssessPaper.HrItems">
            <summary>
            AssessActivityPaper中的人事项
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.MakeAssessPaper.NotHrItems">
            <summary>
            AssessActivityPaper中的主管项
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.FillCEOComment">
            <summary>
            CEO填写Comment的业务
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillCEOComment.#ctor(System.Int32,System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            CEO填写Comment的业务
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillCEOComment.#ctor(System.Int32,System.String,System.String,SEP.HRMIS.IDal.IAssessActivity)">
            <summary>
            CEO填写Comment的业务
            </summary>
            <param name="activityId"></param>
            <param name="comment"></param>
            <param name="currentEmployeeName"></param>
            <param name="iAssessActivity"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailOver">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailOver.#ctor(SEP.HRMIS.Model.TraineeApplications.TraineeApplication,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Int32)">
            <summary>
            
            </summary>
            <param name="traineeApplication"></param>
            <param name="hrAccount"></param>
            <param name="currentAccountID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailOver.ConfirmOverMail">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailOver.SendMailToMailCC">
            <summary>
            给要抄送的人发邮件,主要是人事，所以，在整个外出单审核结束后发送
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailOver.SendMailToHRMailCC">
            <summary>
            给要抄送的人发邮件,主要是人事，所以，在整个外出单审核结束后发送
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OverWorkMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OverWorkMessage.#ctor(SEP.Model.Accounts.Account,SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.OverWorkMessage.TemplageAndExample">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.Reimburse.UpdateReimburseItemCustomer">
            <summary>
             更新item的客户信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.UpdateReimburseItemCustomer.#ctor(SEP.HRMIS.Model.Reimburse)">
            <summary>
            构造函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.UpdateReimburseItemCustomer.#ctor(SEP.HRMIS.Model.Reimburse,SEP.HRMIS.IDal.IReimburse)">
            <summary>
            
            </summary>
            <param name="reimburse"></param>
            <param name="iReimburseMock"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.AddPositionApplication.#ctor(SEP.HRMIS.Model.PositionApp.PositionApplication,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ReopenEmployeeSalary">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ReopenEmployeeSalary.#ctor(System.DateTime,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="dt"></param>
            <param name="backAcountsName"></param>
            <param name="description"></param>
            <param name="companyId"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ReopenEmployeeSalary.#ctor(System.DateTime,System.String,System.String,SEP.HRMIS.IDal.PayModule.IEmployeeSalary)">
            <summary>
            </summary>
            <param name="dt"></param>
            <param name="backAcountsName"></param>
            <param name="description"></param>
            <param name="mockSalary"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.UpdateOverWork">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.UpdateOverWork.#ctor(SEP.HRMIS.Model.OverWork.OverWork,System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.ApproveWholeOverWork">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.ApproveWholeOverWork.#ctor(System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutSubmitMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutSubmitMail.#ctor(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutSubmitMail.SendMail">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationMail">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationMail.SendSubmitMail(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            发送提交邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationMail.SendCancelMail(System.Int32)">
            <summary>
            发送取消邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationMail.SendMailToNextOperator(System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            发送邮件给下一步处理人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationMail.SendConfirmOverMail(System.Int32)">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationMail.SendErrorMail(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationMail.BuildBody(SEP.HRMIS.Model.OutApplication.OutApplication)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutApplicationMail.BulidConfirmAddress(System.Text.StringBuilder,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.ApproveOutApplicationItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.ApproveOutApplicationItem.#ctor(System.Int32,System.Int32,System.Boolean,System.String,System.Int32,System.Boolean,System.Decimal)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.ApproveOutApplicationItem.#ctor(System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.ApproveOutApplicationItem.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.ApproveOutApplicationItem.ApproveOneItem(SEP.HRMIS.Model.OutApplication.OutApplicationItem,System.Boolean,SEP.Model.Accounts.Account,SEP.HRMIS.Model.OutApplication.OutApplication,System.String,SEP.HRMIS.IDal.IOutApplication,SEP.HRMIS.Bll.OutApplications.OutDiyProcessUtility,System.Boolean,System.Boolean,System.Decimal,SEP.Model.Accounts.Account@)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.ApproveOutApplicationItem.ExcuteSelf">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetEmployeeStatistics">
            <summary>
            获取员工统计
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeStatistics.#ctor(System.DateTime,System.Int32,SEP.Model.Accounts.Account,System.Collections.Generic.List{SEP.HRMIS.Model.Employee})">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeStatistics.#ctor(SEP.HRMIS.IDal.IVacation,SEP.HRMIS.IDal.IPositionHistory)">
            <summary>
            构造函数，测试
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeStatistics.BindEmployeeStatistics">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeStatistics.ResidenceStatistics">
            <summary>
            其他统计，居住证统计
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeStatistics.VocationStatistics">
            <summary>
            其他统计，年假统计
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeStatistics.PositionGradeStatistics">
            <summary>
            其他统计，职位层级统计
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeStatistics.ContainPositionGrade(SEP.Model.Positions.PositionGrade,System.Collections.Generic.List{SEP.HRMIS.Model.PositionGradeStatistics})">
            <summary>
            是否包含positionGrade
            </summary>
            <param name="positionGrade"></param>
            <param name="positionGradeStatisticsList"></param>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetEmployeeStatistics.MockPositionBll">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetEmployeeStatistics.MockGetEmployeeHistory">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.UpdateEmployeeContract">
            <summary>
            更新员工合同
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateEmployeeContract.#ctor(SEP.HRMIS.Model.Contract,SEP.HRMIS.Model.Employee)">
            <summary>
            更新员工合同构造函数
            </summary>
            <param name="contract"></param>
            <param name="employee"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateEmployeeContract.#ctor(SEP.HRMIS.Model.Contract,SEP.HRMIS.Model.Employee,SEP.HRMIS.IDal.IContract,SEP.HRMIS.IDal.IEmployee,SEP.HRMIS.IDal.IContractType,SEP.HRMIS.IDal.IEmployeeContractBookMark)">
            <summary>
            更新员工合同构造函数，测试
            </summary>
            <param name="contract"></param>
            <param name="employee"></param>
            <param name="dalContract"></param>
            <param name="dalEmployee"></param>
            <param name="dalContractType"></param>
            <param name="dalEmployeeContractBookMark"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateEmployeeContract.ExcuteSelf">
            <summary>
            调用下层的修改员工合同的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateEmployeeContract.Validation">
            <summary>
            修改员工合同有效性判断：
            1、该员工是已经存在的员工
            2、离职的员工不能签合同
            3、该合同是已经存在的合同
            4、合同类型必须是已经存在的合同类型
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.InsertAssessPaper">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.InsertAssessPaper.#ctor(SEP.HRMIS.Model.AssessTemplatePaper)">
            <summary>
            该事务执行后，会增加一张没有考评项的考评表
            异常情况:
            1.Title不可与已有Paper的Title重复，否则给出提示，事务中断
            业务流程：
            1.有效性判断
            2.如果通过有效性判断，则调用IDal层方法进行考评表新增
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.InsertAssessPaper.#ctor(SEP.HRMIS.IDal.IAssessTemplatePaper,SEP.HRMIS.IDal.IAssessTemplatePaperBindPosition,SEP.IBll.Positions.IPositionBll,SEP.HRMIS.Model.AssessTemplatePaper)">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestOverMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestOverMail.#ctor(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="leaveRequestID"></param>
            <param name="hrAccount"></param>
            <param name="currentStep"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestOverMail.ConfirmOverMail">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestOverMail.SendMailToMailCC">
            <summary>
            给要抄送的人发邮件,主要是人事，所以，在整个外出单审核结束后发送
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestOverMail.SendMailToHRMailCC">
            <summary>
            给要抄送的人发邮件,主要是人事，所以，在整个外出单审核结束后发送
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMailAndPhoneDelegate">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMailAndPhoneDelegate.SubmitOperation(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送提交邮件短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMailAndPhoneDelegate.CancelOperation(System.Int32,SEP.HRMIS.Model.Request.LeaveRequestItem,System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送取消短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMailAndPhoneDelegate.CancelMail(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送取消邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMailAndPhoneDelegate.ConfirmOperation(SEP.HRMIS.Model.Request.LeaveRequest,SEP.HRMIS.Model.Request.LeaveRequestItem,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Int32,SEP.HRMIS.Model.DiyProcesss.DiyStep,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            审核
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestMailAndPhoneDelegate.ConfirmOperationMail(SEP.HRMIS.Model.Request.LeaveRequest,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Int32,SEP.HRMIS.Model.DiyProcesss.DiyStep,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            审核
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.InterruptActivity._Dal">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.InterruptActivity.#ctor(System.Int32)">
            <summary>
            InterruptActivity的构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.InterruptActivity.#ctor(System.Int32,SEP.HRMIS.IDal.IAssessActivity)">
            <summary>
            SystemAssess的构造函数，专为测试提供
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.FillEmployeeItems">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillEmployeeItems.#ctor(System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.AssessActivityItem},System.String,System.String,System.Boolean,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillEmployeeItems.#ctor(System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.AssessActivityItem},System.String,System.String,System.Boolean,System.String,SEP.HRMIS.IDal.IAssessActivity)">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.FastApproveWholeLeaveRequest">
            <summary>
            快速通过
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.FastApproveWholeLeaveRequest.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            取消整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.FastApproveWholeLeaveRequest.#ctor(System.Int32,System.Int32,System.String,SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal,SEP.HRMIS.IDal.IEmployeeDiyProcessDal,SEP.HRMIS.IDal.IVacation,SEP.HRMIS.IDal.IAdjustRest,SEP.HRMIS.IDal.IPlanDutyDal,SEP.HRMIS.IDal.ILeaveRequestType)">
            <summary>
            取消整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.FastApproveWholeLeaveRequest.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.FastApproveWholeLeaveRequest.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.LeaveRequests.FastApproveWholeLeaveRequest.ResultMessage">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AutoRemindServer.AutoEmployeeResidenceDateRearch">
            <summary>
            自动提醒员工居住证到期，在该居住证到期前_Days天，可以发Email提醒人事部门和员 工本人居住证即将到期
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoEmployeeResidenceDateRearch.#ctor(System.DateTime,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="currDate"></param>
            <param name="days"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoEmployeeResidenceDateRearch.SetMailGateWay">
            <summary>
            仅仅用于测试邮件关口
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoEmployeeResidenceDateRearch.MockGetDiyProcess">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoEmployeeResidenceDateRearch.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoEmployeeResidenceDateRearch.MailBodyListToHR">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.FinishTrainCourse">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.FinishTrainCourse.#ctor(System.Int32)">
            <summary>
            </summary>
            <param name="courseId"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.FinishTrainCourse.#ctor(System.Int32,SEP.HRMIS.IDal.ITrain,SEP.HRMIS.IDal.IEmployeeSkill)">
            <summary>
            AddTrainCourse的构造函数，专为测试提供
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.FinishTrainCourse.InsertEmployeeSkill(System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.Skill})">
            <summary>
            </summary>
            <param name="employeeId"></param>
            <param name="skills"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.GetTraineeApplication.GetTraineeApplicationByAccountID(System.Int32)">
            <summary>
            根据账号ID获得该账号的所培训申请信息
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.GetTraineeApplication.GetTraineeApplicationByPKID(System.Int32)">
            <summary>
            根据PKID获得的培训申请信息,获得Applicant,StudentList[i]信息
            </summary>
            <param name="pkid"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.GetTraineeApplication.GetTraineeApplicationFlowByTraineeApplicationID(System.Int32)">
            <summary>
            根据applicationID获得的培训申请流程
            </summary>
            <param name="traineeApplicationID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.GetTraineeApplication.GetTraineeApplicationByCondition(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,SEP.HRMIS.Model.TrainScopeType,SEP.HRMIS.Model.TraineeApplications.TraineeApplicationStatus)">
            <summary>
            </summary>
            <param name="traineeName"></param>
            <param name="studentName"></param>
            <param name="courseName"></param>
            <param name="traineeFrom"></param>
            <param name="traineeTo"></param>
            <param name="hasCertifacation"></param>
            <param name="trainScopeEnum"></param>
            <param name="statusEnum"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.GetTraineeApplication.GetMyAuditingTraineeApplications(System.Int32)">
             <summary>
            
             </summary>
             <param name="accountID"></param>
             <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.GetTraineeApplication.GetConfirmTraineeApplication(System.Int32)">
            <summary>
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.GetTraineeApplication.GetConfirmTraineeApplication">
            <summary>
            根据PKID获得的培训申请信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.GetTraineeApplication.ChangeOperatorToEmployee(SEP.HRMIS.Model.TraineeApplications.TraineeApplication,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="traineeApplication"></param>
            <returns></returns>
            <param name="diyStep"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.Requests.ValidateRequestItemRepeat">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Requests.ValidateRequestItemRepeat.#ctor(SEP.HRMIS.Model.OverWork.OverWork,System.Boolean)">
            <summary>
            </summary>
            <param name="overWork"></param>
            <param name="isAdd">是新增还是修改</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.Requests.ValidateRequestItemRepeat.#ctor(SEP.HRMIS.Model.OutApplication.OutApplication,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Requests.ValidateRequestItemRepeat.#ctor(SEP.HRMIS.Model.Request.LeaveRequest,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Requests.ValidateRequestItemRepeat.#ctor(SEP.HRMIS.IDal.IOverWork,SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.IOutApplication,SEP.HRMIS.Model.Request.LeaveRequest,System.Boolean)">
            <summary>
            测试LeaveRequest调用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Requests.ValidateRequestItemRepeat.Excute">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Requests.ValidateRequestItemRepeat.HasInnerError">
            <summary>
            判断自身是否有重复
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFactory">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFactory.#ctor(SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ReceivedMessageFactory.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.LeaveRequestConfirm">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.LeaveRequestConfirm.#ctor(SEP.HRMIS.Model.PhoneMessage.PhoneMessage)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationSubmitMail.#ctor(System.Int32,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Collections.Generic.List{System.String},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="positionApplicationID"></param>
            <param name="cclist"></param>
            <param name="diyProcesslist"></param>
            <param name="nextStep"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationSubmitMail.SendMail">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.OverWorkDiyProcessUtility">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.OverWorkDiyProcessUtility.GetNextOperator(SEP.HRMIS.Model.DiyProcesss.DiyProcess,SEP.HRMIS.Model.OverWork.OverWorkItem,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.OverWorkDiyProcessUtility.GetNextOperator(SEP.HRMIS.Model.DiyProcesss.DiyProcess,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.OverWorkDiyProcessUtility.GetOverWorkDiyProcessByAccountID(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.OverWorkDiyProcessUtility.GetNextStep(System.Collections.Generic.List{SEP.HRMIS.Model.OverWork.OverWorkFlow},SEP.HRMIS.Model.DiyProcesss.DiyProcess)">
            <summary> 
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.OverWorkDiyProcessUtility.CanChangeAdjust(SEP.HRMIS.Model.DiyProcesss.DiyProcess,SEP.HRMIS.Model.OverWork.OverWorkItem)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.OverWorkDiyProcessUtility.GetMailCC(System.Collections.Generic.List{SEP.HRMIS.Model.OverWork.OverWorkFlow},SEP.HRMIS.Model.DiyProcesss.DiyProcess)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.OverWorkDiyProcessUtility.GetLastMailCC(SEP.HRMIS.Model.DiyProcesss.DiyProcess)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutErrorMail">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutErrorMail.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutErrorMail.Send">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutErrorMail.SendMailTo">
            <summary>
            给要抄送的人发邮件,主要是人事，所以，在整个外出单审核结束后发送
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.UpdateLeaveRequest">
            <summary>
            修改請假單
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateLeaveRequest.#ctor(SEP.HRMIS.Model.Request.LeaveRequest,System.Boolean)">
            <summary>
            修改请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateLeaveRequest.#ctor(SEP.HRMIS.Model.Request.LeaveRequest,System.Boolean,SEP.HRMIS.IDal.IVacation,SEP.HRMIS.IDal.IAdjustRest,SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal,SEP.HRMIS.IDal.IEmployeeDiyProcessDal,SEP.HRMIS.IDal.IOverWork,SEP.HRMIS.IDal.IOutApplication,SEP.HRMIS.IDal.IPlanDutyDal,SEP.HRMIS.IDal.ILeaveRequestType,SEP.HRMIS.IDal.IEmployee)">
            <summary>
            修改请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateLeaveRequest.Validation">
            <summary>
            有效性判断
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateLeaveRequest.ExcuteSelf">
            <summary>
            修改请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateLeaveRequest.PrepareLeaveRequestFlow(SEP.HRMIS.Model.Request.LeaveRequestItem)">
            <summary>
            准备流程所需的插入数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.DeleteApplyAssessCondition">
            <summary>
            删除考核条件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteApplyAssessCondition.#ctor(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition},System.Int32)">
            <summary>
            删除考核条件构造函数
            </summary>
            <param name="applyAssessConditions"></param>
            <param name="conditionID"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.DeleteContractType">
            <summary>
            删除合同类型
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteContractType.#ctor(System.Int32)">
            <summary>
            删除合同类型
            </summary>
            <param name="contractTypeId"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteContractType.#ctor(System.Int32,SEP.HRMIS.IDal.IContractType,SEP.HRMIS.IDal.IContract,SEP.HRMIS.IDal.IContractBookMark)">
            <summary>
            删除合同类型，测试用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteContractType.ExcuteSelf">
            <summary>
            调用下层的删除合同类型的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteContractType.Validation">
            <summary>
            删除合同类型有效性判断：
            1、要删除的合同类型必须是已经存在的合同类型
            2、没有合同属于这个要删除的合同类型
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.ImportUtility">
            <summary>
            导入相关 公共方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.ImportUtility.GetstrConn(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.ImportUtility.GetEmployeeRow(System.Data.DataTable,System.String,System.String)">
            <summary>
            员工姓名在dt中的列号
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.ImportUtility.GetItem(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            得到某列的一个元素
            </summary>
            <param name="dt">要在哪个表中找</param>
            <param name="rowID">第几行找，从0开始</param>
            <param name="columnName">列名</param>
            <returns>返回该表的指定列名，指定行的数据，无则返回EmptyNull</returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.ImportUtility.GetColumnIndex(System.Data.DataTable,System.String)">
            <summary>
            得到列号
            </summary>
            <param name="dt"></param>
            <returns>没有则返回-1</returns>
            <param name="columnName">列名</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.ImportUtility.FirstSheetName(System.Data.OleDb.OleDbConnection)">
            <summary>
            得到第一个工作表，如果工作表个数不是1则抛错
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.EmployeeAdjustRest.RestoreAdjustRestByLeaveRequest">
            <summary>
            当申请的调休取消后，还原调休 
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.RestoreAdjustRestByLeaveRequest.#ctor(SEP.HRMIS.Model.Request.LeaveRequestItem,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.RestoreAdjustRestByLeaveRequest.#ctor(SEP.HRMIS.Model.Request.LeaveRequestItem,System.Int32,System.Int32,SEP.HRMIS.IDal.IAdjustRest,SEP.HRMIS.IDal.IAdjustRestHistory)">
            <summary>
            for test
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.RestoreAdjustRestByLeaveRequest.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.RestoreAdjustRestByLeaveRequest.CreateHistory">
            <summary>
            记录历史
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceSendMessage">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceSendMessage.AttendanceSendMessageToEmployee(System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceSendMessage.AttendanceSendErrorMessage(System.String,System.String,System.DateTime)">
            <summary>
            
            </summary>
            <param name="_EmployeeName"></param>
            <param name="mobileNum"></param>
            <param name="_SearchFrom"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.SetEmployeeVisible">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.SetEmployeeVisible.#ctor(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AdvanceSearch.BindContractSearchExpression">
            <summary>
            绑定比较值的googledown数据
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdvanceSearch.BindContractSearchExpression.#ctor(System.String,SEP.Model.Accounts.Account)">
            <summary>
            构造函数
            </summary>
            <param name="fieldParaBaseId"></param>
            <param name="operatorAccount"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdvanceSearch.BindContractSearchExpression.ToBind">
            <summary>
            绑定
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.EditVacation.#ctor(System.Collections.Generic.List{SEP.HRMIS.Model.Vacation},SEP.HRMIS.Model.Employee,SEP.HRMIS.IDal.IVacation)">
            <summary>
            测试用
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.TraineeApplications.ApproveTraineeApplication">
            <summary>
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.TraineeApplications.ApproveTraineeApplication._DalTraineeApplication">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.ApproveTraineeApplication.#ctor(SEP.Model.Accounts.Account,System.Int32,SEP.HRMIS.Model.TraineeApplications.TraineeApplicationStatus,System.String)">
            <summary>
            </summary>
            <param name="loginUser"></param>
            <param name="TraineeApplicationID"></param>
            <param name="status"></param>
            <param name="remark"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.ApproveTraineeApplication.#ctor(SEP.Model.Accounts.Account,System.Int32,SEP.HRMIS.IDal.ITraineeApplication,SEP.HRMIS.IDal.IEmployeeDiyProcessDal,SEP.HRMIS.Model.TraineeApplications.TraineeApplicationStatus,System.String)">
            <summary>
            </summary>
            <param name="loginUser"></param>
            <param name="TraineeApplicationID"></param>
            <param name="iTraineeApplicationMock"></param>
            <param name="iEmployeeDiyProcessMock"></param>
            <param name="status"></param>
            <param name="remark"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.SystemErrors.GetPhoneMessageError">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.GetPhoneMessageError.#ctor(System.String,SEP.HRMIS.Model.PhoneMessage.PhoneMessageStatus,SEP.Model.Accounts.Account)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="status"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.SystemErrors.GetPhoneMessageError.GetPhoneMessageByCondition">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.SystemErrors.GetPhoneMessageError.SystemErrorList">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.LeaveRequestMessage">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.LeaveRequestMessage.#ctor(SEP.Model.Accounts.Account,SmsDataContract.ReceiveMessageDataModel)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.RequestPhoneMessages.RequestMessages.LeaveRequestMessage.TemplageAndExample">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.OverWorkConfirm">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.RequestPhoneMessages.ConfirmMessages.OverWorkConfirm.#ctor(SEP.HRMIS.Model.PhoneMessage.PhoneMessage)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.Reimburse.UpdateReimburse">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.Reimburse.UpdateReimburse._DalReimburse">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.UpdateReimburse.#ctor(System.Int32,SEP.HRMIS.Model.Reimburse)">
            <summary>
            构造函数
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.UpdateReimburse.#ctor(System.Int32,SEP.HRMIS.Model.Reimburse,SEP.HRMIS.IDal.IReimburse)">
            <summary>
            
            </summary>
            <param name="employeeID"></param>
            <param name="reimburse"></param>
            <param name="iReimburseMock"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.DeleteOverWork">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.DeleteOverWork.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutOverPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutOverPhone.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutOverPhone.ConfirmOverPhone">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutCancelMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutCancelMail.#ctor(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutCancelMail.SendMail">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.DeleteOutApplication">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.DeleteOutApplication.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequestTypes.DeleteLeaveRequestType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.DeleteLeaveRequestType.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="leaveRequestTypeId"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequestTypes.DeleteLeaveRequestType.#ctor(System.Int32,SEP.HRMIS.IDal.ILeaveRequestType,SEP.HRMIS.IDal.ILeaveRequestDal)">
            <summary>
             test
            </summary>
            <param name="leaveRequestTypeId"></param>
            <param name="mockILeaveRequestType"></param>
            <param name="mockILeaveRequestDal"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddSystemSetConditionForLabour">
            <summary>
            系统自动生成发起考评条件（续签合同）
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSystemSetConditionForLabour.AddSystemSetCondition(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition},System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            实现IAddSystemSetCondition，将信息填充到conditions中
            </summary>
            <param name="conditions"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="employeeComeDate"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceSendEmail">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceSendEmail.#ctor(SEP.IBll.Mail.IMailGateWay)">
            <summary>
            SendEmailForBulletin的构造函数，专为测试提供
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceSendEmail.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceSendEmail.AttendanceSendEmailToEmployee(System.String,System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},SEP.Model.Accounts.Account)">
            <summary>
            </summary>
            <param name="_EmployeeName"></param>
            <param name="_InTime"></param>
            <param name="_OutTime"></param>
            <param name="_Status"></param>
            <param name="_SearchFrom"></param>
            <param name="_SearchTo"></param>
            <param name="_TO"></param>
            <param name="_Cc"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceSendEmail.AttendanceSendEmailToHR(System.String,System.Text.StringBuilder)">
            <summary>
             
            </summary>
            <param name="subject"></param>
            <param name="emailContentBuilder"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.InsertAssessItem.#ctor(SEP.HRMIS.Model.AssessTemplateItem)">
            <summary>
            执行该事务时，会新增考评项
            异常情况：
            1.Title不可与已有Item的Title重复，否则给出提示，事务中断
            业务流程：
            1.有效性判断
            2.如果通过有效性判断，则调用IDal层方法进行考评项新增
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.InsertAssessItem.#ctor(SEP.HRMIS.IDal.IAssessTemplateItem,SEP.HRMIS.Model.AssessTemplateItem)">
            <summary>
            测试执行的构造函数
            </summary>
            <param name="iAssessTemplateItem"></param>
            <param name="item"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity._AssessActivityDal">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetAssessActivityByAssessActivityID(System.Int32)">
            <summary>
            根据活动状态的ID，获取相应的考评活动
            </summary>
            <param name="AssessActivityID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetAssessActivityByEmployee(System.Int32)">
            <summary>
            获取EmployeeID员工参加的所有活动
            </summary>
            <param name="EmployeeID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetEmployeeFillActivitys(System.Int32)">
            <summary>
            查询当前登录人作为员工的身份需要填写的考评
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetAssessActivityByCondition(System.String,SEP.HRMIS.Model.AssessCharacterType,SEP.HRMIS.Model.AssessStatus,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            根据employeeName、assessCharacterType、status、HRSubmitTime的查找所有的assessActivity
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetAnnualAssessActivityByCondition(System.String,SEP.HRMIS.Model.AssessCharacterType,SEP.HRMIS.Model.AssessStatus,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            根据employeeName、assessCharacterType、status、HRSubmitTime的查找所有的assessActivity
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetContractAssessActivityByCondition(System.String,SEP.HRMIS.Model.AssessCharacterType,SEP.HRMIS.Model.AssessStatus,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            根据employeeName、assessCharacterType、status、HRSubmitTime的查找所有的assessActivity
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetAssessActivityForHRApply(System.String,SEP.HRMIS.Model.EmployeeTypeEnum,System.Int32,System.Int32,System.Boolean,SEP.Model.Accounts.Account)">
            <summary>
            为HR获取可申请考核的员工
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetAssessActivityForManagerApply(System.Int32)">
            <summary>
            为Manager获取可申请考核的员工
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.RemoveAssessingAccount(System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.Model.AssessCharacterType)">
            <summary>
            移出列表中正在进行某种考评的员工
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.RemoveInvalidationAccount(System.Collections.Generic.List{SEP.Model.Accounts.Account})">
            <summary>
            移出无效员工
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetAssessActivityByManagerName(System.String)">
            <summary>
            根据主管查找他所有属下的assessActivity
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetAssessActivityHistoryByEmployeeName(System.String)">
            <summary>
            查找自己参与过的考评
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetManagerFillActivitys(System.Int32)">
            <summary>
            查询当前登录人作为主管的身份需要填写的考评
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetDirectFillActivitys(System.Int32)">
            <summary>
            查询当前登录人作为总监的身份需要填写的考评
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetCeoFillActivitys(System.Int32)">
            <summary>
            查询当前登录人作为Ceo的身份需要填写的考评
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetSummarizeCommmentFillActivitys(System.Int32)">
            <summary>
            查询当前登录人作为Ceo的身份需要填写的考评
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetDiyStepAccount(System.Int32,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            根据自定义流程步骤找出处理人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetMyAssessActivityByAccountId(System.Int32)">
            <summary>
            获取EmployeeID员工参加的所有活动
            </summary>
            <param name="EmployeeID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.GetAssessActivity.GetAnualPerfomanceResultByAccountId(System.Int32,System.DateTime)">
            <summary>
             获取员工年终考评
            </summary>
            <param name="accountId">员工id</param>
            <param name="salaryTime">发工资时间</param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOperator">
            <summary>
            更新员工调休记录，并记录历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOperator.#ctor(System.Int32,System.Decimal,System.String,System.Int32)">
            <summary>
            手工修改
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOperator.#ctor(System.Int32,System.Decimal,System.String,System.Int32,SEP.HRMIS.IDal.IAdjustRest,SEP.HRMIS.IDal.IAdjustRestHistory)">
            <summary>
            for test
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByOperator.GetNewAdjustRestHistory(SEP.HRMIS.Model.Enum.AdjustRestHistoryTypeEnum,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.DiyProcesses.UpdateDiyProcess">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.UpdateDiyProcess.#ctor(SEP.HRMIS.Model.DiyProcesss.DiyProcess)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.UpdateDiyProcess.#ctor(SEP.HRMIS.Model.DiyProcesss.DiyProcess,SEP.HRMIS.IDal.IDiyProcessDal)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.GetPlanDutyTable">
            <summary>
             查询排班表
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetPlanDutyTable.GetPlanDutyTableByCondition(System.String,System.DateTime,System.DateTime,System.String,SEP.Model.Accounts.Account)">
            <summary>
             查询排班表
            </summary>
            <param name="PlanDutyTableName"></param>
            <param name="fromTime"></param>
            <param name="toTime"></param>
            <param name="employeeName"></param>
            <param name="loginUser"></param>
            <returns></returns>
            <exception cref="T:System.ApplicationException"></exception>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetPlanDutyTable.GetPlanDutyTableByPKID(System.Int32)">
            <summary>
             得到某一排班表
            </summary>
            <param name="pkid"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.GetPlanDutyTable.GetPlanDutyDetailByAccount(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            用于自动计算考勤时间
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetVacation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetVacation.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetVacation.#ctor(SEP.HRMIS.IDal.IVacation)">
            <summary>
            
            </summary>
            <param name="mockVacation"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetVacation.GetAllVacation">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetVacation.GetVacationByCondition(System.String,System.Decimal,System.Decimal,System.DateTime,System.DateTime,System.Decimal,System.Decimal,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetVacation.GetVacationByAccountID(System.Int32)">
            <summary>
            
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetVacation.GetLastVacationByAccountID(System.Int32)">
            <summary>
            
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetVacation.GetAvaliableVacation(System.Int32)">
            <summary>
            
            </summary>
            <param name="employeeID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetVacation.GetVacationByVacationID(System.Int32)">
            <summary>
            
            </summary>
            <param name="vacationID"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailAndPhoneDelegate">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailAndPhoneDelegate.SubmitOperation(SEP.HRMIS.Model.TraineeApplications.TraineeApplication)">
            <summary>
            发送提交邮件短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMailAndPhoneDelegate.ConfirmOperation(SEP.HRMIS.Model.TraineeApplications.TraineeApplication,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Int32)">
            <summary>
            审核
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.DeleteSkill">
            <summary>
            删除技能
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteSkill.#ctor(System.Int32)">
            <summary>
            删除技能构造函数
            </summary>
            <param name="skillId"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.DeleteSkill.#ctor(System.Int32,SEP.HRMIS.IDal.IEmployeeSkill,SEP.HRMIS.IDal.ISkill)">
            <summary>
            删除技能构造函数，测试
            </summary>
            <param name="skillId"></param>
            <param name="dalEmployeeSkill"></param>
            <param name="dalSkill"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetReimburse.GetReimburseForCustomerByCondition(SEP.Model.Accounts.Account,System.String,System.Int32,SEP.HRMIS.Model.ReimburseStatusEnum,System.Int32,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            查询客户维护
            </summary>
            <param name="loginUser"></param>
            <param name="employeename"></param>
            <param name="departmentid"></param>
            <param name="statusEnum"></param>
            <param name="reimburseCategoriesEnumID"></param>
            <param name="totalcostfrom"></param>
            <param name="totalcostto"></param>
            <param name="applydateFrom"></param>
            <param name="applydateTo"></param>
            <param name="billtimeFrom"></param>
            <param name="billtimeTo"></param>
            <param name="companyID"></param>
            <param name="auth"></param>
            <param name="finishStatus"></param>
            <param name="isCustomerFilled"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetReimburse.GetDiyStepAccount(System.Int32,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            根据自定义流程步骤找出处理人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetReimburse.GetReimburseByPkid(System.Int32)">
            <summary>
            根据pkid找报销
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetReimburse.GetMyAuditingReimburses(System.Int32)">
            <summary>
            查找我审核完成的报销单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetReimburse.GetReimbursesHistory(System.Int32)">
            <summary>
            报销单的流程历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Reimburse.GetReimburse.GetReiburseByCustomerID(System.Int32)">
            <summary>
            
            </summary>
            <param name="customerID"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationCancelMail.#ctor(System.Int32,System.Collections.Generic.List{System.String},SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="positionApplicationID"></param>
            <param name="currentStepAccountlist"></param>
            <param name="nextStep"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationCancelMail.SendMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationCancelMail.SendCancelToMail">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.GetBindField">
            <summary>
            绑定值：和下列选项绑定，以便读取系统数据：
            请假（事假、病假、产前假、哺乳假、产假）、
            加班、出差、迟到（*次共*分钟）、早退、旷工、
            社保基数、公积金基数、综合保险基数、
            司龄、本月考勤天数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.BindItemValueCollection(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获得绑定值信息
            </summary>
            <param name="accountID"></param>
            <param name="startDt"></param>
            <param name="endDt"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.GetEmployeePassMonthBindField(System.Int32,System.DateTime)">
            <summary>
            仅获取GetEmployeePassMonth数据
            </summary>
            <param name="accountID"></param>
            <param name="endDt"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.GetEmployeeAttendanceInfo(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            事假，病假，产前假，产后假，哺乳假
            普通加班，节假日加班，双休加班
            迟到、早退、旷工
            本月出勤天 离职天数 未入职天数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.CalcNotOnDutyDays(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            离职天数 未入职天数
            </summary>
            <param name="accountID"></param>
            <param name="startDt"></param>
            <param name="endDt"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.GetEmployeeWelfareforBase(System.Int32)">
            <summary>
            城镇保险基数、城市保险基数、综合保险基数、公积金基数、补充公积金基数
            </summary>
            <param name="accountID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.GetAccumulationFundBase(SEP.HRMIS.Model.EmployeeWelfare)">
            <summary>
            公积金基数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.GetAccumulationFundSupplyBase(SEP.HRMIS.Model.EmployeeWelfare)">
            <summary>
            补充公积金基数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.GetSocialSecurityBaseByType(SEP.HRMIS.Model.EmployeeWelfare,SEP.HRMIS.Model.ParameterBase)">
            <summary>
            城镇保险基数、城市保险基数、综合保险基数
            </summary>
            <param name="employeeWelfare"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.GetEmpoloyeeWorkAge(System.Int32,System.DateTime)">
            <summary>
            获取员工司龄
            </summary>
            <param name="accountID"></param>
            <param name="endTime"></param>
            <returns>天数</returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.GetEmployeePassMonth(System.Int32,System.DateTime)">
            <summary>
            满试用期月份 满试用期员工折算月份定义：试用期满后的第一个自然月到当前月份的月数
            去年年底满试用期月份 满试用期员工折算月份定义：试用期满后的第一个自然月到去年年底的月数
            满试用期月份用户数据
            试用期到期日	当前月分	试用期满后的第一个自然月	满试用期月份    去年年底满试用期月份
            2008-7-1	    2008-12-20	2008-8-1	                5               0
            2008-7-31	    2008-12-20	2008-8-1	                5               0
            2008-7-5	    2008-12-20	2008-8-1	                5               0
            2007-7-5	    2008-12-20	2007-8-1	                17              5
            </summary>
            <param name="accountID"></param>
            <param name="endTime"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.GetBindField.GetAnualPerfomanceResultByAccountId(System.Int32,System.DateTime)">
            <summary>
             获取年终考评分数
            </summary>
            <param name="accountID"></param>
            <param name="salaryTime"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.GetBindField.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.GetBindField.MockGetEmployeeAttendanceStatistics">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.GetBindField.MockGetEmployeeWelfare">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.GetBindField.MockISpecialDateBll">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.GetBindField.BindItemValueCollectionForTest">
            <summary>
            测试
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.TemporarySaveEmployeeAccountSet.ExcuteSelf">
            <summary>
            更新薪资
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.TemporarySaveEmployeeAccountSet.MakeEmployeeSalary">
            <summary>
            组装数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.TemporarySaveEmployeeAccountSet.ExecutBindValue(System.Int32,System.DateTime)">
            <summary>
            执行获取绑定值方法
            </summary>
            <param name="accountID"></param>
            <param name="salaryTime"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.TemporarySaveEmployeeAccountSet.MakeEmployeeLastYearSalary(System.Int32)">
            <summary>
            取得十二月工资
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.SendEmployeeSalaryToEmployee">
            <summary>
            将员工某月工资发送邮件给员工
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.SendEmployeeSalaryToEmployee.#ctor(System.Int32,System.DateTime)">
            <summary>
            构造函数,知道员工帐号ID和发薪时间，进行发邮件
            </summary>
            <param name="accountID"></param>
            <param name="salaryDate"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.SendEmployeeSalaryToEmployee.#ctor(System.Int32,SEP.HRMIS.Model.PayModule.EmployeeSalaryHistory,SEP.HRMIS.IDal.PayModule.IEmployeeSalary)">
            <summary>
            构造函数，知道员工工资信息，进行发邮件
            </summary>
            <param name="accountID"></param>
            <param name="employeeSalaryHistory"></param>
            <param name="_DalEmployeeSalary"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.SendEmployeeSalaryToEmployee.sendMail(SEP.HRMIS.Model.Employee,System.String)">
            <summary>
            组装邮件内容，发送邮件
            </summary>
            <param name="employee">发送人员</param>
            <param name="body">发送内容</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.SendEmployeeSalaryToEmployee.EncryptSalary(SEP.HRMIS.Model.PayModule.EmployeeSalaryHistory)">
            <summary>
            组装工资信息
            </summary>
            <param name="employeeSalaryHistory"></param>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.SendEmployeeSalaryToEmployee.MailFailName">
            <summary>
             错误消息
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutSubmitPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutSubmitPhone.#ctor(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutSubmitPhone.SendPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutSubmitPhone.BuildBody(SEP.HRMIS.Model.OutApplication.OutApplication,SEP.HRMIS.Model.OutApplication.OutApplicationItem)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutOverMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutOverMail.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutOverMail.ConfirmOverMail">
            <summary>
            发送审核结束邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.MailAndPhone.OutOverMail.SendMailToMailCC">
            <summary>
            给要抄送的人发邮件,主要是人事，所以，在整个外出单审核结束后发送
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.CalculateOutCityHourDesType">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CalculateOutCityHourDesType.GetHourDesType(SEP.HRMIS.Model.OutApplication.OutApplicationItem,System.Int32,System.Decimal@,System.Decimal@,System.Decimal@)">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.ExceptionResources">
            <summary>
              强类型资源类，用于查找本地化字符串等。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources.ResourceManager">
            <summary>
              返回此类使用的缓存 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources.Culture">
            <summary>
              为使用此强类型资源类的所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Absent_SameDay">
            <summary>
              查找类似 该员工在同一天已经有了旷工记录 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Accounts_AccountsBack_NotExist">
            <summary>
              查找类似 登录名不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Accounts_AccountsBack_Password_Wrong">
            <summary>
              查找类似 密码错误 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Accounts_AccountsBack_Repeat">
            <summary>
              查找类似 登录名不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Accounts_AccountsBack_UsbKey_Wrong">
            <summary>
              查找类似 错误的UsbKey身份认证 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Accounts_AccountsFront_Password_Wrong">
            <summary>
              查找类似 密码错误 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Accounts_AccountsFrontName_Repeat">
            <summary>
              查找类似 登录名不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSet_CalculateFormula_IsNull">
            <summary>
              查找类似 计算公式不可为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSet_EmployeeAccountSet_HasUsed">
            <summary>
              查找类似 操作失败，该帐套已被使用 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSet_IsNotExist">
            <summary>
              查找类似 帐套不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSet_UseRepeatPara">
            <summary>
              查找类似 帐套中使用了重复的帐套参数 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSetName_IsNull">
            <summary>
              查找类似 帐套名称不可为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSetName_Repeat">
            <summary>
              查找类似 存在重复的帐套名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSetPara_FieldAttribute_IsNull">
            <summary>
              查找类似 帐套参数的字段属性没有实例化 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSetPara_IsNotExist">
            <summary>
              查找类似 帐套参数不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSetPara_IsNull">
            <summary>
              查找类似 帐套参数没有实例化 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSetParaName_BindItem_IsNull">
            <summary>
              查找类似 绑定项不可为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSetParaName_HasUsed">
            <summary>
              查找类似 操作失败，帐套参数已被某个帐套项使用 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSetParaName_IsNull">
            <summary>
              查找类似 帐套参数名称不可为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AccountSetParaName_Repeat">
            <summary>
              查找类似 存在重复的帐套参数名称 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Activity_Is_Finish">
            <summary>
              查找类似 该考评活动已经结束 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Activity_Is_Interrupt">
            <summary>
              查找类似 该考评活动已经中断 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Appendix_Not_Exist">
            <summary>
              查找类似 附件不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Appendix_Title_Null_Or_Big_Then_Fifty">
            <summary>
              查找类似 请检查附件标题是否为空或大于50个字 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Appendix_Title_Repeat">
            <summary>
              查找类似 附件标题重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Application_Exist">
            <summary>
              查找类似 内容相同的申请已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Application_Not_CancelAble">
            <summary>
              查找类似 无法取消申请 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Application_Not_ConfirmAble">
            <summary>
              查找类似 无法审核申请 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Application_Not_DeleteAble">
            <summary>
              查找类似 申请表格已被提交，无法删除 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Application_Not_Exist">
            <summary>
              查找类似 申请表不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Application_Not_UpdateAble">
            <summary>
              查找类似 申请表格已被提交，无法修改 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._ApplicationFlow_Not_Exist">
            <summary>
              查找类似 该审核不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AssessTemplateItem_In_AssessTemplatePaper">
            <summary>
              查找类似 考评项在考评表中 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AssessTemplateItem_Not_Exist">
            <summary>
              查找类似 考评项不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AssessTemplateItem_Title_Exist">
            <summary>
              查找类似 考评项已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AssessTemplatePaper_Not_Exist">
            <summary>
              查找类似 考评表不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AssessTemplatePaper_PaperName_Exist">
            <summary>
              查找类似 考评表已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AssetType_CannotBeNull">
            <summary>
              查找类似 资产类型不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AssetType_HasChild">
            <summary>
              查找类似 该资产类型存在子类型 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AssetType_HasExsit">
            <summary>
              查找类似 该资产类型已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AssetType_Repeat">
            <summary>
              查找类似 资产类型名称重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Attendance_Not_Exist">
            <summary>
              查找类似 该记录不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AttendanceInAndOut_Not_Exist">
            <summary>
              查找类似 改进出记录不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AttendanceReadRule_Not_Exist">
            <summary>
              查找类似 不存在读取信息 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AttendanceRule_Name_Repeat">
            <summary>
              查找类似 考勤规则名称重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._AttendanceRule_Not_Exist">
            <summary>
              查找类似 考勤规则不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Bulletin_Not_Exist">
            <summary>
              查找类似 该公告不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Bulletin_Title_Big_Then_Fifty">
            <summary>
              查找类似 公告标题不能超过50个字 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Bulletin_Title_Null">
            <summary>
              查找类似 公告标题不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Bulletin_Title_Repeat">
            <summary>
              查找类似 公告标题重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CharacterAbnormal">
            <summary>
              查找类似 非常规考核 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CharacterNormal">
            <summary>
              查找类似 合同期周年考核 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CharacterNormalForContract">
            <summary>
              查找类似 合同期满考核 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CharacterPracticeI">
            <summary>
              查找类似 实习期I考核 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CharacterPracticeII">
            <summary>
              查找类似 实习期II考核 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CharacterProbationI">
            <summary>
              查找类似 试用期I考核 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CharacterProbationII">
            <summary>
              查找类似 试用期II考核 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CompanyGoal_NotExist">
            <summary>
              查找类似 该公司目标不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CompanyGoal_Title_Repeat">
            <summary>
              查找类似 公司目标标题重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CompanyReguAppendix_Directory_Null">
            <summary>
              查找类似 附件路径不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CompanyReguAppendix_FileName_Null">
            <summary>
              查找类似 附件标题不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._CompanyRegulations_Title_Null">
            <summary>
              查找类似 标题不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Condinator_Cannot_Find">
            <summary>
              查找类似 协调员不是系统中员工 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._ConstractType_HasConstract">
            <summary>
              查找类似 还有合同属于该类型 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Contract_NotExist">
            <summary>
              查找类似 不存在这份合同 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._ContractType_Name_NotExist">
            <summary>
              查找类似 不存在该合同类型 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._ContractType_Name_Repeat">
            <summary>
              查找类似 合同类型名称不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Department_HasChildren">
            <summary>
              查找类似 该部门存在子部门 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Department_HasEmployee">
            <summary>
              查找类似 还有员工属于该部门 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Department_HasReimburse">
            <summary>
              查找类似 当前部门中已经有报销单记录 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Department_Leader_NotExist">
            <summary>
              查找类似 不存在该部门主管 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Department_Name_Repeat">
            <summary>
              查找类似 部门名称不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Department_NotExist">
            <summary>
              查找类似 请选择部门 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Department_ParentDepartment_CannotBeNull">
            <summary>
              查找类似 上级部门不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Department_ParentDepartment_NotExist">
            <summary>
              查找类似 上级部门不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Department_RootDepartment_CannotBeChanged">
            <summary>
              查找类似 根结点的上级部门不能被修改 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._DepartmentGoal_NotExist">
            <summary>
              查找类似 该团队目标不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._DepartmentGoal_Title_Repeat">
            <summary>
              查找类似 团队目标标题重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._EarlyLeave_SameDay">
            <summary>
              查找类似 该员工在同一天已经有了早退记录 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_Body_Null">
            <summary>
              查找类似 邮件正文不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_From_Null">
            <summary>
              查找类似 发信地址不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_Send_Failure">
            <summary>
              查找类似 发送邮件失败 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_SmtpClient_Null">
            <summary>
              查找类似 简单邮件传输协(SMTP) 服务器不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_Subject_Null">
            <summary>
              查找类似 邮件标题不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_To_Employee_For_Confirming_Attendance">
            <summary>
              查找类似 请登录系统确认本月的考勤信息 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_To_Employee_For_Vacation">
            <summary>
              查找类似 一个月后你的年假有效期即将到期 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_To_HR_For_Confirming">
            <summary>
              查找类似 员工考核以被初始化，等待人事确认 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_To_HR_For_Contract">
            <summary>
              查找类似 员工合同即将到期 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_To_HR_For_Vacation">
            <summary>
              查找类似 员工年假即将到期 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Email_To_Null">
            <summary>
              查找类似 收信地址不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Employee_HasLeft">
            <summary>
              查找类似 该员工已经离职 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Employee_Name_NotExist">
            <summary>
              查找类似 该员工不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Employee_Name_Repeat">
            <summary>
              查找类似 员工姓名不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Employee_NeedDimissionInformation">
            <summary>
              查找类似 离职的员工需要填写离职信息 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Employee_Not_Found">
            <summary>
              查找类似 系统中无该员工 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Employee_Salary_Closed">
            <summary>
              查找类似 该薪水记录已封帐 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Employee_Salary_Exist">
            <summary>
              查找类似 该员工此月工资记录已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Employee_Salary_Not_Closed">
            <summary>
              查找类似 该薪水记录还没有封帐 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Employee_Salary_NotExist">
            <summary>
              查找类似 该薪水记录不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Employee_Vacation_Exist">
            <summary>
              查找类似 该员工年假信息已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._EmployeeAccountSet_AccountSet_IsNull">
            <summary>
              查找类似 员工帐套不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._EmployeeAccountSet_AccountSet_NotExist">
            <summary>
              查找类似 该帐套不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._EmployeeAccountSet_BackAccountsName_IsNull">
            <summary>
              查找类似 后台账号不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._EmployeeAccountSet_EmployeeAccountSet_NotExist">
            <summary>
              查找类似 该员工不存在帐套 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._EmployeeAccountSet_EmployeeID_IsNull">
            <summary>
              查找类似 员工编号不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Exist_Opening_AssessActivity">
            <summary>
              查找类似 该员工正在参加其它考核活动 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._FBQuesType_Repeat">
            <summary>
              查找类似 反馈问题类型不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Goal_NotExist">
            <summary>
              查找类似 该目标不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Goal_Title_More_Then_Fifty">
            <summary>
              查找类似 目标标题不能超过50个字 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Goal_Title_Null">
            <summary>
              查找类似 目标标题不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Import_Failed">
            <summary>
              查找类似 导入失败 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._InvalidActivityId">
            <summary>
              查找类似 无效的考评活动 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._InvalidIntention">
            <summary>
              查找类似 无效的考评意向 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._InvalidStatus">
            <summary>
              查找类似 不正常的流程，请联系人事部门或系统管理员 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._InvalidTemplateId">
            <summary>
              查找类似 无效的考评表模板 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Later_SameDay">
            <summary>
              查找类似 该员工在同一天已经有了迟到记录 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._LeaveRequest_CanNot_BeApproved">
            <summary>
              查找类似 该请假单不能被审核 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._LeaveRequest_CanNot_BeCancled">
            <summary>
              查找类似 该请假单不能被取消 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._LeaveRequest_Error">
            <summary>
              查找类似 请假单信息错误 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._LeaveRequest_Exist">
            <summary>
              查找类似 内容相同的请假已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._LeaveRequest_Not_Exist">
            <summary>
              查找类似 该请假单不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._LeaveRequestType_HasLeaveRequest">
            <summary>
              查找类似 此请假类型已经被使用，不可被修改或删除 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._LeaveRequestType_Name_NotExist">
            <summary>
              查找类似 不存在该请假类型 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._LeaveRequestType_Name_Repeat">
            <summary>
              查找类似 请假类型名称不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._OldPassword_Wrong">
            <summary>
              查找类似 旧密码不正确 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._PersonalGoal_NotExist">
            <summary>
              查找类似 该个人目标不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._PersonalGoal_Title_Repeat">
            <summary>
              查找类似 个人目标标题重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Position_HasEmployee">
            <summary>
              查找类似 还有属于该职位的员工 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Position_Name_Repeat">
            <summary>
              查找类似 职位名称不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Position_Not_Exist">
            <summary>
              查找类似 不存在该职位 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._PositionGrade_HasPositionGrade">
            <summary>
              查找类似 此职位层级已经被使用，不可被修改或删除 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._PositionGrade_Name_NotExist">
            <summary>
              查找类似 不存在该职位层级 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._PositionGrade_Name_Repeat">
            <summary>
              查找类似 职位层级名称不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Reimburse_Has_Added">
            <summary>
              查找类似 操作失败，该报销单尚未进入报销流程 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Reimburse_Has_Interruptted">
            <summary>
              查找类似 操作失败，该报销单已被中断 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Reimburse_Has_Reimbursed">
            <summary>
              查找类似 操作失败，该报销单已报销 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Reimburse_Not_Exist">
            <summary>
              查找类似 该报销单不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Request_CostTime_AdjustRestOverAvailableTime">
            <summary>
              查找类似 剩余调休不可透支，请假时间不可超出剩余调休小时数 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Request_CostTime_AnnualLeaveOverAvailableTime">
            <summary>
              查找类似 剩余年假不可透支，请假时间不可超出剩余年假小时数 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Request_Date_Repeat">
            <summary>
              查找类似 该时间段内，已有请假、加班或外出记录 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._SalaryType_HasLeaveRequest">
            <summary>
              查找类似 此工资类型已经被使用，不可被修改或删除 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._SalaryType_Name_NotExist">
            <summary>
              查找类似 不存在该工资类型 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._SalaryType_Name_Repeat">
            <summary>
              查找类似 工资类型名称不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Sheet_Count_NotOne">
            <summary>
              查找类似 确保一个工作表 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Skill_HasEmployeeSkillOrCourse">
            <summary>
              查找类似 还有包含该技能的员工技能或者培训课程 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Skill_Name_NotExist">
            <summary>
              查找类似 不存在该技能 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Skill_Name_Repeat">
            <summary>
              查找类似 技能名称不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._SkillType_HasSkill">
            <summary>
              查找类似 还有属于该类型的技能 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._SkillType_Name_NotExist">
            <summary>
              查找类似 不存在该技能类型 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._SkillType_Name_Repeat">
            <summary>
              查找类似 技能类型名称不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._SmtpClient">
            <summary>
              查找类似 61.151.248.133 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._TaxBand_BindMin_Repeat">
            <summary>
              查找类似 税阶下限重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._TrainCourse_End">
            <summary>
              查找类似 培训课程已结束 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._TrainCourse_NotExist">
            <summary>
              查找类似 培训课程不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._TrainCourseNew_Cannot_End">
            <summary>
              查找类似 新增的课程不能结束 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._TrainFBQuesiton_Repeate">
            <summary>
              查找类似 反馈问题不能重复 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._TrainFBQuesitonType_Hasused">
            <summary>
              查找类似 该问题类型已被使用 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Upload_Failed">
            <summary>
              查找类似 上传失败 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._Vacation_Not_Exist">
            <summary>
              查找类似 该年假信息不存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._WithOut_EmployeeName">
            <summary>
              查找类似 没有“姓名”列 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources._XML_Error">
            <summary>
              查找类似 xml读取错误，请联系管理员 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources.DbError">
            <summary>
              查找类似 数据库访问错误 的本地化字符串。
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.ExceptionResources.FillItemsActivity_InvalidItem">
            <summary>
              查找类似 无效的考评项 的本地化字符串。
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.UpdateEmployeeProxy">
            <summary>
            更新员工信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateEmployeeProxy.#ctor(SEP.HRMIS.Model.Employee,SEP.Model.Accounts.Account)">
            <summary>
            更新员工信息
            </summary>
            <param name="employee"></param>
            <param name="operatoraccount"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateEmployeeProxy.BeforeTranscation">
            <summary>
            定义该Transcation处理之前要做的工作,验证权限之类的工作可以在这里处理
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateEmployeeProxy.AfterTranscation">
            <summary>
            定义该Transcation成功后要做的工作，记录日志之类的工作可以在这里处理
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceOutInRecord">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceOutInRecord.#ctor(SEP.Model.Accounts.Account)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceOutInRecord.#ctor(SEP.HRMIS.IDal.IEmployee,SEP.HRMIS.IDal.IAttendanceInAndOutRecord,SEP.IBll.Accounts.IAccountBll,SEP.Model.Accounts.Account)">
            <summary>
            测试专用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceOutInRecord.GetAttendanceOutInRecordByCondition(System.String,System.Nullable{System.Int32},System.Int32,System.DateTime,System.DateTime,SEP.HRMIS.Model.OutInTimeConditionEnum)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceOutInRecord.GetEmployeeInAndOutRecordByCondition(System.Int32,System.String,System.Int32,System.String,System.DateTime,System.DateTime,SEP.HRMIS.Model.InOutStatusEnum,SEP.HRMIS.Model.OutInRecordOperateStatusEnum,System.DateTime,System.DateTime)">
            <summary>
            用于查询某个员工更多信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceOutInRecord.GetEmployeeInAndOutRecordByEmployeeId(System.Int32)">
            <summary>
            通过员工ID查找出员工的出入信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.AttendanceOutInRecord.GetSelfAttendanceInAndOutRecordByCondition(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            得到员工自己的进出记录
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.AAUtility">
            <summary>
            
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.AAUtility._CheckNormal_Days">
            <summary>
            常规考核时间点，提前60天——〉改为30天
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.AAUtility._CheckProbationI_Days">
            <summary>
            试用期I考核，合同开始时间后两个半月，75天
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.AAUtility._CheckProbationIIOneYear_Days">
            <summary>
            试用期II考核，合同开始时间后一个半月，45天
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.AAUtility._CheckProbationII_Days">
            <summary>
            试用期II考核，合同开始时间后五个月，150天
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.AAUtility._CheckPracticeI_Month">
            <summary>
            实习期I考核，3月
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.AAUtility._CheckPracticeI_Day">
            <summary>
            实习期I考核，5日
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.AAUtility._CheckPracticeII_Day">
            <summary>
            实习期II考核，实习合同期结束前15天
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AssessActivity.AAUtility._RightItemCount">
            <summary>
            考评模板表中正确的item数量
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.AAUtility.GetCharacterNameByType(SEP.HRMIS.Model.AssessCharacterType)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.JudgeProbation">
            <summary>
            判断是否在试用期，试用期无法申请年假
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.JudgeProbation.#ctor(System.Collections.Generic.List{SEP.HRMIS.Model.Request.LeaveRequestItem},System.Int32,SEP.HRMIS.Model.Request.LeaveRequestType,SEP.HRMIS.IDal.IEmployee)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.JudgeProbation.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.JudgeProbation.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.DiyProcesses.DeleteDiyProcess">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.DeleteDiyProcess.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.DeleteDiyProcess.#ctor(System.Int32,SEP.HRMIS.IDal.IDiyProcessDal,SEP.HRMIS.IDal.IEmployeeDiyProcessDal)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.DiyProcesses.AddDiyProcess">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.AddDiyProcess.#ctor(SEP.HRMIS.Model.DiyProcesss.DiyProcess)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.DiyProcesses.AddDiyProcess.#ctor(SEP.HRMIS.Model.DiyProcesss.DiyProcess,SEP.HRMIS.IDal.IDiyProcessDal)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.ExportLeaderAssessForm">
            <summary>
            用于导出考评表
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportLeaderAssessForm.#ctor(System.Int32,System.String)">
            <summary>
            用于导出考评表
            </summary>
            <param name="assessActivityId"></param>
            <param name="employeeTemplateLocation"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportLeaderAssessForm.ExcuteSelf">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportLeaderAssessForm.AddNeedRow(Microsoft.Office.Interop.Word.Table@,System.Int32,System.Int32)">
            <summary>
            根据需要在table中增加必要的行
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AdjustRules.UpdateAdjustRule">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdjustRules.UpdateAdjustRule.#ctor(SEP.HRMIS.Model.Adjusts.AdjustRule)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdjustRules.UpdateAdjustRule.#ctor(SEP.HRMIS.Model.Adjusts.AdjustRule,SEP.HRMIS.IDal.IAdjustRule)">
            <summary>
            test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AdjustRules.DeleteAdjustRule">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdjustRules.DeleteAdjustRule.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdjustRules.DeleteAdjustRule.#ctor(System.Int32,SEP.HRMIS.IDal.IEmployeeAdjustRule,SEP.HRMIS.IDal.IAdjustRule)">
            <summary>
            test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AutoCreateVacation">
            <summary>
             系统自动生成年假信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoCreateVacation.#ctor(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="date"></param>
            <param name="inComanyMonth"></param>
            <param name="createAnnualHolidayDay"></param>
            <param name="createAnnualHolidayMonth"></param>
            <param name="annualHolidayLow"></param>
            <param name="annualHolidayHigh"></param>
            <param name="deferredMonths"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoCreateVacation.#ctor(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,SEP.HRMIS.IDal.IVacation)">
            <summary>
             for 单元测试
            </summary>
            <param name="date"></param>
            <param name="inComanyMonth"></param>
            <param name="createAnnualHolidayDay"></param>
            <param name="createAnnualHolidayMonth"></param>
            <param name="annualHolidayLow"></param>
            <param name="annualHolidayHigh"></param>
            <param name="deferredMonths"></param>
            <param name="mockIVacation"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoCreateVacation.Excute">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoCreateVacation.CreatePartVacation(System.Collections.Generic.List{SEP.HRMIS.Model.Employee})">
            <summary>
            
            </summary>
            <param name="allEmployeeList"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoCreateVacation.MarginMonth(System.DateTime,System.DateTime)">
            <summary>
             求两个时间相差几个满月，相差需在12个月以内
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoCreateVacation.CreateAllVacation(System.Collections.Generic.List{SEP.HRMIS.Model.Employee})">
            <summary>
             每年固定日期生成年假
            </summary>
            <param name="allEmployeeList"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoCreateVacation.GetVacationDayNum(System.DateTime,System.DateTime)">
            <summary>
             计算出员工的年假天数
            </summary>
            <param name="comeDate"></param>
            <returns></returns>
            <param name="exercitationEnd"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoCreateVacation.Date">
            <summary>
             for unit test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.UpdateTrainCourse">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateTrainCourse.#ctor(SEP.HRMIS.Model.Course,System.Collections.Generic.List{SEP.HRMIS.Model.Skill},System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.Model.Accounts.Account)">
            <summary>
            </summary>
            <param name="course"></param>
            <param name="skills"></param>
            <param name="employees"></param>
            <param name="loginUser"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateTrainCourse.#ctor(SEP.HRMIS.Model.Course,System.Collections.Generic.List{SEP.HRMIS.Model.Skill},System.Collections.Generic.List{SEP.Model.Accounts.Account},SEP.HRMIS.IDal.ITrain,SEP.HRMIS.IDal.IEmployee,SEP.IBll.Accounts.IAccountBll,SEP.Model.Accounts.Account)">
            <summary>
            AddTrainCourse的构造函数，专为测试提供
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateTrainCourse.ExcuteSelf">
            <summary>
            调用下层的新增课程的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateTrainCourse.IsLoginUserManage(SEP.Model.Accounts.Account,SEP.Model.Accounts.Account)">
            <summary>
            判断登陆用户是否可以选择该协调员
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateFBQuesType.Validation">
            <summary>
            修改培训反馈问题类型的有效性判断
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.Train.DeleteFeedBackPaper">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Train.DeleteFeedBackPaper.#ctor(System.Int32)">
            <summary>
            该事务执行后，会删除考评表的所有信息
            异常情况:
            1.当前要删除的考评表是否存在，如果不在则给出提示，事务中断
            业务流程：
            1.有效性判断
            2.如果通过有效性判断，则调用IDal层方法进行考评表的删除（其中包括考评表中与考评项关系的删除）
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Train.DeleteFeedBackPaper.#ctor(SEP.HRMIS.IDal.IFeedBackPaper,System.Int32)">
            <summary>
            </summary>
            <param name="iPaper"></param>
            <param name="paperID"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.UpdateSkillType">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateSkillType.#ctor(SEP.HRMIS.Model.SkillType)">
            <summary>
            新增技能类型构造函数
            </summary>
            <param name="skillType"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateSkillType.#ctor(SEP.HRMIS.Model.SkillType,SEP.HRMIS.IDal.IParameter)">
            <summary>
            AddSkillType的构造函数，专为测试提供
            </summary>
            <param name="skillType"></param>
            <param name="dalSkillType"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateSkillType.ExcuteSelf">
            <summary>
            调用下层的新增技能类型的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateSkillType.Validation">
            <summary>
            新增技能类型有效性判断：
            1、技能类型不能与已有技能类型重名
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.Reimburse.FinishEmployeeReimburses._DalReimburse">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.MailAndPhone.PositionApplicationConfirmMail.SendMailToNextOperator(SEP.Model.Accounts.Account)">
            <summary>
            给下一步操作人发邮件
            </summary>
            <param name="nextOperator"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.ApproveFailPositionApplication.#ctor(System.Int32,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String)">
            <summary>
            因为流程中断，审批不通过整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.ApproveFailPositionApplication.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.ApproveFailPositionApplication.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PositionApplications.ApproveFailPositionApplication.ResultMessage">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeSalary.ValueItemsAndSave(System.Collections.Generic.IEnumerable{SEP.HRMIS.Model.PayModule.EmployeeSalary},System.Data.DataTable)">
            <summary>
            赋值并保存，将dt中的值赋值给salary
            </summary>
            <param name="salary"></param>
            <param name="dt"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeSalary.SaveEmployeeSalary(System.Int32,SEP.HRMIS.Model.PayModule.EmployeeSalaryHistory)">
            <summary>
            保存信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeSalary.ValueItemInOneRow(System.Data.DataTable,SEP.HRMIS.Model.PayModule.EmployeeSalaryHistory,System.Int32)">
            <summary>
            遍历dt中的第employeeRow行，将dt中的该行的值赋值给salaryHistory
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeSalary.InitSalary">
            <summary>
            如果没有记录则初始化
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeSalary.GetEmployeeRow(System.Data.DataTable,System.String)">
            <summary>
            员工姓名在dt中的列号
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeSalary.GetItem(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            得到某列的一个元素
            </summary>
            <param name="dt">要在哪个表中找</param>
            <param name="rowID">第几行找，从0开始</param>
            <param name="columnName">列名</param>
            <returns>返回该表的指定列名，指定行的数据，无则返回EmptyNull</returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeSalary.GetColumnIndex(System.Data.DataTable,System.String)">
            <summary>
            得到列号
            </summary>
            <param name="dt"></param>
            <returns>没有则返回-1</returns>
            <param name="columnName">列名</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.ImportEmployeeSalary.FirstSheetName(System.Data.OleDb.OleDbConnection)">
            <summary>
            得到第一个工作表，如果工作表个数不是1则抛错
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CreateEmployeeSalary">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CreateEmployeeSalary.#ctor(System.Int32,System.DateTime,System.String,System.String)">
            <summary>
            </summary>
            <param name="employeeID"></param>
            <param name="dt"></param>
            <param name="backAcountsName"></param>
            <param name="description"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CreateEmployeeSalary.#ctor(System.Int32,System.DateTime,System.String,System.String,SEP.HRMIS.IDal.PayModule.IEmployeeSalary,SEP.HRMIS.IDal.PayModule.IAccountSet,SEP.HRMIS.IDal.PayModule.IEmployeeAccountSet)">
            <summary>
            </summary>
            <param name="employeeID"></param>
            <param name="dt"></param>
            <param name="backAcountsName"></param>
            <param name="description"></param>
            <param name="mockSalary"></param>
            <param name="mockaccountSet"></param>
            <param name="mockEmployeeAccountSet"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CreateEmployeeSalary.ExcuteSelf">
            <summary>
            当id是初始化薪资还是更新薪资
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CreateEmployeeSalary.MakeEmployeeSalary">
            <summary>
            组装数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CreateEmployeeSalary.ExecutBindValue(System.Int32,System.DateTime)">
            <summary>
            执行获取绑定值方法
            </summary>
            <param name="accountID"></param>
            <param name="salaryTime"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CreateEmployeeSalary.MakeEmployeeLastYearSalary(System.Int32)">
            <summary>
            取得十二月工资
            </summary>
            <param name="accountID"></param>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.EmployeeAccountSet.CreateEmployeeSalary.EmployeeSalaryID">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkSubmitPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkSubmitPhone.#ctor(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkSubmitPhone.SendPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.MailAndPhone.OverWorkSubmitPhone.BuildBody(SEP.HRMIS.Model.OverWork.OverWork,SEP.HRMIS.Model.OverWork.OverWorkItem)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.CancelOverWorkItem">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.CancelOverWorkItem.#ctor(System.Int32,System.String,SEP.Model.Accounts.Account)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.CancelOverWorkItem.CancelOneItem(SEP.HRMIS.Model.OverWork.OverWorkItem,SEP.Model.Accounts.Account,System.String,SEP.HRMIS.IDal.IOverWork,SEP.HRMIS.Bll.OverWorks.OverWorkDiyProcessUtility)">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.AddLeaveRequest">
            <summary>
            新增请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.AddLeaveRequest.#ctor(SEP.HRMIS.Model.Request.LeaveRequest,System.Boolean)">
            <summary>
            新增请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.AddLeaveRequest.#ctor(SEP.HRMIS.Model.Request.LeaveRequest,System.Boolean,SEP.HRMIS.IDal.IVacation,SEP.HRMIS.IDal.IAdjustRest,SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal,SEP.HRMIS.IDal.IEmployeeDiyProcessDal,SEP.HRMIS.IDal.IOverWork,SEP.HRMIS.IDal.IOutApplication,SEP.HRMIS.IDal.IPlanDutyDal,SEP.HRMIS.IDal.ILeaveRequestType,SEP.HRMIS.IDal.IEmployee)">
            <summary>
            新增请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.AddLeaveRequest.Validation">
            <summary>
            有效性判断
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.AddLeaveRequest.ExcuteSelf">
            <summary>
            新增请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.AddLeaveRequest.PrepareLeaveRequestFlow(SEP.HRMIS.Model.Request.LeaveRequestItem)">
            <summary>
            准备流程所需的插入数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.ExportEmployeeInfo">
            <summary>
            导出员工基本信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.ExportEmployeeInfo.#ctor(System.Int32,System.String)">
            <summary>
            导出员工基本信息构造函数
            </summary>
            <param name="employeeID"></param>
            <param name="employeeTemplateLocation"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.ExportEmployeeInfo.ExcuteSelf">
            <summary>
            执行导出方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.ExportEmployeeInfo.CreatePicture">
            <summary>
            新增一个临时照片
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.ExportEmployeeInfo.AddNeedRow(Microsoft.Office.Interop.Word.Table@,System.Int32,System.Int32)">
            <summary>
            根据需要在table中增加必要的行
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.EmployeeCache.GetAllEmployeeBasicInfoFromCache">
            <summary>
            所有员工的基本信息(包括二进制流信息，不包括其他需要再次加载的信息)
            可以访问到员工的电话信息等二进制流的信息
            但是却无法访问员工的合同信息/报销信息/考勤信息/邮件帐号/年假信息/等
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetBadAttendance.GetAbsentAttendanceByAccountAndRelatedDate(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获得与fromDate-toDate事件上有交集的缺勤信息
            </summary>
            <param name="accountID"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetBadAttendance.GetCalendarByEmployee(System.Int32,System.DateTime,System.DateTime,SEP.HRMIS.Model.AttendanceTypeEmnu)">
            <summary>
             转换为日历显示
            </summary>
            <param name="employeeId"></param>
            <param name="theDayFrom"></param>
            <param name="theDayTo"></param>
            <param name="attendaceType"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetBadAttendance.GetAttendanceBaseListDetailByEmployee(System.Int32,System.DateTime)">
            <summary>
            获取某一天的出勤情况
            </summary>
            <param name="employeeID"></param>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.MyAttendanceCalendar">
            <summary>
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AttendanceStatistics.MyAttendanceCalendar._GetBadAttendance">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.MyAttendanceCalendar.#ctor(SEP.Model.Accounts.Account)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.MyAttendanceCalendar.GetCalendarByEmployee(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            把员工的考勤情况，如外出，加班，请假，迟到早退等信息赋值给员工，用于在日历控件中显示员工的考勤情况
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.UpdateAssessItem.#ctor(SEP.HRMIS.Model.AssessTemplateItem)">
            <summary>
            该事务执行后，会修改考评表的基本信息
            异常情况:
            1.当前要修改的考评项是否存在，如果不在则给出提示，事务中断
            2.Question不可与已有Item的Question重复，否则给出提示，事务中断
            业务流程：
            1.有效性判断
            2.如果通过有效性判断，则调用IDal层方法进行考评表修改
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.JudgeAdjustRestCanDelete">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.JudgeAdjustRestCanDelete.#ctor(System.Collections.Generic.List{SEP.HRMIS.Model.Request.LeaveRequestItem},System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.JudgeAdjustRestCanDelete.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.FillHRItems">
            <summary>
            填写人事考评项的事务
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillHRItems.#ctor(System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.AssessActivityItem},System.String,System.Boolean,System.String,System.Nullable{System.Decimal})">
            <summary>
            填写人事考评项的事务
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillHRItems.#ctor(System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.AssessActivityItem},System.String,System.Boolean,System.String,SEP.HRMIS.IDal.IAssessActivity)">
            <summary>
            填写人事考评项的事务
            </summary>
            <param name="activityId"></param>
            <param name="answers"></param>
            <param name="comments"></param>
            <param name="ifSubmit"></param>
            <param name="currentEmployeeName"></param>
            <param name="ia"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.DeleteVacationByLeaveReuqest">
            <summary>
            扣除年假
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteVacationByLeaveReuqest.#ctor">
            <summary>
            for test
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteVacationByLeaveReuqest.#ctor(System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.Request.LeaveRequestItem},SEP.HRMIS.Model.Request.LeaveRequestType)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteVacationByLeaveReuqest.Init(SEP.HRMIS.Model.Request.LeaveRequestItem)">
            <summary>
            初始化信息
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteVacationByLeaveReuqest.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteVacationByLeaveReuqest.InitCostHour(SEP.HRMIS.Model.Request.LeaveRequestItem)">
            <summary>
            计算要扣除的小时数
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteVacationByLeaveReuqest.DeleteVacationHour(SEP.HRMIS.Model.Vacation,System.Decimal,SEP.HRMIS.Model.Request.LeaveRequestItem)">
            <summary>
            扣除，如果不够，则报错
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.DeleteVacationByLeaveReuqest.TestExcute(System.Int32,System.Collections.Generic.List{SEP.HRMIS.Model.Request.LeaveRequestItem},SEP.HRMIS.Model.Request.LeaveRequestType,System.Collections.Generic.List{SEP.HRMIS.Model.Vacation},System.Collections.Generic.List{SEP.Model.Calendar.DayAttendance},SEP.HRMIS.IDal.IVacation)">
            <summary>
            用于测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.LeaveRequests.DeleteVacationByLeaveReuqest.IsUpdateVacation">
            <summary>
            是否真的更新数据库
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.FileCargos.DeleteFileCargo">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.FileCargos.DeleteFileCargo.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.FileCargos.AddFileCargo">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.FileCargos.AddFileCargo.#ctor(SEP.HRMIS.Model.FileCargo)">
            <summary>
            
            </summary>
            <param name="fileCargo"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByLeaveRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByLeaveRequest.#ctor(SEP.HRMIS.Model.Request.LeaveRequestItem,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.UpdateAdjustRestByLeaveRequest.Excute">
            <summary>
            提交—>通过(扣)—>取消—>通过取消(返还)—>再编辑(不动)
            提交—>通过(扣)—>取消—>拒绝取消(不动)—>再编辑(返还)
            提交—>通过(扣)—>取消—>再编辑(返还)
            提交—>通过(扣)—>再编辑(返还)
            提交—>不通过(不动)—>再编辑(不动)
            提交—>再编辑(不动)
            提交—>取消—>通过取消(不动)—>再编辑(不动)
            提交—>取消—>拒绝取消(扣)—>再编辑(返还)
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacationSendEmail">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacationSendEmail.#ctor(System.DateTime,System.Collections.Generic.List{System.DateTime})">
            <summary>
            </summary>
            <param name="date"></param>
            <param name="dateList"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacationSendEmail.#ctor(System.DateTime,System.Collections.Generic.List{System.DateTime},SEP.HRMIS.IDal.IVacation)">
            <summary>
            构造函数，为测试
            </summary>
            <param name="date"></param>
            <param name="dateList"></param>
            <param name="iVacationmock"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacationSendEmail.Excute">
            <summary>
            </summary>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacationSendEmail.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacationSendEmail.SetMailGateWay">
            <summary>
            仅仅用于测试邮件关口
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindVacationSendEmail.MailBodyList">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AutoRemindServer.AutoAssess">
            <summary>
            自动发起考评
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.AutoRemindServer.AutoAssess._ManualAssess">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoAssess.#ctor(System.DateTime)">
            <summary>
            SystemAssess的构造函数
            </summary>
            <param name="currDate">当前的时间日期</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoAssess.#ctor(SEP.HRMIS.IDal.IContract,System.DateTime)">
            <summary>
            AutoAssess的构造函数，专为测试提供
            </summary>
            <param name="mockContract">测试中的Contractmock对象</param>
            <param name="currDate">当前的时间日期</param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoAssess.SetMailGateWay">
            <summary>
            仅仅用于测试邮件关口
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoAssess.MailBodyListToHR">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoAssess.MockGetDiyProcess">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoAssess.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.InsertPlanDuty">
            <summary>
            新增排班
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.InsertPlanDuty.#ctor(SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.PlanDutyTable)">
            <summary>
            新增班别构造函数
            </summary>
            <param name="planDutyTable"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.InsertPlanDuty.#ctor(SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.PlanDutyTable,SEP.HRMIS.IDal.IPlanDutyDal)">
            <summary>
            新增班别构造函数，测试
            </summary>
            <param name="planDutyTable"></param>
            <param name="ruleMock"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AttendanceStatistics.InsertPlanDuty.CurrentId">
            <summary>
            当前ID，为测试使用
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.AssessSystemUtility">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.AssessSystemUtility.GetCharacterNameByType(SEP.HRMIS.Model.AssessCharacterType)">
            <summary>
            </summary>
            <param name="assessCharacterType"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.AssessSystemUtility.GetItemClassficationNameByItemClassfication(SEP.HRMIS.Model.ItemClassficationEmnu)">
            <summary>
            </summary>
            <param name="itemClassficationEmnu"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.DeleteDutyClass">
            <summary>
            删除班别
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.DeleteDutyClass.#ctor(System.Int32)">
            <summary>
            修改班别，构造函数
            </summary>
            <param name="dutyClassID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.DeleteDutyClass.#ctor(System.Int32,SEP.HRMIS.IDal.IPlanDutyDal)">
            <summary>
            测试用
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.DeleteDutyClass.Validation">
            <summary>
            修改时查看该条记录是否存在，并判断是否有重名
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.UpdateVacationByLeaveRequest">
            <summary>
            根据请假单的状态添加/扣除年假记录
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateVacationByLeaveRequest.#ctor(SEP.HRMIS.Model.Request.LeaveRequest,SEP.HRMIS.Model.Request.LeaveRequestItem)">
            <summary>
            构造函数 根据请假单的状态添加/扣除年假记录
            </summary>
            <param name="leaverequest"></param>
            <param name="item">请假项的Status是新的期望状态</param>
        </member>
        <member name="M:SEP.HRMIS.Bll.UpdateVacationByLeaveRequest.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMail">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMail.SendSubmitMail(SEP.HRMIS.Model.TraineeApplications.TraineeApplication)">
            <summary>
            发送提交邮件
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMail.BuildBody(SEP.HRMIS.Model.TraineeApplications.TraineeApplication)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMail.BulidConfirmAddress(System.Text.StringBuilder,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMail.SendMailToNextOperator(SEP.HRMIS.Model.TraineeApplications.TraineeApplication,SEP.Model.Accounts.Account,System.Int32)">
            <summary>
            发送邮件给下一步处理人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TraineeApplicationMail.SendConfirmOverMail(SEP.HRMIS.Model.TraineeApplications.TraineeApplication,System.Collections.Generic.List{SEP.Model.Accounts.Account},System.Int32)">
            <summary>
            发送审核结束邮件
            </summary>
            <param name="traineeApplication"></param>
            <param name="hrAccountlist"></param>
            <param name="currentAccountID"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TAMailAndPhoneUtility">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.TraineeApplications.MailAndPhone.TAMailAndPhoneUtility.GetMailToAccount(SEP.HRMIS.Model.TraineeApplications.TraineeApplication,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="traineeApplication"></param>
            <returns></returns>
            <param name="diyStep"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddSkill">
            <summary>
            新增技能
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSkill.#ctor(SEP.HRMIS.Model.Skill)">
            <summary>
            新增技能构造函数
            </summary>
            <param name="skill"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSkill.#ctor(SEP.HRMIS.Model.Skill,SEP.HRMIS.IDal.ISkill)">
            <summary>
            AddSkill的构造函数，专为测试提供
            </summary>
            <param name="skill"></param>
            <param name="dalSkill"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSkill.ExcuteSelf">
            <summary>
            调用下层的新增技能的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSkill.Validation">
            <summary>
            新增技能有效性判断：
            1、技能不能与已有技能重名
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.GetPositionApplication.ChangeOperatorToEmployee(SEP.HRMIS.Model.PositionApp.PositionApplication,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            
            </summary>
            <param name="positionApplication"></param>
            <param name="diyStep"></param>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.CalculateOutHour">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CalculateOutHour.#ctor(System.DateTime,System.DateTime,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="accountID"></param>
            <param name="typeName"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CalculateOutHour.#ctor(System.DateTime,System.DateTime,System.Int32)">
            <summary>
            
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="accountID"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CalculateOutHour.Excute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.CalculateOutHour.TestCalculate(System.Decimal,System.Collections.Generic.List{SEP.HRMIS.Model.EmployeeAttendance.PlanDutyModel.PlanDutyDetail})">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.OutApplications.CalculateOutHour.DayAttendanceList">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddSystemSetConditionForContinuedLabour">
            <summary>
            系统自动生成发起考评条件（续签合同）
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddSystemSetConditionForContinuedLabour.AddSystemSetCondition(System.Collections.Generic.List{SEP.HRMIS.Model.ApplyAssessCondition},System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            实现IAddSystemSetCondition，将信息填充到conditions中
            </summary>
            <param name="conditions"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="employeeComeDate"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.AddContractType">
            <summary>
            新增合同类型
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddContractType.#ctor(SEP.HRMIS.Model.ContractType)">
            <summary>
            新增合同类型构造函数
            </summary>
            <param name="contractType"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddContractType.#ctor(SEP.HRMIS.Model.ContractType,SEP.HRMIS.IDal.IContractType)">
            <summary>
            AddContractType的构造函数，专为测试提供
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddContractType.ExcuteSelf">
            <summary>
            调用下层的新增合同类型的方法
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AddContractType.Validation">
            <summary>
            新增合同类型有效性判断：
            1、合同类型不能与已有合同类型重名
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.DeleteAssessItem.#ctor(System.Int32)">
            <summary>
            该事务执行后，会删除考评项的所有信息
            异常情况:
            1.当前要删除的考评项是否存在，如果不在则给出提示，事务中断
            2.当前要删除的考评项与考评表有关系，如果是某考评表中的考评项，给出提示，事务中断
            业务流程：
            1.有效性判断
            2.如果通过有效性判断，则调用IDal层方法进行考评项的删除（其中包括考评项中与考评项关系的删除）
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.Nationalitys.UpdateNationality">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.Nationalitys.UpdateNationality.#ctor(SEP.HRMIS.Model.Nationality)">
            <summary>
            
            </summary>
            <param name="nationality"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.Nationalitys.UpdateNationality.#ctor(SEP.HRMIS.Model.Nationality,SEP.HRMIS.IDal.IParameter,SEP.HRMIS.IDal.IEmployee)">
            <summary>
            for test
            </summary>
            <param name="nationality"></param>
            <param name="mockIParameter"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestPhone">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestPhone.SendSubmitPhone(System.Int32,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送提交短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestPhone.SendCancelPhone(System.Int32,SEP.HRMIS.Model.Request.LeaveRequestItem,SEP.HRMIS.Model.DiyProcesss.DiyStep)">
            <summary>
            发送取消短信
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestPhone.SendPhoneToNextOperator(System.Int32,SEP.HRMIS.Model.Request.LeaveRequestItem,System.Int32,System.Int32)">
            <summary>
            发送短信给下一步处理人
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestPhone.SendConfirmOverPhone(System.Int32,SEP.HRMIS.Model.Request.LeaveRequestItem,SEP.HRMIS.Model.DiyProcesss.DiyStep,System.Int32)">
            <summary>
            发送审核结束短信
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestConfirmMail">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestConfirmMail.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.MailAndPhone.LeaveRequestConfirmMail.SendMailToNextOperator(SEP.Model.Accounts.Account)">
            <summary>
            给下一步操作人发邮件
            </summary>
            <param name="nextOperator"></param>
        </member>
        <member name="T:SEP.HRMIS.Bll.ImportEmployeeWelfare">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.ImportEmployeeWelfare.#ctor(System.String,SEP.Model.Accounts.Account)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.ImportEmployeeWelfare.ValueItemsAndSave(System.Collections.Generic.IEnumerable{SEP.HRMIS.Model.EmployeeWelfare},System.Data.DataTable)">
            <summary>
            赋值并保存，将dt中的值赋值给salary
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.EmployeeAdjustRest.DeleteAdjustRestByLeaveRequest">
            <summary>
            当申请的调休通过后，扣除调休
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.DeleteAdjustRestByLeaveRequest.#ctor(SEP.HRMIS.Model.Request.LeaveRequestItem,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.DeleteAdjustRestByLeaveRequest.Excute">
            <summary>
            将请的调休分到每一天
            然后看要更新那些调休，让好取出
            更新调休
            然后记录历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.DeleteAdjustRestByLeaveRequest.Excute(System.Collections.Generic.List{SEP.HRMIS.Model.EmployeeAdjustRest.AdjustRest})">
            <summary>
            用于验证是否可以删除
            </summary>
            <param name="adjustRestList"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.DeleteAdjustRestByLeaveRequest.UpdateAdjustRestDB(System.Collections.Generic.IEnumerable{SEP.HRMIS.Model.EmployeeAdjustRest.AdjustRest},System.Boolean)">
            <summary>
            更新调休
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.DeleteAdjustRestByLeaveRequest.CreateHistory">
            <summary>
            记录历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.DeleteAdjustRestByLeaveRequest.InitUpdateAdjustRestList(System.Collections.Generic.List{SEP.HRMIS.Model.EmployeeAdjustRest.AdjustRest})">
            <summary>
             初始化有多少个要更改的adjustrest
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.DeleteAdjustRestByLeaveRequest.Contain(System.DateTime,System.Collections.Generic.IEnumerable{SEP.HRMIS.Model.EmployeeAdjustRest.AdjustRest})">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.EmployeeAdjustRest.DeleteAdjustRestByLeaveRequest.ContainByYear(System.DateTime,System.Collections.Generic.IEnumerable{SEP.HRMIS.Model.EmployeeAdjustRest.AdjustRest})">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.CustomerInfos.GetCustomerInfo">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CustomerInfos.GetCustomerInfo.GetCustomerInfoByCustomerInfoID(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CustomerInfos.GetCustomerInfo.GetCustomerInfoByNameLike(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.CustomerInfos.GetCustomerInfo.GetCustomerIDInfoByName(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeAnnualSummary">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeAnnualSummary.#ctor(System.Int32,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeAnnualSummary.Excute">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeAnnualSummary.InitSubmitInfoIndex">
            <summary>
            初始化第几个考评是个人考评
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeAnnualSummary.AddNeedRow(Microsoft.Office.Interop.Word.Table@,System.Int32,System.Int32)">
            <summary>
            根据需要在table中增加必要的行
            </summary>
        </member>
        <member name="F:SEP.HRMIS.Bll.Reimburse.ReturntOrCancelReimburses._DalReimburse">
            <summary>
            构造类工厂
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PositionApplications.DeletePositionApplication.#ctor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.Tax.SaveTaxCutoffPoint.#ctor(System.Decimal,System.Decimal,SEP.HRMIS.IDal.PayModule.ITax)">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSetPara">
            <summary>
            新增帐套项
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSetPara.#ctor(System.Int32,System.String,SEP.HRMIS.Model.PayModule.FieldAttributeEnum,SEP.HRMIS.Model.PayModule.BindItemEnum,SEP.HRMIS.Model.PayModule.MantissaRoundEnum,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSetPara.#ctor(System.Int32,System.String,SEP.HRMIS.Model.PayModule.FieldAttributeEnum,SEP.HRMIS.Model.PayModule.BindItemEnum,SEP.HRMIS.Model.PayModule.MantissaRoundEnum,System.String,System.String,System.Boolean,System.Boolean,SEP.HRMIS.IDal.PayModule.IAccountSet,SEP.HRMIS.IDal.PayModule.IEmployeeAccountSet)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSetPara.UpdateEmployeeAccountSetWithNewPara">
            <summary>
            更新相关员工的帐套
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSetPara.AccountSetParaForTest">
            <summary>
            for test
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.PayModule.AccountSet.UpdateAccountSetPara.EmployeeSalaryListTest">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OverWorks.ApproveOverWorkItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.ApproveOverWorkItem.#ctor(System.Int32,System.Int32,System.Boolean,System.String,System.Boolean,System.Int32,System.Decimal)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.ApproveOverWorkItem.#ctor(System.Int32,System.Int32,System.Boolean,System.String,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.ApproveOverWorkItem.#ctor(System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.ApproveOverWorkItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OverWorks.ApproveOverWorkItem.ApproveOneItem(SEP.HRMIS.Model.OverWork.OverWorkItem,System.Boolean,SEP.Model.Accounts.Account,SEP.HRMIS.Model.OverWork.OverWork,System.String,SEP.HRMIS.IDal.IOverWork,SEP.HRMIS.Bll.OverWorks.OverWorkDiyProcessUtility,System.Boolean,System.Boolean,System.Decimal,SEP.Model.Accounts.Account@)">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.GetOutApplication">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetOutApplicationByOutApplicationID(System.Int32)">
            <summary> 
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetOutApplicationItemByItemID(System.Int32)">
            <summary> 
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetAllOutApplicationByAccountID(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetConfirmOutApplicationByNextOperatorID(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetConfirmHistroy(System.Int32,System.String,System.DateTime,System.DateTime)">
             <summary>
            
             </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetOutApplicationFlowList(System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetCalendarByEmployee(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetAllCalendarByEmployee(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetOutApplicationByAccountAndRelatedDate(System.Int32,System.DateTime,System.DateTime)">
            <summary>
            获得与fromDate-toDate事件上有交集的外出信息
            </summary>
            <param name="accountID"></param>
            <param name="fromDate"></param>
            <param name="toDate"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetTypeName(SEP.HRMIS.Model.OutApplication.OutApplicationItem,System.String)">
            <summary>
            -1 全部;0 新增;1 提交;2 审核不通过;3 审核通过;4 取消请假;5 拒绝取消假期;6 批准取消假期;7 审核中;8 审核取消中
            </summary>
            <param name="item"></param>
            <param name="typeName"></param>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.GetOutApplication.GetOutApplicationDetailByEmployee(System.Int32,System.DateTime)">
            <summary>
            
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.OutApplications.GetOutApplication.MockIOutApplication">
            <summary>
            for test
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.OutApplications.ApproveWholeOutApplication">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.ApproveWholeOutApplication.#ctor(System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.ApproveWholeOutApplication.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.OutApplications.ApproveWholeOutApplication.ExcuteSelf">
            <summary>
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.InitEmployeeProxy">
            <summary>
            初始化员工信息
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.InitEmployeeProxy.#ctor(System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            初始化员工
            </summary>
            <param name="newEmployeeAccountID"></param>
            <param name="operatoraccount"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.InitEmployeeProxy.BeforeTranscation">
            <summary>
            定义该Transcation处理之前要做的工作,验证权限之类的工作可以在这里处理
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.InitEmployeeProxy.AfterTranscation">
            <summary>
            定义该Transcation成功后要做的工作，记录日志之类的工作可以在这里处理
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetEmployeeComeAndLeave">
            <summary>
            关于员工在职离职统计
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeComeAndLeave.ComeAndLeaveStatistics(System.DateTime,System.Int32,SEP.Model.Accounts.Account)">
            <summary>
            统计人员流动情况
            </summary>
            <param name="dt">统计时间，以该时间为基准，统计包括该月在内的近一年的情况</param>
            <param name="departmentID">部门编号</param>
            <returns>到统计时间为止，近一年的人员流动情况</returns>
            <param name="accountoperator"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeComeAndLeave.ComeAndLeaveStatisticsOnlyOneMonth(System.DateTime,System.Int32,SEP.Model.Accounts.Account,System.Collections.Generic.List{SEP.HRMIS.Model.Employee},System.Collections.Generic.List{SEP.HRMIS.Model.Employee}@,System.Collections.Generic.List{SEP.HRMIS.Model.Employee})">
            <summary>
            统计人员流动情况
            </summary>
            <param name="dt">统计时间，以该时间为基准，统计包括该月在内的近一年的情况</param>
            <param name="departmentID">部门编号</param>
            <returns>到统计时间为止，近一年的人员流动情况</returns>
            <param name="accountoperator"></param>
            <param name="endDtEmployeeList">可以为null</param>
            <param name="outEndDtEmployeeList">可以为null</param>
            <param name="allEmployeeSource">可以为null</param>
        </member>
        <member name="P:SEP.HRMIS.Bll.GetEmployeeComeAndLeave.MockGetEmployeeHistory">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataInfo">
            <summary>
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataInfo.GetAttendanceReadRuleByPkid(System.Int32)">
            <summary>
            通过pkid查找读取考勤的规则
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataInfo.GetAllReadDataHistory">
            <summary>
            得到所有的读取考勤数据的历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataInfo.GetReadDataHistoryByPkid(System.Int32)">
            <summary>
            通过pkid查找读取考勤数据的历史
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AttendanceStatistics.ReadDataInfo.GetLastReadDataHistory">
            <summary>
            得到最后一次的读取考勤数据的历史
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.LeaveRequests.ApproveFailLeaveRequestItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveFailLeaveRequestItem.#ctor(System.Int32,System.Int32,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String)">
            <summary>
            因为流程中断，审批不通过整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveFailLeaveRequestItem.#ctor(System.Int32,System.Int32,System.Int32,SEP.HRMIS.Model.Request.RequestStatus,System.String,SEP.HRMIS.IDal.ILeaveRequestDal,SEP.HRMIS.IDal.ILeaveRequestFlowDal)">
            <summary>
            因为流程中断，审批不通过整张请假单
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveFailLeaveRequestItem.Validation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveFailLeaveRequestItem.ExcuteSelf">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveFailLeaveRequestItem.UpdateVacationDaysAvailable(SEP.HRMIS.Model.Request.LeaveRequestItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveFailLeaveRequestItem.IsAgreed(SEP.HRMIS.Model.Request.LeaveRequestItem)">
            <summary>
            用于判断是否该请假被审核同意过
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.LeaveRequests.ApproveFailLeaveRequestItem.PrepareLeaveRequestFlow(System.Int32)">
            <summary>
            准备流程所需的插入数据
            </summary>
            <param name="leaveRequestItemID"></param>
            <returns></returns>
        </member>
        <member name="P:SEP.HRMIS.Bll.LeaveRequests.ApproveFailLeaveRequestItem.ResultMessage">
            <summary>
            操作结果
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.GetEmployeeByDateTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeByDateTime.LeaveEmployees(System.DateTime,System.DateTime,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            获得_StartDt-_EndDt时刻在departmentID中离退的人员
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeByDateTime.NotOnDutyEmployees(System.DateTime,System.Int32,System.Boolean,System.Boolean,System.Collections.Generic.List{SEP.HRMIS.Model.Employee})">
            <summary>
            获得dt时刻不在职的员工
            allemployee允许为null
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeByDateTime.OnDutyEmployees(System.DateTime,System.Int32,System.Boolean,System.Boolean,System.Collections.Generic.List{SEP.HRMIS.Model.Employee})">
            <summary>
            获得dt时刻不在职的员工
            allemployee允许为null
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.GetEmployeeByDateTime.JoinInEmployees(System.DateTime,System.DateTime,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            获得_StartDt-_EndDt时刻在departmentID中进入的人员
            </summary>
            <returns></returns>
        </member>
        <member name="T:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindProbationDateRearch">
            <summary>
            试用期到期前n天提醒人事
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindProbationDateRearch.#ctor(System.DateTime,System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="currDate"></param>
            <param name="days"></param>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindProbationDateRearch.MockGetEmployee">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindProbationDateRearch.SetMailGateWay">
            <summary>
            仅仅用于测试邮件关口
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindProbationDateRearch.MockGetDiyProcess">
            <summary>
            测试
            </summary>
        </member>
        <member name="P:SEP.HRMIS.Bll.AutoRemindServer.AutoRemindProbationDateRearch.MailBodyListToHR">
            <summary>
            测试
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeSelfAssessForm">
            <summary>
            用于导出考评表
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeSelfAssessForm.#ctor(System.Int32,System.String)">
            <summary>
            用于导出考评表
            </summary>
            <param name="assessActivityId"></param>
            <param name="employeeTemplateLocation"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeSelfAssessForm.ExcuteSelf">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.ExportEmployeeSelfAssessForm.AddNeedRow(Microsoft.Office.Interop.Word.Table@,System.Int32,System.Int32)">
            <summary>
            根据需要在table中增加必要的行
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AssessActivity.FillSummarizeCommment">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillSummarizeCommment.#ctor(System.Int32,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="activityId"></param>
            <param name="comment"></param>
            <param name="currentEmployeeName"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillSummarizeCommment.#ctor(System.Int32,System.String,System.String,SEP.HRMIS.IDal.IAssessActivity)">
            <summary>
            
            </summary>
            <param name="activityId"></param>
            <param name="comment"></param>
            <param name="currentEmployeeName"></param>
            <param name="iAssessActivity"></param>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillSummarizeCommment.SetSubmitInfomation">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AssessActivity.FillSummarizeCommment.ValidateSelf">
            <summary>
            
            </summary>
        </member>
        <member name="T:SEP.HRMIS.Bll.AdjustRules.GetAdjustRule">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdjustRules.GetAdjustRule.GetAdjustRuleByAdjustRuleID(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:SEP.HRMIS.Bll.AdjustRules.GetAdjustRule.GetAdjustRuleByNameLike(System.String)">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
